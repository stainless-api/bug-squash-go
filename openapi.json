{
  "openapi": "3.0.2",
  "info": { "version": "0.0.1", "title": "Increase API" },
  "paths": {
    "/accounts": {
      "post": {
        "summary": "Create an Account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/create_an_account_parameters" } }
          }
        },
        "operationId": "create_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      },
      "get": {
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Accounts for those belonging to the specified Entity."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          },
          {
            "name": "informational_entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Accounts for those belonging to the specified Entity as informational."
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["open", "closed"],
              "description": "Filter Accounts for those with the specified status.",
              "x-enum-descriptions": [
                "Open Accounts that are ready to use.",
                "Closed Accounts on which no new activity can occur."
              ]
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_accounts",
        "responses": {
          "200": {
            "description": "Account List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/accounts/{account_id}": {
      "patch": {
        "summary": "Update an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Account to update." },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/update_an_account_parameters" } }
          }
        },
        "operationId": "update_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      },
      "get": {
        "summary": "Retrieve an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Account to retrieve." },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "operationId": "retrieve_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/accounts/{account_id}/balance": {
      "get": {
        "summary": "Retrieve an Account Balance",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Account to retrieve." },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "at_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "The moment to query the balance at. If not set, returns the current balances."
            }
          }
        ],
        "operationId": "retrieve_an_account_balance",
        "responses": {
          "200": {
            "description": "Balance Lookup",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/balance_lookup" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/accounts/{account_id}/close": {
      "post": {
        "summary": "Close an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account to close. The account must have a zero balance."
            },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "operationId": "close_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/account_numbers": {
      "post": {
        "summary": "Create an Account Number",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_account_number_parameters" }
            }
          }
        },
        "operationId": "create_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account_number" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Numbers"
      },
      "get": {
        "summary": "List Account Numbers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "disabled", "canceled"],
              "description": "The status to retrieve Account Numbers for.",
              "x-enum-descriptions": [
                "The account number is active.",
                "The account number is temporarily disabled.",
                "The account number is permanently disabled."
              ]
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Numbers to those belonging to the specified Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_account_numbers",
        "responses": {
          "200": {
            "description": "Account Number List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_number_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Numbers"
      }
    },
    "/account_numbers/{account_number_id}": {
      "patch": {
        "summary": "Update an Account Number",
        "parameters": [
          {
            "name": "account_number_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Account Number." },
            "example": "account_number_v18nkfqm6afpsrvy82b2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/update_an_account_number_parameters" }
            }
          }
        },
        "operationId": "update_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account_number" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Numbers"
      },
      "get": {
        "summary": "Retrieve an Account Number",
        "parameters": [
          {
            "name": "account_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Number to retrieve."
            },
            "example": "account_number_v18nkfqm6afpsrvy82b2"
          }
        ],
        "operationId": "retrieve_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/account_number" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Numbers"
      }
    },
    "/cards": {
      "post": {
        "summary": "Create a Card",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/create_a_card_parameters" } }
          }
        },
        "operationId": "create_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Cards"
      },
      "get": {
        "summary": "List Cards",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Cards to ones belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_cards",
        "responses": {
          "200": {
            "description": "Card List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/cards/{card_id}/details": {
      "get": {
        "summary": "Retrieve sensitive details for a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Card to retrieve details for."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "operationId": "retrieve_sensitive_details_for_a_card",
        "responses": {
          "200": {
            "description": "Card Details",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_details" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/cards/{card_id}": {
      "patch": {
        "summary": "Update a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The card identifier." },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/update_a_card_parameters" } }
          }
        },
        "operationId": "update_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Cards"
      },
      "get": {
        "summary": "Retrieve a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card." },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "operationId": "retrieve_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/card_payments": {
      "get": {
        "summary": "List Card Payments",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Card Payments to ones belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "card_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Card Payments to ones belonging to the specified Card."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_card_payments",
        "responses": {
          "200": {
            "description": "Card Payment List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/card_payment_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Payments"
      }
    },
    "/card_payments/{card_payment_id}": {
      "get": {
        "summary": "Retrieve a Card Payment",
        "parameters": [
          {
            "name": "card_payment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card Payment." },
            "example": "card_payment_nd3k2kacrqjli8482ave"
          }
        ],
        "operationId": "retrieve_a_card_payment",
        "responses": {
          "200": {
            "description": "Card Payment",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_payment" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Payments"
      }
    },
    "/card_disputes": {
      "post": {
        "summary": "Create a Card Dispute",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_card_dispute_parameters" }
            }
          }
        },
        "operationId": "create_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_dispute" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Disputes"
      },
      "get": {
        "summary": "List Card Disputes",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pending_reviewing", "accepted", "rejected"],
                "x-enum-descriptions": [
                  "The Card Dispute is pending review.",
                  "The Card Dispute has been accepted and your funds have been returned.",
                  "The Card Dispute has been rejected."
                ]
              },
              "description": "Filter Card Disputes for those with the specified status or statuses. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          }
        ],
        "operationId": "list_card_disputes",
        "responses": {
          "200": {
            "description": "Card Dispute List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/card_dispute_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Disputes"
      }
    },
    "/card_disputes/{card_dispute_id}": {
      "get": {
        "summary": "Retrieve a Card Dispute",
        "parameters": [
          {
            "name": "card_dispute_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card Dispute." },
            "example": "card_dispute_h9sc95nbl1cgltpp7men"
          }
        ],
        "operationId": "retrieve_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_dispute" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Disputes"
      }
    },
    "/physical_cards": {
      "post": {
        "summary": "Create a Physical Card",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_physical_card_parameters" }
            }
          }
        },
        "operationId": "create_a_physical_card",
        "responses": {
          "200": {
            "description": "Physical Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/physical_card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Physical Cards"
      },
      "get": {
        "summary": "List Physical Cards",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "card_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Physical Cards to ones belonging to the specified Card."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_physical_cards",
        "responses": {
          "200": {
            "description": "Physical Card List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/physical_card_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Physical Cards"
      }
    },
    "/physical_cards/{physical_card_id}": {
      "patch": {
        "summary": "Update a Physical Card",
        "parameters": [
          {
            "name": "physical_card_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The Physical Card identifier." },
            "example": "physical_card_ode8duyq5v2ynhjoharl"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/update_a_physical_card_parameters" }
            }
          }
        },
        "operationId": "update_a_physical_card",
        "responses": {
          "200": {
            "description": "Physical Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/physical_card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Physical Cards"
      },
      "get": {
        "summary": "Retrieve a Physical Card",
        "parameters": [
          {
            "name": "physical_card_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Physical Card." },
            "example": "physical_card_ode8duyq5v2ynhjoharl"
          }
        ],
        "operationId": "retrieve_a_physical_card",
        "responses": {
          "200": {
            "description": "Physical Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/physical_card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Physical Cards"
      }
    },
    "/card_profiles": {
      "post": {
        "summary": "Create a Card Profile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_card_profile_parameters" }
            }
          }
        },
        "operationId": "create_a_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_profile" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Profiles"
      },
      "get": {
        "summary": "List Card Profiles",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pending", "rejected", "active", "archived"],
                "x-enum-descriptions": [
                  "The Card Profile is awaiting review from Increase and/or processing by card networks.",
                  "There is an issue with the Card Profile preventing it from use.",
                  "The Card Profile can be assigned to Cards.",
                  "The Card Profile is no longer in use."
                ]
              },
              "description": "Filter Card Profiles for those with the specified digital wallet status or statuses. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "physical_cards_status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "not_eligible",
                  "rejected",
                  "pending_creating",
                  "pending_reviewing",
                  "pending_submitting",
                  "active"
                ],
                "x-enum-descriptions": [
                  "The Card Profile is not eligible for physical cards.",
                  "There is an issue with the Physical Card Profile preventing it from use.",
                  "The Card Profile has not yet been processed by Increase.",
                  "The card profile is awaiting review by Increase.",
                  "The card profile is awaiting submission to the fulfillment provider.",
                  "The Physical Card Profile has been submitted to the fulfillment provider and is ready to use."
                ]
              },
              "description": "Filter Card Profiles for those with the specified physical card status or statuses. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          }
        ],
        "operationId": "list_card_profiles",
        "responses": {
          "200": {
            "description": "Card Profile List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/card_profile_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Profiles"
      }
    },
    "/card_profiles/{card_profile_id}": {
      "get": {
        "summary": "Retrieve a Card Profile",
        "parameters": [
          {
            "name": "card_profile_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card Profile." },
            "example": "card_profile_cox5y73lob2eqly18piy"
          }
        ],
        "operationId": "retrieve_a_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_profile" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Profiles"
      }
    },
    "/card_profiles/{card_profile_id}/archive": {
      "post": {
        "summary": "Archive an Card Profile",
        "parameters": [
          {
            "name": "card_profile_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card Profile to archive." },
            "example": "card_profile_cox5y73lob2eqly18piy"
          }
        ],
        "operationId": "archive_an_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_profile" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Profiles"
      }
    },
    "/digital_wallet_tokens": {
      "get": {
        "summary": "List Digital Wallet Tokens",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "card_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Digital Wallet Tokens to ones belonging to the specified Card."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_digital_wallet_tokens",
        "responses": {
          "200": {
            "description": "Digital Wallet Token List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/digital_wallet_token_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Digital Wallet Tokens"
      }
    },
    "/digital_wallet_tokens/{digital_wallet_token_id}": {
      "get": {
        "summary": "Retrieve a Digital Wallet Token",
        "parameters": [
          {
            "name": "digital_wallet_token_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Digital Wallet Token." },
            "example": "digital_wallet_token_izi62go3h51p369jrie0"
          }
        ],
        "operationId": "retrieve_a_digital_wallet_token",
        "responses": {
          "200": {
            "description": "Digital Wallet Token",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/digital_wallet_token" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Digital Wallet Tokens"
      }
    },
    "/transactions": {
      "get": {
        "summary": "List Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Transactions for those belonging to the specified Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_ach_transfer_return_intention",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection",
                  "other"
                ],
                "x-enum-descriptions": [
                  "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                  "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                  "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                  "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                  "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                  "Card Refund: details will be under the `card_refund` object.",
                  "Card Settlement: details will be under the `card_settlement` object.",
                  "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                  "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                  "Check Deposit Return: details will be under the `check_deposit_return` object.",
                  "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                  "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                  "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                  "Fee Payment: details will be under the `fee_payment` object.",
                  "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                  "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                  "Inbound Check: details will be under the `inbound_check` object.",
                  "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                  "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                  "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                  "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                  "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                  "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                  "Interest Payment: details will be under the `interest_payment` object.",
                  "Internal Source: details will be under the `internal_source` object.",
                  "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                  "Sample Funds: details will be under the `sample_funds` object.",
                  "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                  "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                  "The Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Transactions for those belonging to the specified route. This could be a Card ID or an Account Number ID."
            }
          }
        ],
        "operationId": "list_transactions",
        "responses": {
          "200": {
            "description": "Transaction List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/transaction_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Transactions"
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "summary": "Retrieve a Transaction",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Transaction to retrieve." },
            "example": "transaction_uyrp7fld2ium70oa7oi"
          }
        ],
        "operationId": "retrieve_a_transaction",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/transaction" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Transactions"
      }
    },
    "/pending_transactions": {
      "get": {
        "summary": "List Pending Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those belonging to the specified Account."
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those belonging to the specified Route."
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those caused by the specified source."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "account_transfer_instruction",
                  "ach_transfer_instruction",
                  "card_authorization",
                  "check_deposit_instruction",
                  "check_transfer_instruction",
                  "inbound_funds_hold",
                  "real_time_payments_transfer_instruction",
                  "wire_transfer_instruction",
                  "other"
                ],
                "x-enum-descriptions": [
                  "Account Transfer Instruction: details will be under the `account_transfer_instruction` object.",
                  "ACH Transfer Instruction: details will be under the `ach_transfer_instruction` object.",
                  "Card Authorization: details will be under the `card_authorization` object.",
                  "Check Deposit Instruction: details will be under the `check_deposit_instruction` object.",
                  "Check Transfer Instruction: details will be under the `check_transfer_instruction` object.",
                  "Inbound Funds Hold: details will be under the `inbound_funds_hold` object.",
                  "Real-Time Payments Transfer Instruction: details will be under the `real_time_payments_transfer_instruction` object.",
                  "Wire Transfer Instruction: details will be under the `wire_transfer_instruction` object.",
                  "The Pending Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pending", "complete"],
                "x-enum-descriptions": [
                  "The Pending Transaction is still awaiting confirmation.",
                  "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
                ]
              },
              "description": "Filter Pending Transactions for those with the specified status. By default only Pending Transactions in with status `pending` will be returned. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_pending_transactions",
        "responses": {
          "200": {
            "description": "Pending Transaction List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/pending_transaction_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Pending Transactions"
      }
    },
    "/pending_transactions/{pending_transaction_id}": {
      "get": {
        "summary": "Retrieve a Pending Transaction",
        "parameters": [
          {
            "name": "pending_transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Pending Transaction." },
            "example": "pending_transaction_k1sfetcau2qbvjbzgju4"
          }
        ],
        "operationId": "retrieve_a_pending_transaction",
        "responses": {
          "200": {
            "description": "Pending Transaction",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/pending_transaction" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Pending Transactions"
      }
    },
    "/declined_transactions": {
      "get": {
        "summary": "List Declined Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Declined Transactions to ones belonging to the specified Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Declined Transactions to those belonging to the specified route."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "wire_decline",
                  "other"
                ],
                "x-enum-descriptions": [
                  "ACH Decline: details will be under the `ach_decline` object.",
                  "Card Decline: details will be under the `card_decline` object.",
                  "Check Decline: details will be under the `check_decline` object.",
                  "Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.",
                  "International ACH Decline: details will be under the `international_ach_decline` object.",
                  "Wire Decline: details will be under the `wire_decline` object.",
                  "The Declined Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          }
        ],
        "operationId": "list_declined_transactions",
        "responses": {
          "200": {
            "description": "Declined Transaction List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/declined_transaction_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Declined Transactions"
      }
    },
    "/declined_transactions/{declined_transaction_id}": {
      "get": {
        "summary": "Retrieve a Declined Transaction",
        "parameters": [
          {
            "name": "declined_transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Declined Transaction." },
            "example": "declined_transaction_17jbn0yyhvkt4v4ooym8"
          }
        ],
        "operationId": "retrieve_a_declined_transaction",
        "responses": {
          "200": {
            "description": "Declined Transaction",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/declined_transaction" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Declined Transactions"
      }
    },
    "/account_transfers": {
      "post": {
        "summary": "Create an Account Transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_account_transfer_parameters" }
            }
          }
        },
        "operationId": "create_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Transfers"
      },
      "get": {
        "summary": "List Account Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "unique_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "Filter Account Transfers to the one with the specified unique identifier."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_account_transfers",
        "responses": {
          "200": {
            "description": "Account Transfer List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}": {
      "get": {
        "summary": "Retrieve an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Account Transfer." },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "retrieve_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}/approve": {
      "post": {
        "summary": "Approve an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Transfer to approve."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "approve_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Account Transfer to cancel."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "cancel_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/ach_transfers": {
      "post": {
        "summary": "Create an ACH Transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_ach_transfer_parameters" }
            }
          }
        },
        "operationId": "create_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Transfers"
      },
      "get": {
        "summary": "List ACH Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter ACH Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "external_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter ACH Transfers to those made to the specified External Account."
            }
          },
          {
            "name": "unique_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "Filter ACH Transfers to the one with the specified unique identifier."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_ach_transfers",
        "responses": {
          "200": {
            "description": "ACH Transfer List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}": {
      "get": {
        "summary": "Retrieve an ACH Transfer",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the ACH Transfer." },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "retrieve_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}/approve": {
      "post": {
        "summary": "Approve an ACH Transfer",
        "description": "Approves an ACH Transfer in a pending_approval state.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the ACH Transfer to approve." },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "approve_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending ACH Transfer",
        "description": "Cancels an ACH Transfer in a pending_approval state.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending ACH Transfer to cancel."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "cancel_a_pending_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_prenotifications": {
      "post": {
        "summary": "Create an ACH Prenotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_ach_prenotification_parameters" }
            }
          }
        },
        "operationId": "create_an_ach_prenotification",
        "responses": {
          "200": {
            "description": "ACH Prenotification",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ach_prenotification" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Prenotifications"
      },
      "get": {
        "summary": "List ACH Prenotifications",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_ach_prenotifications",
        "responses": {
          "200": {
            "description": "ACH Prenotification List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ach_prenotification_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Prenotifications"
      }
    },
    "/ach_prenotifications/{ach_prenotification_id}": {
      "get": {
        "summary": "Retrieve an ACH Prenotification",
        "parameters": [
          {
            "name": "ach_prenotification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Prenotification to retrieve."
            },
            "example": "ach_prenotification_ubjf9qqsxl3obbcn1u34"
          }
        ],
        "operationId": "retrieve_an_ach_prenotification",
        "responses": {
          "200": {
            "description": "ACH Prenotification",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ach_prenotification" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "ACH Prenotifications"
      }
    },
    "/inbound_ach_transfers": {
      "get": {
        "summary": "List Inbound ACH Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Inbound ACH Tranfers to ones belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "declined", "accepted", "returned"],
              "description": "Filter Inbound ACH Transfers to those with the specified status.",
              "x-enum-descriptions": [
                "The Inbound ACH Transfer is awaiting action, will transition automatically if no action is taken.",
                "The Inbound ACH Transfer has been declined.",
                "The Inbound ACH Transfer is accepted.",
                "The Inbound ACH Transfer has been returned."
              ]
            }
          }
        ],
        "operationId": "list_inbound_ach_transfers",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_ach_transfer_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound ACH Transfers"
      }
    },
    "/inbound_ach_transfers/{inbound_ach_transfer_id}": {
      "get": {
        "summary": "Retrieve an Inbound ACH Transfer",
        "parameters": [
          {
            "name": "inbound_ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound ACH Transfer to get details for."
            },
            "example": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
          }
        ],
        "operationId": "retrieve_an_inbound_ach_transfer",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_ach_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound ACH Transfers"
      }
    },
    "/inbound_ach_transfers/{inbound_ach_transfer_id}/decline": {
      "post": {
        "summary": "Decline an Inbound ACH Transfer",
        "parameters": [
          {
            "name": "inbound_ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound ACH Transfer to decline."
            },
            "example": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
          }
        ],
        "operationId": "decline_an_inbound_ach_transfer",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_ach_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound ACH Transfers"
      }
    },
    "/inbound_ach_transfers/{inbound_ach_transfer_id}/transfer_return": {
      "post": {
        "summary": "Return an Inbound ACH Transfer",
        "parameters": [
          {
            "name": "inbound_ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound ACH Transfer to return to the originating financial institution."
            },
            "example": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/return_an_inbound_ach_transfer_parameters" }
            }
          }
        },
        "operationId": "return_an_inbound_ach_transfer",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_ach_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound ACH Transfers"
      }
    },
    "/inbound_ach_transfers/{inbound_ach_transfer_id}/notification_of_change": {
      "post": {
        "summary": "Create a notification of change for an Inbound ACH Transfer",
        "parameters": [
          {
            "name": "inbound_ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound ACH Transfer for which to create a notification of change."
            },
            "example": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_notification_of_change_for_an_inbound_ach_transfer_parameters"
              }
            }
          }
        },
        "operationId": "create_a_notification_of_change_for_an_inbound_ach_transfer",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_ach_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound ACH Transfers"
      }
    },
    "/wire_transfers": {
      "post": {
        "summary": "Create a Wire Transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_wire_transfer_parameters" }
            }
          }
        },
        "operationId": "create_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Transfers"
      },
      "get": {
        "summary": "List Wire Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Wire Transfers to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "external_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Wire Transfers to those made to the specified External Account."
            }
          },
          {
            "name": "unique_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "Filter Wire Transfers to the one with the specified unique identifier."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_wire_transfers",
        "responses": {
          "200": {
            "description": "Wire Transfer List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}": {
      "get": {
        "summary": "Retrieve a Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Wire Transfer." },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "retrieve_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}/approve": {
      "post": {
        "summary": "Approve a Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Wire Transfer to approve." },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "approve_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Wire Transfer to cancel."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "cancel_a_pending_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_drawdown_requests": {
      "post": {
        "summary": "Create a Wire Drawdown Request",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_wire_drawdown_request_parameters" }
            }
          }
        },
        "operationId": "create_a_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/wire_drawdown_request" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      },
      "get": {
        "summary": "List Wire Drawdown Requests",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_wire_drawdown_requests",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/wire_drawdown_request_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      }
    },
    "/wire_drawdown_requests/{wire_drawdown_request_id}": {
      "get": {
        "summary": "Retrieve a Wire Drawdown Request",
        "parameters": [
          {
            "name": "wire_drawdown_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Drawdown Request to retrieve."
            },
            "example": "wire_drawdown_request_q6lmocus3glo0lr2bfv3"
          }
        ],
        "operationId": "retrieve_a_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/wire_drawdown_request" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      }
    },
    "/inbound_wire_drawdown_requests": {
      "get": {
        "summary": "List Inbound Wire Drawdown Requests",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_inbound_wire_drawdown_requests",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request List",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_wire_drawdown_request_list" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound Wire Drawdown Requests"
      }
    },
    "/inbound_wire_drawdown_requests/{inbound_wire_drawdown_request_id}": {
      "get": {
        "summary": "Retrieve an Inbound Wire Drawdown Request",
        "parameters": [
          {
            "name": "inbound_wire_drawdown_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound Wire Drawdown Request to retrieve."
            },
            "example": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e"
          }
        ],
        "operationId": "retrieve_an_inbound_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_wire_drawdown_request" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Inbound Wire Drawdown Requests"
      }
    },
    "/check_transfers": {
      "post": {
        "summary": "Create a Check Transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_check_transfer_parameters" }
            }
          }
        },
        "operationId": "create_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      },
      "get": {
        "summary": "List Check Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Check Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "unique_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "Filter Check Transfers to the one with the specified unique identifier."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_check_transfers",
        "responses": {
          "200": {
            "description": "Check Transfer List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}": {
      "get": {
        "summary": "Retrieve a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Check Transfer." },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "retrieve_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/approve": {
      "post": {
        "summary": "Approve a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Check Transfer to approve." },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "approve_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Check Transfer to cancel."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "cancel_a_pending_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/stop_payment": {
      "post": {
        "summary": "Request a stop payment on a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Check Transfer." },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/request_a_stop_payment_on_a_check_transfer_parameters"
              }
            }
          }
        },
        "operationId": "request_a_stop_payment_on_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_deposits": {
      "post": {
        "summary": "Create a Check Deposit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_check_deposit_parameters" }
            }
          }
        },
        "operationId": "create_a_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Deposits"
      },
      "get": {
        "summary": "List Check Deposits",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Check Deposits to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_check_deposits",
        "responses": {
          "200": {
            "description": "Check Deposit List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Deposits"
      }
    },
    "/check_deposits/{check_deposit_id}": {
      "get": {
        "summary": "Retrieve a Check Deposit",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Check Deposit to retrieve." },
            "example": "check_deposit_instruction_q2shv7x9qhevfm71kor8"
          }
        ],
        "operationId": "retrieve_a_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Check Deposits"
      }
    },
    "/routing_numbers": {
      "get": {
        "summary": "List Routing Numbers",
        "description": "You can use this API to confirm if a routing number is valid, such as when a user is providing you with bank account details. Since routing numbers uniquely identify a bank, this will always return 0 or 1 entry. In Sandbox, the only valid routing number for this method is 110000000.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "routing_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "description": "Filter financial institutions by routing number."
            },
            "example": "021000021"
          }
        ],
        "operationId": "list_routing_numbers",
        "responses": {
          "200": {
            "description": "Routing Number List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/routing_number_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Routing Numbers"
      }
    },
    "/external_accounts": {
      "post": {
        "summary": "Create an External Account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_external_account_parameters" }
            }
          }
        },
        "operationId": "create_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/external_account" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "External Accounts"
      },
      "get": {
        "summary": "List External Accounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["active", "archived"],
                "x-enum-descriptions": [
                  "The External Account is active.",
                  "The External Account is archived and won't appear in the dashboard."
                ]
              },
              "description": "Filter External Accounts for those with the specified status or statuses. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "routing_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "description": "Filter External Accounts to those with the specified Routing Number."
            }
          }
        ],
        "operationId": "list_external_accounts",
        "responses": {
          "200": {
            "description": "External Account List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/external_account_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "External Accounts"
      }
    },
    "/external_accounts/{external_account_id}": {
      "patch": {
        "summary": "Update an External Account",
        "parameters": [
          {
            "name": "external_account_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The external account identifier." },
            "example": "external_account_ukk55lr923a3ac0pp7iv"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/update_an_external_account_parameters" }
            }
          }
        },
        "operationId": "update_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/external_account" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "External Accounts"
      },
      "get": {
        "summary": "Retrieve an External Account",
        "parameters": [
          {
            "name": "external_account_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the External Account." },
            "example": "external_account_ukk55lr923a3ac0pp7iv"
          }
        ],
        "operationId": "retrieve_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/external_account" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "External Accounts"
      }
    },
    "/entities": {
      "post": {
        "summary": "Create an Entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/create_an_entity_parameters" } }
          }
        },
        "operationId": "create_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      },
      "get": {
        "summary": "List Entities",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["active", "archived", "disabled"],
                "x-enum-descriptions": [
                  "The entity is active.",
                  "The entity is archived, and can no longer be used to create accounts.",
                  "The entity is temporarily disabled and cannot be used for financial activity."
                ]
              },
              "description": "Filter Entities for those with the specified status or statuses. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_entities",
        "responses": {
          "200": {
            "description": "Entity List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}": {
      "get": {
        "summary": "Retrieve an Entity",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Entity to retrieve." },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "operationId": "retrieve_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}/address": {
      "post": {
        "summary": "Update a Natural Person or Corporation's address",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Entity to archive." },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_a_natural_person_or_corporation's_address_parameters"
              }
            }
          }
        },
        "operationId": "update_a_natural_person_or_corporation's_address",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}/archive": {
      "post": {
        "summary": "Archive an Entity",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Entity to archive. Any accounts associated with an entity must be closed before the entity can be archived."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "operationId": "archive_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entity_beneficial_owners/address": {
      "post": {
        "summary": "Update the address for a beneficial owner belonging to a corporate Entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_the_address_for_a_beneficial_owner_belonging_to_a_corporate_entity_parameters"
              }
            }
          }
        },
        "operationId": "update_the_address_for_a_beneficial_owner_belonging_to_a_corporate_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entity_beneficial_owners": {
      "post": {
        "summary": "Create a beneficial owner for a corporate Entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_beneficial_owner_for_a_corporate_entity_parameters"
              }
            }
          }
        },
        "operationId": "create_a_beneficial_owner_for_a_corporate_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entity_beneficial_owners/archive": {
      "post": {
        "summary": "Archive a beneficial owner for a corporate Entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/archive_a_beneficial_owner_for_a_corporate_entity_parameters"
              }
            }
          }
        },
        "operationId": "archive_a_beneficial_owner_for_a_corporate_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}/supplemental_documents": {
      "post": {
        "summary": "Create a supplemental document for an Entity",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Entity to associate with the supplemental document."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_supplemental_document_for_an_entity_parameters"
              }
            }
          }
        },
        "operationId": "create_a_supplemental_document_for_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/entity" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Supplemental Documents"
      }
    },
    "/entity_supplemental_documents": {
      "get": {
        "summary": "List Entity Supplemental Document Submissions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Entity to list supplemental documents for."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "operationId": "list_entity_supplemental_document_submissions",
        "responses": {
          "200": {
            "description": "Supplemental Document List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/supplemental_document_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Supplemental Documents"
      }
    },
    "/account_statements": {
      "get": {
        "summary": "List Account Statements",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Statements to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "statement_period_start.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_account_statements",
        "responses": {
          "200": {
            "description": "Account Statement List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_statement_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Statements"
      }
    },
    "/account_statements/{account_statement_id}": {
      "get": {
        "summary": "Retrieve an Account Statement",
        "parameters": [
          {
            "name": "account_statement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Statement to retrieve."
            },
            "example": "account_statement_lkc03a4skm2k7f38vj15"
          }
        ],
        "operationId": "retrieve_an_account_statement",
        "responses": {
          "200": {
            "description": "Account Statement",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_statement" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Account Statements"
      }
    },
    "/files": {
      "post": {
        "summary": "Create a File",
        "description": "To upload a file to Increase, you'll need to send a request of Content-Type `multipart/form-data`. The request should contain the file you would like to upload, as well as the parameters for creating a file.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": { "schema": { "$ref": "#/components/schemas/create_a_file_parameters" } }
          }
        },
        "operationId": "create_a_file",
        "responses": {
          "200": {
            "description": "File",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/file" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Files"
      },
      "get": {
        "summary": "List Files",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "purpose.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "check_image_front",
                  "check_image_back",
                  "mailed_check_image",
                  "form_1099_int",
                  "form_ss_4",
                  "identity_document",
                  "increase_statement",
                  "other",
                  "trust_formation_document",
                  "digital_wallet_artwork",
                  "digital_wallet_app_icon",
                  "physical_card_front",
                  "physical_card_back",
                  "physical_card_carrier",
                  "document_request",
                  "entity_supplemental_document",
                  "export"
                ],
                "x-enum-descriptions": [
                  "An image of the front of a check, used for check deposits.",
                  "An image of the back of a check, used for check deposits.",
                  "An image of a check that was mailed to a recipient.",
                  "IRS Form 1099-INT.",
                  "IRS Form SS-4.",
                  "An image of a government-issued ID.",
                  "A statement generated by Increase.",
                  "A file purpose not covered by any of the other cases.",
                  "A legal document forming a trust.",
                  "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
                  "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
                  "A card image to be printed on the front of a physical card. This must be a 2100x1340 pixel PNG with no other color but black.",
                  "The image to be printed on the back of a physical card.",
                  "An image representing the entirety of the carrier used for a physical card. This must be a 2550x3300 pixel PNG with no other color but black.",
                  "A document requested by Increase.",
                  "A supplemental document associated an an Entity.",
                  "The results of an Export you requested via the dashboard or API."
                ]
              },
              "description": "Filter Files for those with the specified purpose or purposes. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          }
        ],
        "operationId": "list_files",
        "responses": {
          "200": {
            "description": "File List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/file_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Files"
      }
    },
    "/files/{file_id}": {
      "get": {
        "summary": "Retrieve a File",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the File." },
            "example": "file_makxrc67oh9l6sg7w9yc"
          }
        ],
        "operationId": "retrieve_a_file",
        "responses": {
          "200": {
            "description": "File",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/file" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Files"
      }
    },
    "/documents": {
      "get": {
        "summary": "List Documents",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Documents to ones belonging to the specified Entity."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["form_1099_int", "proof_of_authorization", "company_information"],
                "x-enum-descriptions": [
                  "Internal Revenue Service Form 1099-INT.",
                  "A document submitted in response to a proof of authorization request for an ACH transfer.",
                  "Company information, such a policies or procedures, typically submitted during our due diligence process."
                ]
              },
              "description": "Filter Documents for those with the specified category or categories. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_documents",
        "responses": {
          "200": {
            "description": "Document List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/document_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Documents"
      }
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "Retrieve a Document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Document to retrieve." },
            "example": "document_qjtqc6s4c14ve2q89izm"
          }
        ],
        "operationId": "retrieve_a_document",
        "responses": {
          "200": {
            "description": "Document",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/document" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Documents"
      }
    },
    "/events": {
      "get": {
        "summary": "List Events",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "account.created",
                  "account.updated",
                  "account_number.created",
                  "account_number.updated",
                  "account_statement.created",
                  "account_transfer.created",
                  "account_transfer.updated",
                  "ach_prenotification.created",
                  "ach_prenotification.updated",
                  "ach_transfer.created",
                  "ach_transfer.updated",
                  "bookkeeping_account.created",
                  "bookkeeping_account.updated",
                  "bookkeeping_entry_set.updated",
                  "card.created",
                  "card.updated",
                  "card_payment.created",
                  "card_payment.updated",
                  "card_profile.created",
                  "card_profile.updated",
                  "card_dispute.created",
                  "card_dispute.updated",
                  "check_deposit.created",
                  "check_deposit.updated",
                  "check_transfer.created",
                  "check_transfer.updated",
                  "declined_transaction.created",
                  "digital_wallet_token.created",
                  "digital_wallet_token.updated",
                  "document.created",
                  "entity.created",
                  "entity.updated",
                  "event_subscription.created",
                  "event_subscription.updated",
                  "export.created",
                  "export.updated",
                  "external_account.created",
                  "external_account.updated",
                  "file.created",
                  "group.updated",
                  "group.heartbeat",
                  "inbound_ach_transfer.created",
                  "inbound_ach_transfer.updated",
                  "inbound_ach_transfer_return.created",
                  "inbound_ach_transfer_return.updated",
                  "inbound_wire_drawdown_request.created",
                  "intrafi_account_enrollment.created",
                  "intrafi_account_enrollment.updated",
                  "intrafi_exclusion.created",
                  "intrafi_exclusion.updated",
                  "oauth_connection.created",
                  "oauth_connection.deactivated",
                  "pending_transaction.created",
                  "pending_transaction.updated",
                  "physical_card.created",
                  "physical_card.updated",
                  "proof_of_authorization_request.created",
                  "proof_of_authorization_request.updated",
                  "proof_of_authorization_request_submission.created",
                  "proof_of_authorization_request_submission.updated",
                  "real_time_decision.card_authorization_requested",
                  "real_time_decision.digital_wallet_token_requested",
                  "real_time_decision.digital_wallet_authentication_requested",
                  "real_time_payments_transfer.created",
                  "real_time_payments_transfer.updated",
                  "real_time_payments_request_for_payment.created",
                  "real_time_payments_request_for_payment.updated",
                  "transaction.created",
                  "wire_drawdown_request.created",
                  "wire_drawdown_request.updated",
                  "wire_transfer.created",
                  "wire_transfer.updated"
                ],
                "x-enum-descriptions": [
                  "Occurs whenever an Account is created.",
                  "Occurs whenever an Account is updated.",
                  "Occurs whenever an Account Number is created.",
                  "Occurs whenever an Account Number is updated.",
                  "Occurs whenever an Account Statement is created.",
                  "Occurs whenever an Account Transfer is created.",
                  "Occurs whenever an Account Transfer is updated.",
                  "Occurs whenever an ACH Prenotification is created.",
                  "Occurs whenever an ACH Prenotification is updated.",
                  "Occurs whenever an ACH Transfer is created.",
                  "Occurs whenever an ACH Transfer is updated.",
                  "Occurs whenever a Bookkeeping Account is created.",
                  "Occurs whenever a Bookkeeping Account is updated.",
                  "Occurs whenever a Bookkeeping Entry Set is created.",
                  "Occurs whenever a Card is created.",
                  "Occurs whenever a Card is updated.",
                  "Occurs whenever a Card Payment is created.",
                  "Occurs whenever a Card Payment is updated.",
                  "Occurs whenever a Card Profile is created.",
                  "Occurs whenever a Card Profile is updated.",
                  "Occurs whenever a Card Dispute is created.",
                  "Occurs whenever a Card Dispute is updated.",
                  "Occurs whenever a Check Deposit is created.",
                  "Occurs whenever a Check Deposit is updated.",
                  "Occurs whenever a Check Transfer is created.",
                  "Occurs whenever a Check Transfer is updated.",
                  "Occurs whenever a Declined Transaction is created.",
                  "Occurs whenever a Digital Wallet Token is created.",
                  "Occurs whenever a Digital Wallet Token is updated.",
                  "Occurs whenever a Document is created.",
                  "Occurs whenever an Entity is created.",
                  "Occurs whenever an Entity is updated.",
                  "Occurs whenever an Event Subscription is created.",
                  "Occurs whenever an Event Subscription is updated.",
                  "Occurs whenever an Export is created.",
                  "Occurs whenever an Export is updated.",
                  "Occurs whenever an External Account is created.",
                  "Occurs whenever an External Account is updated.",
                  "Occurs whenever a File is created.",
                  "Occurs whenever a Group is updated.",
                  "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
                  "Occurs whenever an Inbound ACH Transfer is created.",
                  "Occurs whenever an Inbound ACH Transfer is updated.",
                  "Occurs whenever an Inbound ACH Transfer Return is created.",
                  "Occurs whenever an Inbound ACH Transfer Return is updated.",
                  "Occurs whenever an Inbound Wire Drawdown Request is created.",
                  "Occurs whenever an IntraFi Account Enrollment is created.",
                  "Occurs whenever an IntraFi Account Enrollment is updated.",
                  "Occurs whenever an IntraFi Exclusion is created.",
                  "Occurs whenever an IntraFi Exclusion is updated.",
                  "Occurs whenever an OAuth Connection is created.",
                  "Occurs whenever an OAuth Connection is deactivated.",
                  "Occurs whenever a Pending Transaction is created.",
                  "Occurs whenever a Pending Transaction is updated.",
                  "Occurs whenever a Physical Card is created.",
                  "Occurs whenever a Physical Card is updated.",
                  "Occurs whenever a Proof of Authorization Request is created.",
                  "Occurs whenever a Proof of Authorization Request is updated.",
                  "Occurs whenever a Proof of Authorization Request Submission is created.",
                  "Occurs whenever a Proof of Authorization Request Submission is updated.",
                  "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
                  "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
                  "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
                  "Occurs whenever a Real-Time Payments Transfer is created.",
                  "Occurs whenever a Real-Time Payments Transfer is updated.",
                  "Occurs whenever a Real-Time Payments Request for Payment is created.",
                  "Occurs whenever a Real-Time Payments Request for Payment is updated.",
                  "Occurs whenever a Transaction is created.",
                  "Occurs whenever a Wire Drawdown Request is created.",
                  "Occurs whenever a Wire Drawdown Request is updated.",
                  "Occurs whenever a Wire Transfer is created.",
                  "Occurs whenever a Wire Transfer is updated."
                ]
              },
              "description": "Filter Events for those with the specified category or categories. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            },
            "explode": false
          },
          {
            "name": "associated_object_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Events to those belonging to the object with the provided identifier."
            }
          }
        ],
        "operationId": "list_events",
        "responses": {
          "200": {
            "description": "Event List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/event_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Events"
      }
    },
    "/events/{event_id}": {
      "get": {
        "summary": "Retrieve an Event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Event." },
            "example": "event_001dzz0r20rzr4zrhrr1364hy80"
          }
        ],
        "operationId": "retrieve_an_event",
        "responses": {
          "200": {
            "description": "Event",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/event" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Events"
      }
    },
    "/event_subscriptions": {
      "post": {
        "summary": "Create an Event Subscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_an_event_subscription_parameters" }
            }
          }
        },
        "operationId": "create_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/event_subscription" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Event Subscriptions"
      },
      "get": {
        "summary": "List Event Subscriptions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_event_subscriptions",
        "responses": {
          "200": {
            "description": "Event Subscription List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/event_subscription_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Event Subscriptions"
      }
    },
    "/event_subscriptions/{event_subscription_id}": {
      "patch": {
        "summary": "Update an Event Subscription",
        "parameters": [
          {
            "name": "event_subscription_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Event Subscription." },
            "example": "event_subscription_001dzz0r20rcdxgb013zqb8m04g"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/update_an_event_subscription_parameters" }
            }
          }
        },
        "operationId": "update_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/event_subscription" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Event Subscriptions"
      },
      "get": {
        "summary": "Retrieve an Event Subscription",
        "parameters": [
          {
            "name": "event_subscription_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Event Subscription." },
            "example": "event_subscription_001dzz0r20rcdxgb013zqb8m04g"
          }
        ],
        "operationId": "retrieve_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/event_subscription" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Event Subscriptions"
      }
    },
    "/real_time_decisions/{real_time_decision_id}/action": {
      "post": {
        "summary": "Action a Real-Time Decision",
        "parameters": [
          {
            "name": "real_time_decision_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Real-Time Decision." },
            "example": "real_time_decision_j76n2e810ezcg3zh5qtn"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/action_a_real_time_decision_parameters" }
            }
          }
        },
        "operationId": "action_a_real_time_decision",
        "responses": {
          "200": {
            "description": "Real-Time Decision",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/real_time_decision" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Real-Time Decisions"
      }
    },
    "/real_time_decisions/{real_time_decision_id}": {
      "get": {
        "summary": "Retrieve a Real-Time Decision",
        "parameters": [
          {
            "name": "real_time_decision_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Real-Time Decision." },
            "example": "real_time_decision_j76n2e810ezcg3zh5qtn"
          }
        ],
        "operationId": "retrieve_a_real_time_decision",
        "responses": {
          "200": {
            "description": "Real-Time Decision",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/real_time_decision" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Real-Time Decisions"
      }
    },
    "/exports": {
      "post": {
        "summary": "Create an Export",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/create_an_export_parameters" } }
          }
        },
        "operationId": "create_an_export",
        "responses": {
          "200": {
            "description": "Export",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/export" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Exports"
      },
      "get": {
        "summary": "List Exports",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_exports",
        "responses": {
          "200": {
            "description": "Export List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/export_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Exports"
      }
    },
    "/exports/{export_id}": {
      "get": {
        "summary": "Retrieve an Export",
        "parameters": [
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Export to retrieve." },
            "example": "export_8s4m48qz3bclzje0zwh9"
          }
        ],
        "operationId": "retrieve_an_export",
        "responses": {
          "200": {
            "description": "Export",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/export" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Exports"
      }
    },
    "/groups/current": {
      "get": {
        "summary": "Retrieve Group details",
        "description": "Returns details for the currently authenticated Group.",
        "parameters": [],
        "operationId": "retrieve_group_details",
        "responses": {
          "200": {
            "description": "Group",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/group" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Groups"
      }
    },
    "/programs": {
      "get": {
        "summary": "List Programs",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_programs",
        "responses": {
          "200": {
            "description": "Program List",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/program_list" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Programs"
      }
    },
    "/programs/{program_id}": {
      "get": {
        "summary": "Retrieve a Program",
        "parameters": [
          {
            "name": "program_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Program to retrieve." },
            "example": "program_i2v2os4mwza1oetokh9i"
          }
        ],
        "operationId": "retrieve_a_program",
        "responses": {
          "200": {
            "description": "Program",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/program" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Programs"
      }
    },
    "/bookkeeping_accounts": {
      "post": {
        "summary": "Create a Bookkeeping Account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_bookkeeping_account_parameters" }
            }
          }
        },
        "operationId": "create_a_bookkeeping_account",
        "responses": {
          "200": {
            "description": "Bookkeeping Account",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_account" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Accounts"
      },
      "get": {
        "summary": "List Bookkeeping Accounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_bookkeeping_accounts",
        "responses": {
          "200": {
            "description": "Bookkeeping Account List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_account_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Accounts"
      }
    },
    "/bookkeeping_accounts/{bookkeeping_account_id}": {
      "patch": {
        "summary": "Update a Bookkeeping Account",
        "parameters": [
          {
            "name": "bookkeeping_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The bookkeeping account you would like to update."
            },
            "example": "bookkeeping_account_e37p1f1iuocw5intf35v"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/update_a_bookkeeping_account_parameters" }
            }
          }
        },
        "operationId": "update_a_bookkeeping_account",
        "responses": {
          "200": {
            "description": "Bookkeeping Account",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_account" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Accounts"
      }
    },
    "/bookkeeping_accounts/{bookkeeping_account_id}/balance": {
      "get": {
        "summary": "Retrieve a Bookkeeping Account Balance",
        "parameters": [
          {
            "name": "bookkeeping_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Bookkeeping Account to retrieve."
            },
            "example": "bookkeeping_account_e37p1f1iuocw5intf35v"
          },
          {
            "name": "at_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "The moment to query the balance at. If not set, returns the current balances."
            }
          }
        ],
        "operationId": "retrieve_a_bookkeeping_account_balance",
        "responses": {
          "200": {
            "description": "Bookkeeping Balance Lookup",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_balance_lookup" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Accounts"
      }
    },
    "/bookkeeping_entry_sets": {
      "post": {
        "summary": "Create a Bookkeeping Entry Set",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_bookkeeping_entry_set_parameters" }
            }
          }
        },
        "operationId": "create_a_bookkeeping_entry_set",
        "responses": {
          "200": {
            "description": "Bookkeeping Entry Set",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_entry_set" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Entry Sets"
      },
      "get": {
        "summary": "List Bookkeeping Entry Sets",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "transaction_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter to the Bookkeeping Entry Set that maps to this Transaction."
            }
          }
        ],
        "operationId": "list_bookkeeping_entry_sets",
        "responses": {
          "200": {
            "description": "Bookkeeping Entry Set List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_entry_set_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Entry Sets"
      }
    },
    "/bookkeeping_entry_sets/{bookkeeping_entry_set_id}": {
      "get": {
        "summary": "Retrieve a Bookkeeping Entry Set",
        "parameters": [
          {
            "name": "bookkeeping_entry_set_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the  Bookkeeping Entry Set." },
            "example": "bookkeeping_entry_set_n80c6wr2p8gtc6p4ingf"
          }
        ],
        "operationId": "retrieve_a_bookkeeping_entry_set",
        "responses": {
          "200": {
            "description": "Bookkeeping Entry Set",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_entry_set" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Entry Sets"
      }
    },
    "/bookkeeping_entries": {
      "get": {
        "summary": "List Bookkeeping Entries",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_bookkeeping_entries",
        "responses": {
          "200": {
            "description": "Bookkeeping Entry List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_entry_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Entries"
      }
    },
    "/bookkeeping_entries/{bookkeeping_entry_id}": {
      "get": {
        "summary": "Retrieve a Bookkeeping Entry",
        "parameters": [
          {
            "name": "bookkeeping_entry_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Bookkeeping Entry." },
            "example": "bookkeeping_entry_ctjpajsj3ks2blx10375"
          }
        ],
        "operationId": "retrieve_a_bookkeeping_entry",
        "responses": {
          "200": {
            "description": "Bookkeeping Entry",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/bookkeeping_entry" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Bookkeeping Entries"
      }
    },
    "/oauth_connections": {
      "get": {
        "summary": "List OAuth Connections",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          }
        ],
        "operationId": "list_oauth_connections",
        "responses": {
          "200": {
            "description": "OAuth Connection List",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/oauth_connection_list" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "OAuth Connections"
      }
    },
    "/oauth_connections/{oauth_connection_id}": {
      "get": {
        "summary": "Retrieve an OAuth Connection",
        "parameters": [
          {
            "name": "oauth_connection_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the OAuth Connection." },
            "example": "connection_dauknoksyr4wilz4e6my"
          }
        ],
        "operationId": "retrieve_an_oauth_connection",
        "responses": {
          "200": {
            "description": "OAuth Connection",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/oauth_connection" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "OAuth Connections"
      }
    },
    "/card_purchase_supplements": {
      "get": {
        "summary": "List Card Purchase Supplements",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "card_payment_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Card Purchase Supplements to ones belonging to the specified Card Payment."
            },
            "example": "card_payment_nd3k2kacrqjli8482ave"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_card_purchase_supplements",
        "responses": {
          "200": {
            "description": "Card Purchase Supplement List",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/card_purchase_supplement_list" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Purchase Supplements"
      }
    },
    "/card_purchase_supplements/{card_purchase_supplement_id}": {
      "get": {
        "summary": "Retrieve a Card Purchase Supplement",
        "parameters": [
          {
            "name": "card_purchase_supplement_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The identifier of the Card Purchase Supplement." },
            "example": "card_purchase_supplement_ijuc45iym4jchnh2sfk3"
          }
        ],
        "operationId": "retrieve_a_card_purchase_supplement",
        "responses": {
          "200": {
            "description": "Card Purchase Supplement",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/card_purchase_supplement" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Card Purchase Supplements"
      }
    },
    "/real_time_payments_transfers": {
      "post": {
        "summary": "Create a Real-Time Payments Transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/create_a_real_time_payments_transfer_parameters" }
            }
          }
        },
        "operationId": "create_a_real_time_payments_transfer",
        "responses": {
          "200": {
            "description": "Real-Time Payments Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/real_time_payments_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Real-Time Payments Transfers"
      },
      "get": {
        "summary": "List Real-Time Payments Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Real-Time Payments Transfers to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "external_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Real-Time Payments Transfers to those made to the specified External Account."
            }
          },
          {
            "name": "unique_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "Filter ACH Transfers to the one with the specified unique identifier."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_real_time_payments_transfers",
        "responses": {
          "200": {
            "description": "Real-Time Payments Transfer List",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/real_time_payments_transfer_list" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Real-Time Payments Transfers"
      }
    },
    "/real_time_payments_transfers/{real_time_payments_transfer_id}": {
      "get": {
        "summary": "Retrieve a Real-Time Payments Transfer",
        "parameters": [
          {
            "name": "real_time_payments_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Real-Time Payments Transfer."
            },
            "example": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
          }
        ],
        "operationId": "retrieve_a_real_time_payments_transfer",
        "responses": {
          "200": {
            "description": "Real-Time Payments Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/real_time_payments_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Real-Time Payments Transfers"
      }
    },
    "/proof_of_authorization_requests": {
      "get": {
        "summary": "List Proof of Authorization Requests",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_proof_of_authorization_requests",
        "responses": {
          "200": {
            "description": "Proof of Authorization Request List",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/proof_of_authorization_request_list" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Proof of Authorization Requests"
      }
    },
    "/proof_of_authorization_requests/{proof_of_authorization_request_id}": {
      "get": {
        "summary": "Retrieve a Proof of Authorization Request",
        "parameters": [
          {
            "name": "proof_of_authorization_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Proof of Authorization Request."
            },
            "example": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b"
          }
        ],
        "operationId": "retrieve_a_proof_of_authorization_request",
        "responses": {
          "200": {
            "description": "Proof of Authorization Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/proof_of_authorization_request" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Proof of Authorization Requests"
      }
    },
    "/proof_of_authorization_request_submissions": {
      "post": {
        "summary": "Submit Proof of Authorization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/submit_proof_of_authorization_parameters" }
            }
          }
        },
        "operationId": "submit_proof_of_authorization",
        "responses": {
          "200": {
            "description": "Proof of Authorization Request Submission",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/proof_of_authorization_request_submission" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Proof of Authorization Request Submissions"
      },
      "get": {
        "summary": "List Proof of Authorization Request Submissions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "Return the page of entries after this one." }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 1
            }
          },
          {
            "name": "proof_of_authorization_request_id",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "description": "ID of the proof of authorization request." },
            "example": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b"
          }
        ],
        "operationId": "list_proof_of_authorization_request_submissions",
        "responses": {
          "200": {
            "description": "Proof of Authorization Request Submission List",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/proof_of_authorization_request_submission_list" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Proof of Authorization Request Submissions"
      }
    },
    "/proof_of_authorization_request_submissions/{proof_of_authorization_request_submission_id}": {
      "get": {
        "summary": "Retrieve a Proof of Authorization Request Submission",
        "parameters": [
          {
            "name": "proof_of_authorization_request_submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Proof of Authorization Request Submission."
            },
            "example": "proof_of_authorization_request_submission_uqhqroiley7n0097vizn"
          }
        ],
        "operationId": "retrieve_a_proof_of_authorization_request_submission",
        "responses": {
          "200": {
            "description": "Proof of Authorization Request Submission",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/proof_of_authorization_request_submission" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Proof of Authorization Request Submissions"
      }
    },
    "/simulations/inbound_ach_transfers": {
      "post": {
        "summary": "Simulate an ACH Transfer to your account",
        "description": "Simulates an inbound ACH transfer to your account. This imitates initiating a transfer to an Increase account from a different financial institution. The transfer may be either a credit or a debit depending on if the `amount` is positive or negative. The result of calling this API will contain the created transfer. You can pass a `resolve_at` parameter to allow for a window to [action on the Inbound ACH Transfer](https://increase.com/documentation/inbound-ach-transfers#inbound-ach-transfers). Alternatively, if you don't pass the `resolve_at` parameter the result will contain either a [Transaction](#transactions) or a [Declined Transaction](#declined-transactions) depending on whether or not the transfer is allowed.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_an_ach_transfer_to_your_account_parameters" }
            }
          }
        },
        "operationId": "simulate_an_ach_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_ach_transfer_simulation_result" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/ach_transfers/{ach_transfer_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox ACH Transfer",
        "description": "Simulates the submission of an [ACH Transfer](#ach-transfers) to the Federal Reserve. This transfer must first have a `status` of `pending_approval` or `pending_submission`. In production, Increase submits ACH Transfers to the Federal Reserve three times per day on weekdays. Since sandbox ACH Transfers are not submitted to the Federal Reserve, this endpoint allows you to skip that delay and transition the ACH Transfer to a status of `submitted`.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer you wish to submit."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "submit_a_sandbox_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/ach_transfers/{ach_transfer_id}/return": {
      "post": {
        "summary": "Return a Sandbox ACH Transfer",
        "description": "Simulates the return of an [ACH Transfer](#ach-transfers) by the Federal Reserve due to an error condition. This will also create a Transaction to account for the returned funds. This transfer must first have a `status` of `submitted`.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer you wish to return."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/return_a_sandbox_ach_transfer_parameters" }
            }
          }
        },
        "operationId": "return_a_sandbox_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ach_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/account_transfers/{account_transfer_id}/complete": {
      "post": {
        "summary": "Complete a Sandbox Account Transfer",
        "description": "If your account is configured to require approval for each transfer, this endpoint simulates the approval of an [Account Transfer](#account-transfers). You can also approve sandbox Account Transfers in the dashboard. This transfer must first have a `status` of `pending_approval`.",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Transfer you wish to complete."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "complete_a_sandbox_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_transfers/{check_transfer_id}/mail": {
      "post": {
        "summary": "Mail a Sandbox Check Transfer",
        "description": "Simulates the mailing of a [Check Transfer](#check-transfers), which happens once per weekday in production but can be sped up in sandbox. This transfer must first have a `status` of `pending_approval` or `pending_submission`.",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer you wish to mail."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "mail_a_sandbox_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_transfers/{check_transfer_id}/deposit": {
      "post": {
        "summary": "Deposit a Sandbox Check Transfer",
        "description": "Simulates a [Check Transfer](#check-transfers) being deposited at a bank. This transfer must first have a `status` of `mailed`.",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer you wish to mark deposited."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "deposit_a_sandbox_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox Check Deposit",
        "description": "Simulates the submission of a [Check Deposit](#check-deposits) to the Federal Reserve. This Check Deposit must first have a `status` of `pending`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to submit."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "submit_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/reject": {
      "post": {
        "summary": "Reject a Sandbox Check Deposit",
        "description": "Simulates the rejection of a [Check Deposit](#check-deposits) by Increase due to factors like poor image quality. This Check Deposit must first have a `status` of `pending`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to reject."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "reject_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/return": {
      "post": {
        "summary": "Return a Sandbox Check Deposit",
        "description": "Simulates the return of a [Check Deposit](#check-deposits). This Check Deposit must first have a `status` of `submitted`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to return."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "return_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/check_deposit" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_wire_transfers": {
      "post": {
        "summary": "Simulate a Wire Transfer to your account",
        "description": "Simulates an inbound Wire Transfer to your account.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_a_wire_transfer_to_your_account_parameters" }
            }
          }
        },
        "operationId": "simulate_a_wire_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound Wire Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_wire_transfer_simulation_result" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/wire_transfers/{wire_transfer_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox Wire Transfer",
        "description": "Simulates the submission of a [Wire Transfer](#wire-transfers) to the Federal Reserve. This transfer must first have a `status` of `pending_approval` or `pending_creating`.",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer you wish to submit."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "submit_a_sandbox_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/wire_transfers/{wire_transfer_id}/reverse": {
      "post": {
        "summary": "Reverse a Sandbox Wire Transfer",
        "description": "Simulates the reversal of a [Wire Transfer](#wire-transfers) by the Federal Reserve due to error conditions. This will also create a [Transaction](#transaction) to account for the returned funds. This Wire Transfer must first have a `status` of `complete`.",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer you wish to reverse."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "reverse_a_sandbox_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/wire_transfer" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_wire_drawdown_requests": {
      "post": {
        "summary": "Simulate an Inbound Wire Drawdown request being created",
        "description": "Simulates receiving an [Inbound Wire Drawdown Request](#inbound-wire-drawdown-requests).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_inbound_wire_drawdown_request_being_created_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_inbound_wire_drawdown_request_being_created",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_wire_drawdown_request" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_authorizations": {
      "post": {
        "summary": "Simulate an authorization on a Card",
        "description": "Simulates a purchase authorization on a [Card](#cards). Depending on the balance available to the card and the `amount` submitted, the authorization activity will result in a [Pending Transaction](#pending-transactions) of type `card_authorization` or a [Declined Transaction](#declined-transactions) of type `card_decline`. You can pass either a Card id or a [Digital Wallet Token](#digital-wallet-tokens) id to simulate the two different ways purchases can be made.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_an_authorization_on_a_card_parameters" }
            }
          }
        },
        "operationId": "simulate_an_authorization_on_a_card",
        "responses": {
          "200": {
            "description": "Inbound Card Authorization Simulation Result",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/inbound_card_authorization_simulation_result" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/interest_payment": {
      "post": {
        "summary": "Simulate an Interest Payment to your account",
        "description": "Simulates an interest payment to your account. In production, this happens automatically on the first of each month.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_interest_payment_to_your_account_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_interest_payment_to_your_account",
        "responses": {
          "200": {
            "description": "Interest Payment Simulation Result",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/interest_payment_simulation_result" }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_settlements": {
      "post": {
        "summary": "Simulate settling a card authorization",
        "description": "Simulates the settlement of an authorization by a card acquirer. After a card authorization is created, the merchant will eventually send a settlement. This simulates that event, which may occur many days after the purchase in production. The amount settled can be different from the amount originally authorized, for example, when adding a tip to a restaurant bill.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_settling_a_card_authorization_parameters" }
            }
          }
        },
        "operationId": "simulate_settling_a_card_authorization",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/transaction" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_refunds": {
      "post": {
        "summary": "Simulate a refund on a card",
        "description": "Simulates refunding a card transaction. The full value of the original sandbox transaction is refunded.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_a_refund_on_a_card_parameters" }
            }
          }
        },
        "operationId": "simulate_a_refund_on_a_card",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/transaction" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_disputes/{card_dispute_id}/action": {
      "post": {
        "summary": "Simulate advancing the state of a card dispute",
        "description": "After a [Card Dispute](#card-disputes) is created in production, the dispute will be reviewed. Since no review happens in sandbox, this endpoint simulates moving a Card Dispute into a rejected or accepted state. A Card Dispute can only be actioned one time and must have a status of `pending_reviewing`.",
        "parameters": [
          {
            "name": "card_dispute_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The dispute you would like to action." },
            "example": "card_dispute_h9sc95nbl1cgltpp7men"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_advancing_the_state_of_a_card_dispute_parameters"
              }
            }
          }
        },
        "operationId": "simulate_advancing_the_state_of_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_dispute" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_profiles/{card_profile_id}/approve": {
      "post": {
        "summary": "Simulate advancing the state of a card profile",
        "description": "After a [Card Profile](#card-profile) is created in production, the images will be uploaded to Visa within one day. Since Card Profiles are not uploaded to Visa in sandbox, this endpoint simulates that step. Invoking this simulation triggers the webhooks Increase sends when the Card Profile is approved and updates the status of the Card Profile.",
        "parameters": [
          {
            "name": "card_profile_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The card profile you would like to approve." },
            "example": "card_profile_cox5y73lob2eqly18piy"
          }
        ],
        "operationId": "simulate_advancing_the_state_of_a_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/card_profile" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/digital_wallet_token_requests": {
      "post": {
        "summary": "Simulate digital wallet provisioning for a card",
        "description": "Simulates a user attempting add a [Card](#cards) to a digital wallet such as Apple Pay.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_digital_wallet_provisioning_for_a_card_parameters"
              }
            }
          }
        },
        "operationId": "simulate_digital_wallet_provisioning_for_a_card",
        "responses": {
          "200": {
            "description": "Inbound Digital Wallet Token Request Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_digital_wallet_token_request_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_real_time_payments_transfers": {
      "post": {
        "summary": "Simulate a Real-Time Payments Transfer to your account",
        "description": "Simulates an inbound Real-Time Payments transfer to your account. Real-Time Payments are a beta feature.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_a_real_time_payments_transfer_to_your_account_parameters"
              }
            }
          }
        },
        "operationId": "simulate_a_real_time_payments_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound Real-Time Payments Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_real_time_payments_transfer_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_funds_holds/{inbound_funds_hold_id}/release": {
      "post": {
        "summary": "Simulate immediately releasing an inbound funds hold",
        "description": "This endpoint simulates immediately releasing an inbound funds hold, which might be created as a result of e.g., an ACH debit.",
        "parameters": [
          {
            "name": "inbound_funds_hold_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The inbound funds hold to release." },
            "example": "inbound_funds_hold_9vuasmywdo7xb3zt4071"
          }
        ],
        "operationId": "simulate_immediately_releasing_an_inbound_funds_hold",
        "responses": {
          "200": {
            "description": "Inbound Funds Hold",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/inbound_funds_hold" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/account_statements": {
      "post": {
        "summary": "Simulate an Account Statement being created",
        "description": "Simulates an [Account Statement](#account-statements) being created for an account. In production, Account Statements are generated once per month.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_account_statement_being_created_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_account_statement_being_created",
        "responses": {
          "200": {
            "description": "Account Statement",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/account_statement" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/documents": {
      "post": {
        "summary": "Simulate a tax document being created",
        "description": "Simulates an tax document being created for an account.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/simulate_a_tax_document_being_created_parameters" }
            }
          }
        },
        "operationId": "simulate_a_tax_document_being_created",
        "responses": {
          "200": {
            "description": "Document",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/document" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/real_time_payments_transfers/{real_time_payments_transfer_id}/complete": {
      "post": {
        "summary": "Complete a Sandbox Real-Time Payments Transfer",
        "description": "Simulates submission of a Real-Time Payments transfer and handling the response from the destination financial institution. This transfer must first have a `status` of `pending_submission`.",
        "parameters": [
          {
            "name": "real_time_payments_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Real-Time Payments Transfer you wish to complete."
            },
            "example": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/complete_a_sandbox_real_time_payments_transfer_parameters"
              }
            }
          }
        },
        "operationId": "complete_a_sandbox_real_time_payments_transfer",
        "responses": {
          "200": {
            "description": "Real-Time Payments Transfer",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/real_time_payments_transfer" } }
            }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/programs": {
      "post": {
        "summary": "Create a program",
        "description": "Simulates a program being created in your group. By default, your group has one program called Commercial Banking. Note that when your group operates more than one program, `program_id` is a required field when creating accounts.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/create_a_program_parameters" } }
          }
        },
        "operationId": "create_a_program",
        "responses": {
          "200": {
            "description": "Program",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/program" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/physical_cards/{physical_card_id}/shipment_advance": {
      "post": {
        "summary": "Simulate advancing the shipment status of a Physical Card",
        "description": "This endpoint allows you to simulate advancing the shipment status of a Physical Card, to simulate e.g., that a physical card was attempted shipped but then failed delivery.",
        "parameters": [
          {
            "name": "physical_card_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "The Physical Card you would like to action." },
            "example": "physical_card_ode8duyq5v2ynhjoharl"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_advancing_the_shipment_status_of_a_physical_card_parameters"
              }
            }
          }
        },
        "operationId": "simulate_advancing_the_shipment_status_of_a_physical_card",
        "responses": {
          "200": {
            "description": "Physical Card",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/physical_card" } } }
          },
          "default": {
            "description": "Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/error" } } }
          }
        },
        "x-tag": "Simulations"
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "servers": [{ "url": "https://api.increase.com" }, { "url": "https://sandbox.increase.com" }],
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance."
    },
    {
      "name": "Account Numbers",
      "description": "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment."
    },
    {
      "name": "Cards",
      "description": "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement."
    },
    {
      "name": "Card Payments",
      "description": "Card Payments group together interactions related to a single card payment, such as an authorization and its corresponding settlement."
    },
    {
      "name": "Card Disputes",
      "description": "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate."
    },
    {
      "name": "Physical Cards",
      "description": "Custom physical Visa cards that are shipped to your customers. The artwork is configurable by a connected [Card Profile](/documentation/api#card-profiles). The same Card can be used for multiple Physical Cards. Printing cards incurs a fee. Please contact [support@increase.com](mailto:support@increase.com) for pricing!"
    },
    {
      "name": "Card Profiles",
      "description": "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)."
    },
    {
      "name": "Digital Wallet Tokens",
      "description": "A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card."
    },
    {
      "name": "Transactions",
      "description": "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement."
    },
    {
      "name": "Pending Transactions",
      "description": "Pending Transactions are potential future additions and removals of money from your bank account."
    },
    {
      "name": "Declined Transactions",
      "description": "Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered."
    },
    {
      "name": "Account Transfers",
      "description": "Account transfers move funds between your own accounts at Increase."
    },
    {
      "name": "ACH Transfers",
      "description": "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH)."
    },
    {
      "name": "ACH Prenotifications",
      "description": "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH)."
    },
    {
      "name": "Inbound ACH Transfers",
      "description": "An Inbound ACH Transfer is an ACH transfer initiated outside of Increase to your account."
    },
    {
      "name": "Wire Transfers",
      "description": "Wire transfers move funds between your Increase account and any other account accessible by Fedwire."
    },
    {
      "name": "Wire Drawdown Requests",
      "description": "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more."
    },
    {
      "name": "Inbound Wire Drawdown Requests",
      "description": "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more."
    },
    {
      "name": "Check Transfers",
      "description": "Check Transfers move funds from your Increase account by mailing a physical check."
    },
    {
      "name": "Check Deposits",
      "description": "Check Deposits allow you to deposit images of paper checks into your account."
    },
    {
      "name": "Routing Numbers",
      "description": "Routing numbers are used to identify your bank in a financial transaction."
    },
    {
      "name": "External Accounts",
      "description": "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse."
    },
    {
      "name": "Entities",
      "description": "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts."
    },
    {
      "name": "Supplemental Documents",
      "description": "Supplemental Documents are uploaded files connected to an Entity during onboarding."
    },
    {
      "name": "Account Statements",
      "description": "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File."
    },
    {
      "name": "Files",
      "description": "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF)."
    },
    {
      "name": "Documents",
      "description": "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT."
    },
    {
      "name": "Events",
      "description": "Events are records of things that happened to objects at Increase. Events are accessible via the List Events endpoint and can be delivered to your application via webhooks. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks)."
    },
    {
      "name": "Event Subscriptions",
      "description": "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks)."
    },
    {
      "name": "Real-Time Decisions",
      "description": "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!"
    },
    {
      "name": "Exports",
      "description": "Exports are batch summaries of your Increase data. You can make them from the API or dashboard. Since they can take a while, they are generated asynchronously. We send a webhook when they are ready. For more information, please read our [Exports documentation](https://increase.com/documentation/exports)."
    },
    {
      "name": "Groups",
      "description": "Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access."
    },
    {
      "name": "Programs",
      "description": "Programs determine the compliance and commercial terms of Accounts. By default, you have a Commercial Banking program for managing your own funds. If you are lending or managing funds on behalf of your customers, or otherwise engaged in regulated activity, we will work together to create additional Programs for you."
    },
    {
      "name": "Bookkeeping Accounts",
      "description": "Accounts are T-accounts. They can store accounting entries. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping)."
    },
    {
      "name": "Bookkeeping Entry Sets",
      "description": "Entry Sets are accounting entries that are transactionally applied. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping)."
    },
    {
      "name": "Bookkeeping Entries",
      "description": "Entries are T-account entries recording debits and credits. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping)."
    },
    {
      "name": "OAuth Connections",
      "description": "When a user authorizes your OAuth application, an OAuth Connection object is created."
    },
    {
      "name": "Card Purchase Supplements",
      "description": "Additional information about a card purchase (e.g., settlement or refund), such as level 3 line item data."
    },
    {
      "name": "Real-Time Payments Transfers",
      "description": "Real-Time Payments transfers move funds, within seconds, between your Increase account and any other account on the Real-Time Payments network."
    },
    {
      "name": "Proof of Authorization Requests",
      "description": "A request for proof of authorization for one or more ACH debit transfers."
    },
    {
      "name": "Proof of Authorization Request Submissions",
      "description": "Information submitted in response to a proof of authorization request. Per Nacha's guidance on proof of authorization, the originator must ensure that the authorization complies with applicable legal requirements, is readily identifiable as an authorization, and has clear and readily understandable terms."
    },
    {
      "name": "Simulations",
      "description": "When building your application, you can use these APIs to simulate external effects. They can be helpful to quickly test events that might take several hours in the real world (like receiving a wire or ACH). *These APIs will only work in the sandbox.* If you have a sandbox [Event Subscription](#event-subscriptions) configured, calling these APIs will also result in the appropriate webhooks being sent to your endpoint."
    }
  ],
  "components": {
    "schemas": {
      "create_an_account_parameters": {
        "type": "object",
        "example": {
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "name": "New Account!",
          "program_id": "program_i2v2os4mwza1oetokh9i"
        },
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The identifier for the Entity that will own the Account."
          },
          "program_id": {
            "type": "string",
            "description": "The identifier for the Program that this Account falls under. Required if you operate more than one Program."
          },
          "informational_entity_id": {
            "type": "string",
            "description": "The identifier of an Entity that, while not owning the Account, is associated with its activity. Its relationship to your group must be `informational`."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account."
          }
        },
        "required": ["name"]
      },
      "update_an_account_parameters": {
        "type": "object",
        "example": { "name": "My renamed account" },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The new name of the Account."
          }
        }
      },
      "create_an_account_number_parameters": {
        "type": "object",
        "example": { "account_id": "account_in71c4amph0vgo2qllky", "name": "Rent payments" },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Account the Account Number should belong to."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account Number."
          },
          "inbound_ach": {
            "type": "object",
            "description": "Options related to how this Account Number should handle inbound ACH transfers.",
            "properties": {
              "debit_status": {
                "type": "string",
                "enum": ["allowed", "blocked"],
                "description": "Whether ACH debits are allowed against this Account Number. Note that ACH debits will be declined if this is `allowed` but the Account Number is not active.",
                "x-enum-descriptions": ["ACH Debits are allowed.", "ACH Debits are blocked."]
              }
            },
            "required": ["debit_status"]
          },
          "inbound_checks": {
            "type": "object",
            "description": "Options related to how this Account Number should handle inbound check withdrawls.",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["allowed", "check_transfers_only"],
                "description": "How Increase should process checks with this account number printed on them.",
                "x-enum-descriptions": [
                  "Checks with this Account Number will be processed even if they are not associated with a Check Transfer.",
                  "Checks with this Account Number will be processed only if they can be matched to an existing Check Transfer."
                ]
              }
            },
            "required": ["status"]
          }
        },
        "required": ["account_id", "name"]
      },
      "update_an_account_number_parameters": {
        "type": "object",
        "example": { "inbound_ach": { "debit_status": "blocked" }, "status": "disabled" },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account Number."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "This indicates if transfers can be made to the Account Number.",
            "x-enum-descriptions": [
              "The account number is active.",
              "The account number is temporarily disabled.",
              "The account number is permanently disabled."
            ]
          },
          "inbound_ach": {
            "type": "object",
            "description": "Options related to how this Account Number handles inbound ACH transfers.",
            "properties": {
              "debit_status": {
                "type": "string",
                "enum": ["allowed", "blocked"],
                "description": "Whether ACH debits are allowed against this Account Number. Note that ACH debits will be declined if this is `allowed` but the Account Number is not active.",
                "x-enum-descriptions": ["ACH Debits are allowed.", "ACH Debits are blocked."]
              }
            }
          }
        }
      },
      "create_a_card_parameters": {
        "type": "object",
        "example": { "account_id": "account_in71c4amph0vgo2qllky", "description": "Card for Ian Crease" },
        "properties": {
          "account_id": { "type": "string", "description": "The Account the card should belong to." },
          "entity_id": {
            "type": "string",
            "description": "The Entity the card belongs to. You only need to supply this in rare situations when the card is not for the Account holder."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the card."
          },
          "billing_address": {
            "type": "object",
            "description": "The card's billing address.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the billing address."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the billing address."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the billing address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The US state of the billing address."
              },
              "postal_code": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The postal code of the billing address."
              }
            },
            "required": ["line1", "city", "state", "postal_code"]
          },
          "digital_wallet": {
            "type": "object",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. To add the card to a digital wallet, you may supply an email or phone number with this request. Otherwise, subscribe and then action a Real Time Decision with the category `digital_wallet_token_requested` or `digital_wallet_authentication_requested`.",
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email."
              },
              "phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this digital card. Card profiles may also be assigned at the program level."
              }
            }
          }
        },
        "required": ["account_id"]
      },
      "update_a_card_parameters": {
        "type": "object",
        "example": { "description": "New description" },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the card."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "The status to update the Card with.",
            "x-enum-descriptions": [
              "The card is active.",
              "The card is temporarily disabled.",
              "The card is permanently canceled."
            ]
          },
          "entity_id": {
            "type": "string",
            "description": "The Entity the card belongs to. You only need to supply this in rare situations when the card is not for the Account holder."
          },
          "billing_address": {
            "type": "object",
            "description": "The card's updated billing address.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the billing address."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the billing address."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the billing address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The US state of the billing address."
              },
              "postal_code": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The postal code of the billing address."
              }
            },
            "required": ["line1", "city", "state", "postal_code"]
          },
          "digital_wallet": {
            "type": "object",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email."
              },
              "phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this card. Card profiles may also be assigned at the program level."
              }
            }
          }
        }
      },
      "create_a_card_dispute_parameters": {
        "type": "object",
        "example": {
          "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "explanation": "Unauthorized recurring transaction."
        },
        "properties": {
          "disputed_transaction_id": {
            "type": "string",
            "description": "The Transaction you wish to dispute. This Transaction must have a `source_type` of `card_settlement`."
          },
          "explanation": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Why you are disputing this Transaction."
          }
        },
        "required": ["disputed_transaction_id", "explanation"]
      },
      "create_a_physical_card_parameters": {
        "type": "object",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "card_profile_id": "card_profile_cox5y73lob2eqly18piy",
          "cardholder": { "first_name": "Ian", "last_name": "Crease" },
          "shipment": {
            "method": "usps",
            "address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "line2": "Unit 2",
              "city": "New York",
              "postal_code": "10045",
              "state": "NY"
            }
          }
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The underlying card representing this physical card."
          },
          "card_profile_id": {
            "type": "string",
            "description": "The card profile to use for this physical card."
          },
          "cardholder": {
            "type": "object",
            "description": "Details about the cardholder, as it will appear on the physical card.",
            "properties": {
              "first_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The cardholder's first name."
              },
              "last_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The cardholder's last name."
              }
            },
            "required": ["first_name", "last_name"]
          },
          "shipment": {
            "type": "object",
            "description": "The details used to ship this physical card.",
            "properties": {
              "method": {
                "type": "string",
                "enum": ["usps", "fedex_priority_overnight", "fedex_2_day"],
                "description": "The shipping method to use.",
                "x-enum-descriptions": [
                  "USPS Post with tracking.",
                  "FedEx Priority Overnight, no signature.",
                  "FedEx 2-day."
                ]
              },
              "address": {
                "type": "object",
                "description": "The address to where the card should be shipped.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35,
                    "description": "The name of the recipient."
                  },
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35,
                    "description": "The first line of the shipping address."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35,
                    "description": "The second line of the shipping address."
                  },
                  "line3": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 9,
                    "description": "The third line of the shipping address."
                  },
                  "phone_number": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 15,
                    "description": "The phone number of the recipient."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35,
                    "description": "The city of the shipping address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The US state of the shipping address."
                  },
                  "postal_code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16,
                    "description": "The postal code of the shipping address."
                  }
                },
                "required": ["name", "line1", "city", "state", "postal_code"]
              }
            },
            "required": ["method", "address"]
          }
        },
        "required": ["card_id", "card_profile_id", "cardholder", "shipment"]
      },
      "update_a_physical_card_parameters": {
        "type": "object",
        "example": { "status": "disabled" },
        "properties": {
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "The status to update the Physical Card to.",
            "x-enum-descriptions": [
              "The physical card is active.",
              "The physical card is temporarily disabled.",
              "The physical card is permanently canceled."
            ]
          }
        },
        "required": ["status"]
      },
      "create_a_card_profile_parameters": {
        "type": "object",
        "example": {
          "description": "My Card Profile",
          "digital_wallets": {
            "text_color": { "red": 26, "green": 43, "blue": 59 },
            "issuer_name": "MyBank",
            "card_description": "MyBank Signature Card",
            "contact_website": "https://example.com",
            "contact_email": "user@example.com",
            "contact_phone": "+18885551212",
            "background_image_file_id": "file_1ai913suu1zfn1pdetru",
            "app_icon_file_id": "file_8zxqkwlh43wo144u8yec"
          }
        },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A description you can use to identify the Card Profile."
          },
          "digital_wallets": {
            "type": "object",
            "description": "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
            "properties": {
              "text_color": {
                "type": "object",
                "description": "The Card's text color, specified as an RGB triple. The default is white.",
                "properties": {
                  "red": {
                    "type": "integer",
                    "description": "The value of the red channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "green": {
                    "type": "integer",
                    "description": "The value of the green channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "blue": {
                    "type": "integer",
                    "description": "The value of the blue channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  }
                },
                "required": ["red", "green", "blue"]
              },
              "issuer_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A user-facing description for whoever is issuing the card."
              },
              "card_description": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A user-facing description for the card itself."
              },
              "contact_website": {
                "type": "string",
                "description": "A website the user can visit to view and receive support for their card."
              },
              "contact_email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "An email address the user can contact to receive support for their card."
              },
              "contact_phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A phone number the user can contact to receive support for their card."
              },
              "background_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's front image."
              },
              "app_icon_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's icon image."
              }
            },
            "required": ["issuer_name", "card_description", "background_image_file_id", "app_icon_file_id"]
          },
          "physical_cards": {
            "type": "object",
            "description": "How physical cards should be designed and shipped.",
            "properties": {
              "contact_phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A phone number the user can contact to receive support for their card."
              },
              "front_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the physical card's front image."
              },
              "carrier_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the physical card's carrier image."
              }
            },
            "required": ["contact_phone", "front_image_file_id", "carrier_image_file_id"]
          }
        },
        "required": ["description", "digital_wallets"]
      },
      "create_an_account_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 100,
          "description": "Creating liquidity",
          "destination_account_id": "account_uf16sut2ct5bevmq3eh"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in the minor unit of the account currency. For dollars, for example, this is cents.",
            "minimum": 1
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the transfer."
          },
          "destination_account_id": {
            "type": "string",
            "description": "The identifier for the account that will receive the transfer."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "unique_identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A unique identifier you choose for the transfer. Reusing this identifier for another transfer will result in an error. You can query for the transfer associated with this identifier using the List endpoint."
          }
        },
        "required": ["account_id", "amount", "description", "destination_account_id"]
      },
      "create_an_ach_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "amount": 100,
          "routing_number": "101050001",
          "statement_descriptor": "New ACH transfer"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Increase identifier for the account that will send the transfer."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 17,
            "description": "The account number for the destination account."
          },
          "addendum": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "description": "Additional information that will be sent to the recipient. This is included in the transfer data sent to the receiving bank."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer, usually in the format `YYMMDD`. This is included in the transfer data sent to the receiving bank."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "The data you choose to associate with the transfer. This is included in the transfer data sent to the receiving bank."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "A description of the transfer. This is included in the transfer data sent to the receiving bank."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name by which the recipient knows you. This is included in the transfer data sent to the receiving bank."
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "description": "The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."
          },
          "external_account_id": {
            "type": "string",
            "description": "The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number`, `routing_number`, and `funding` must be absent."
          },
          "funding": {
            "type": "string",
            "enum": ["checking", "savings"],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": ["A checking account.", "A savings account."]
          },
          "individual_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "description": "Your identifier for the transfer recipient."
          },
          "individual_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "The name of the transfer recipient. This value is informational and not verified by the recipient's bank."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": ["corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated"],
            "description": "The Standard Entry Class (SEC) code to use for the transfer.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          },
          "statement_descriptor": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback."
          },
          "unique_identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A unique identifier you choose for the transfer. Reusing this identifier for another transfer will result in an error. You can query for the transfer associated with this identifier using the List endpoint."
          }
        },
        "required": ["account_id", "amount", "statement_descriptor"]
      },
      "create_an_ach_prenotification_parameters": {
        "type": "object",
        "example": { "account_number": "987654321", "routing_number": "101050001" },
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number for the destination account."
          },
          "addendum": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "description": "Additional information that will be sent to the recipient."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "The data you choose to associate with the transfer."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "The description of the transfer you wish to be shown to the recipient."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name by which the recipient knows you."
          },
          "credit_debit_indicator": {
            "type": "string",
            "enum": ["credit", "debit"],
            "description": "Whether the Prenotification is for a future debit or credit.",
            "x-enum-descriptions": [
              "The Prenotification is for an anticipated credit.",
              "The Prenotification is for an anticipated debit."
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "description": "The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."
          },
          "individual_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "Your identifier for the transfer recipient."
          },
          "individual_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "The name of the transfer recipient. This value is information and not verified by the recipient's bank."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": ["corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated"],
            "description": "The Standard Entry Class (SEC) code to use for the ACH Prenotification.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          }
        },
        "required": ["account_number", "routing_number"]
      },
      "return_an_inbound_ach_transfer_parameters": {
        "type": "object",
        "example": { "reason": "payment_stopped" },
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "returned_per_odfi_request",
              "authorization_revoked_by_customer",
              "payment_stopped",
              "customer_advised_unauthorized_improper_ineligible_or_incomplete",
              "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
              "beneficiary_or_account_holder_deceased",
              "credit_entry_refused_by_receiver",
              "duplicate_entry",
              "corporate_customer_advised_not_authorized"
            ],
            "description": "The reason why this transfer will be returned. The most usual return codes are `payment_stopped` for debits and `credit_entry_refused_by_receiver` for credits.",
            "x-enum-descriptions": [
              "The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request. The Nacha return code is R06.",
              "The customer no longer authorizes this transaction. The Nacha return code is R07.",
              "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.",
              "The customer advises that the debit was unauthorized. The Nacha return code is R10.",
              "The payee is deceased. The Nacha return code is R14.",
              "The account holder is deceased. The Nacha return code is R15.",
              "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.",
              "The account holder identified this transaction as a duplicate. The Nacha return code is R24.",
              "The corporate customer no longer authorizes this transaction. The Nacha return code is R29."
            ]
          }
        },
        "required": ["reason"]
      },
      "create_a_notification_of_change_for_an_inbound_ach_transfer_parameters": {
        "type": "object",
        "example": { "updated_account_number": "987654321", "updated_routing_number": "101050001" },
        "properties": {
          "updated_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The updated account number to send in the notification of change."
          },
          "updated_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The updated routing number to send in the notification of change."
          }
        }
      },
      "create_a_wire_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "amount": 100,
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York",
          "beneficiary_address_line3": "NY 10045",
          "beneficiary_name": "Ian Crease",
          "message_to_recipient": "New account transfer",
          "routing_number": "101050001"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number for the destination account."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "external_account_id": {
            "type": "string",
            "description": "The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number` and `routing_number` must be absent."
          },
          "amount": { "type": "integer", "description": "The transfer amount in cents.", "minimum": 1 },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The message that will show on the recipient's bank statement."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's name."
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 1."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 2."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 3."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "unique_identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A unique identifier you choose for the transfer. Reusing this identifier for another transfer will result in an error. You can query for the transfer associated with this identifier using the List endpoint."
          }
        },
        "required": ["account_id", "amount", "message_to_recipient", "beneficiary_name"]
      },
      "create_a_wire_drawdown_request_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 10000,
          "message_to_recipient": "Invoice 29582",
          "recipient_account_number": "987654321",
          "recipient_address_line1": "33 Liberty Street",
          "recipient_address_line2": "New York, NY, 10045",
          "recipient_name": "Ian Crease",
          "recipient_routing_number": "101050001"
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient should send funds."
          },
          "amount": {
            "type": "integer",
            "description": "The amount requested from the recipient, in cents.",
            "minimum": 1
          },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "A message the recipient will see as part of the request."
          },
          "recipient_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's recipient's account number."
          },
          "recipient_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's recipient's routing number."
          },
          "recipient_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's recipient's name."
          },
          "recipient_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's recipient's address."
          },
          "recipient_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's recipient's address."
          },
          "recipient_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's recipient's address."
          }
        },
        "required": [
          "account_number_id",
          "amount",
          "message_to_recipient",
          "recipient_account_number",
          "recipient_routing_number",
          "recipient_name"
        ]
      },
      "create_a_check_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 1000,
          "fulfillment_method": "physical_check",
          "physical_check": {
            "recipient_name": "Ian Crease",
            "memo": "Check payment",
            "mailing_address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            },
            "return_address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            }
          },
          "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "source_account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number from which to send the transfer and print on the check."
          },
          "fulfillment_method": {
            "type": "string",
            "enum": ["physical_check", "third_party"],
            "description": "Whether Increase will print and mail the check or if you will do it yourself.",
            "x-enum-descriptions": [
              "Increase will print and mail a physical check.",
              "Increase will not print a check; you are responsible for printing and mailing a check with the provided account number, routing number, check number, and amount."
            ]
          },
          "physical_check": {
            "type": "object",
            "description": "Details relating to the physical check that Increase will print and mail. This is required if `fulfillment_method` is equal to `physical_check`. It must not be included if any other `fulfillment_method` is provided.",
            "properties": {
              "memo": {
                "type": "string",
                "minLength": 1,
                "maxLength": 73,
                "description": "The descriptor that will be printed on the memo field on the check."
              },
              "note": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The descriptor that will be printed on the letter included with the check."
              },
              "recipient_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 250,
                "description": "The name that will be printed on the check in the 'To:' field."
              },
              "mailing_address": {
                "type": "object",
                "description": "Details for where Increase will mail the check.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The name component of the check's destination address. Defaults to the provided `recipient_name` parameter."
                  },
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "The first line of the address component of the check's destination address."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "The second line of the address component of the check's destination address."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "The city component of the check's destination address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The US state component of the check's destination address."
                  },
                  "postal_code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "The postal code component of the check's destination address."
                  }
                },
                "required": ["line1", "city", "state", "postal_code"]
              },
              "return_address": {
                "type": "object",
                "description": "The return address to be printed on the check. If omitted this will default to the address of the Entity of the Account used to make the Check Transfer.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The name of the return address."
                  },
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the return address."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the return address."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the return address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The US state of the return address."
                  },
                  "postal_code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The postal code of the return address."
                  }
                },
                "required": ["name", "line1", "city", "state", "postal_code"]
              }
            },
            "required": ["memo", "recipient_name", "mailing_address"]
          },
          "amount": { "type": "integer", "description": "The transfer amount in cents.", "minimum": 1 },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "unique_identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A unique identifier you choose for the transfer. Reusing this identifier for another transfer will result in an error. You can query for the transfer associated with this identifier using the List endpoint."
          }
        },
        "required": ["account_id", "amount"]
      },
      "request_a_stop_payment_on_a_check_transfer_parameters": {
        "type": "object",
        "example": { "reason": "mail_delivery_failed" },
        "properties": {
          "reason": {
            "type": "string",
            "enum": ["mail_delivery_failed", "unknown"],
            "description": "The reason why this transfer should be stopped.",
            "x-enum-descriptions": [
              "The check could not be delivered.",
              "The check was stopped for another reason."
            ]
          }
        }
      },
      "create_a_check_deposit_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 1000,
          "back_image_file_id": "file_26khfk98mzfz90a11oqx",
          "currency": "USD",
          "front_image_file_id": "file_hkv175ovmc2tb2v2zbrm"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account to deposit the check in."
          },
          "amount": {
            "type": "integer",
            "description": "The deposit amount in the minor unit of the account currency. For dollars, for example, this is cents.",
            "minimum": 0
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The currency to use for the deposit."
          },
          "front_image_file_id": {
            "type": "string",
            "description": "The File containing the check's front image."
          },
          "back_image_file_id": {
            "type": "string",
            "description": "The File containing the check's back image."
          }
        },
        "required": ["account_id", "amount", "currency", "front_image_file_id", "back_image_file_id"]
      },
      "create_an_external_account_parameters": {
        "type": "object",
        "example": {
          "account_number": "987654321",
          "description": "Landlord",
          "routing_number": "101050001"
        },
        "properties": {
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 17,
            "description": "The account number for the destination account."
          },
          "funding": {
            "type": "string",
            "enum": ["checking", "savings", "other"],
            "description": "The type of the destination account. Defaults to `checking`.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account.",
              "A different type of account."
            ]
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account."
          }
        },
        "required": ["routing_number", "account_number", "description"]
      },
      "update_an_external_account_parameters": {
        "type": "object",
        "example": { "description": "New description" },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the external account."
          },
          "status": {
            "type": "string",
            "enum": ["active", "archived"],
            "description": "The status of the External Account.",
            "x-enum-descriptions": [
              "The External Account is active.",
              "The External Account is archived and won't appear in the dashboard."
            ]
          }
        }
      },
      "create_an_entity_parameters": {
        "type": "object",
        "example": {
          "corporation": {
            "name": "National Phonograph Company",
            "website": "https://example.com",
            "tax_identifier": "602214076",
            "incorporation_state": "NY",
            "address": { "line1": "33 Liberty Street", "city": "New York", "state": "NY", "zip": "10045" },
            "beneficial_owners": [
              {
                "individual": {
                  "name": "Ian Crease",
                  "date_of_birth": "1970-01-31",
                  "address": {
                    "line1": "33 Liberty Street",
                    "city": "New York",
                    "state": "NY",
                    "zip": "10045"
                  },
                  "identification": { "method": "social_security_number", "number": "078051120" }
                },
                "prongs": ["control"],
                "company_title": "CEO"
              }
            ]
          },
          "structure": "corporation",
          "supplemental_documents": [{ "file_id": "file_makxrc67oh9l6sg7w9yc" }]
        },
        "properties": {
          "structure": {
            "type": "string",
            "enum": ["corporation", "natural_person", "joint", "trust"],
            "description": "The type of Entity to create.",
            "x-enum-descriptions": [
              "A corporation.",
              "An individual person.",
              "Multiple individual people.",
              "A trust."
            ]
          },
          "corporation": {
            "type": "object",
            "description": "Details of the corporation entity to create. Required if `structure` is equal to `corporation`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The legal name of the corporation."
              },
              "website": { "type": "string", "description": "The website of the corporation." },
              "tax_identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The Employer Identification Number (EIN) for the corporation."
              },
              "incorporation_state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation."
              },
              "address": {
                "type": "object",
                "description": "The corporation's physical address. Post Office Boxes are disallowed.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": ["line1", "city", "state", "zip"]
              },
              "beneficial_owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "description": "Personal details for the beneficial owner.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "description": "The individual's physical address. Post Office Boxes are disallowed.",
                          "properties": {
                            "line1": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The first line of the address. This is usually the street number and street."
                            },
                            "line2": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The second line of the address. This might be the floor or room number."
                            },
                            "city": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": ["line1", "city", "state", "zip"]
                        },
                        "confirmed_no_us_tax_id": {
                          "type": "boolean",
                          "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                        },
                        "identification": {
                          "type": "object",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number": {
                              "type": "string",
                              "minLength": 4,
                              "maxLength": 200,
                              "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                            },
                            "passport": {
                              "type": "object",
                              "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the passport."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The passport's expiration date in YYYY-MM-DD format."
                                },
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The country that issued the passport."
                                }
                              },
                              "required": ["file_id", "expiration_date", "country"]
                            },
                            "drivers_license": {
                              "type": "object",
                              "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the front of the driver's license."
                                },
                                "back_file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the back of the driver's license."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The driver's license's expiration date in YYYY-MM-DD format."
                                },
                                "state": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The state that issued the provided driver's license."
                                }
                              },
                              "required": ["file_id", "expiration_date", "state"]
                            },
                            "other": {
                              "type": "object",
                              "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                              "properties": {
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                                },
                                "description": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "A description of the document submitted."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The document's expiration date in YYYY-MM-DD format."
                                },
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the front of the document."
                                },
                                "back_file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                                }
                              },
                              "required": ["country", "description", "file_id"]
                            }
                          },
                          "required": ["method", "number"]
                        }
                      },
                      "required": ["name", "date_of_birth", "address", "identification"]
                    },
                    "company_title": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "description": "This person's role or title within the entity."
                    },
                    "prongs": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": ["ownership", "control"],
                        "x-enum-descriptions": [
                          "A person with 25% or greater direct or indirect ownership of the entity.",
                          "A person who manages, directs, or has significant control of the entity."
                        ]
                      },
                      "description": "Why this person is considered a beneficial owner of the entity. At least one option is required, if a person is both a control person and owner, submit an array containing both."
                    }
                  },
                  "required": ["individual", "prongs"]
                },
                "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
              }
            },
            "required": ["name", "tax_identifier", "address", "beneficial_owners"]
          },
          "natural_person": {
            "type": "object",
            "description": "Details of the natural person entity to create. Required if `structure` is equal to `natural_person`. Natural people entities should be submitted with `social_security_number` or `individual_taxpayer_identification_number` identification methods.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The person's legal name."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "The person's date of birth in YYYY-MM-DD format."
              },
              "address": {
                "type": "object",
                "description": "The individual's physical address. Post Office Boxes are disallowed.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": ["line1", "city", "state", "zip"]
              },
              "confirmed_no_us_tax_id": {
                "type": "boolean",
                "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
              },
              "identification": {
                "type": "object",
                "description": "A means of verifying the person's identity.",
                "properties": {
                  "method": {
                    "type": "string",
                    "enum": [
                      "social_security_number",
                      "individual_taxpayer_identification_number",
                      "passport",
                      "drivers_license",
                      "other"
                    ],
                    "description": "A method that can be used to verify the individual's identity.",
                    "x-enum-descriptions": [
                      "A social security number.",
                      "An individual taxpayer identification number (ITIN).",
                      "A passport number.",
                      "A driver's license number.",
                      "Another identifying document."
                    ]
                  },
                  "number": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 200,
                    "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                  },
                  "passport": {
                    "type": "object",
                    "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                    "properties": {
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the passport."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The passport's expiration date in YYYY-MM-DD format."
                      },
                      "country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The country that issued the passport."
                      }
                    },
                    "required": ["file_id", "expiration_date", "country"]
                  },
                  "drivers_license": {
                    "type": "object",
                    "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                    "properties": {
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the front of the driver's license."
                      },
                      "back_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the back of the driver's license."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The driver's license's expiration date in YYYY-MM-DD format."
                      },
                      "state": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The state that issued the provided driver's license."
                      }
                    },
                    "required": ["file_id", "expiration_date", "state"]
                  },
                  "other": {
                    "type": "object",
                    "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                    "properties": {
                      "country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                      },
                      "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "A description of the document submitted."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The document's expiration date in YYYY-MM-DD format."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the front of the document."
                      },
                      "back_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                      }
                    },
                    "required": ["country", "description", "file_id"]
                  }
                },
                "required": ["method", "number"]
              }
            },
            "required": ["name", "date_of_birth", "address", "identification"]
          },
          "joint": {
            "type": "object",
            "description": "Details of the joint entity to create. Required if `structure` is equal to `joint`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The name of the joint entity."
              },
              "individuals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "description": "The person's legal name."
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "description": "The person's date of birth in YYYY-MM-DD format."
                    },
                    "address": {
                      "type": "object",
                      "description": "The individual's physical address. Post Office Boxes are disallowed.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The first line of the address. This is usually the street number and street."
                        },
                        "line2": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The second line of the address. This might be the floor or room number."
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The city of the address."
                        },
                        "state": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The ZIP code of the address."
                        }
                      },
                      "required": ["line1", "city", "state", "zip"]
                    },
                    "confirmed_no_us_tax_id": {
                      "type": "boolean",
                      "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                    },
                    "identification": {
                      "type": "object",
                      "description": "A means of verifying the person's identity.",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": [
                            "social_security_number",
                            "individual_taxpayer_identification_number",
                            "passport",
                            "drivers_license",
                            "other"
                          ],
                          "description": "A method that can be used to verify the individual's identity.",
                          "x-enum-descriptions": [
                            "A social security number.",
                            "An individual taxpayer identification number (ITIN).",
                            "A passport number.",
                            "A driver's license number.",
                            "Another identifying document."
                          ]
                        },
                        "number": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 200,
                          "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                        },
                        "passport": {
                          "type": "object",
                          "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                          "properties": {
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the passport."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The passport's expiration date in YYYY-MM-DD format."
                            },
                            "country": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The country that issued the passport."
                            }
                          },
                          "required": ["file_id", "expiration_date", "country"]
                        },
                        "drivers_license": {
                          "type": "object",
                          "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                          "properties": {
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the front of the driver's license."
                            },
                            "back_file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the back of the driver's license."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The driver's license's expiration date in YYYY-MM-DD format."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The state that issued the provided driver's license."
                            }
                          },
                          "required": ["file_id", "expiration_date", "state"]
                        },
                        "other": {
                          "type": "object",
                          "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                          "properties": {
                            "country": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                            },
                            "description": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "A description of the document submitted."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The document's expiration date in YYYY-MM-DD format."
                            },
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the front of the document."
                            },
                            "back_file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                            }
                          },
                          "required": ["country", "description", "file_id"]
                        }
                      },
                      "required": ["method", "number"]
                    }
                  },
                  "required": ["name", "date_of_birth", "address", "identification"]
                },
                "description": "The two individuals that share control of the entity."
              }
            },
            "required": ["individuals"]
          },
          "trust": {
            "type": "object",
            "description": "Details of the trust entity to create. Required if `structure` is equal to `trust`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The legal name of the trust."
              },
              "category": {
                "type": "string",
                "enum": ["revocable", "irrevocable"],
                "description": "Whether the trust is `revocable` or `irrevocable`. Irrevocable trusts require their own Employer Identification Number. Revocable trusts require information about the individual `grantor` who created the trust.",
                "x-enum-descriptions": [
                  "The trust is revocable by the grantor.",
                  "The trust cannot be revoked."
                ]
              },
              "tax_identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The Employer Identification Number (EIN) for the trust. Required if `category` is equal to `irrevocable`."
              },
              "formation_state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed."
              },
              "address": {
                "type": "object",
                "description": "The trust's physical address. Post Office Boxes are disallowed.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": ["line1", "city", "state", "zip"]
              },
              "formation_document_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the formation document of the trust."
              },
              "trustees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "structure": {
                      "type": "string",
                      "enum": ["individual"],
                      "description": "The structure of the trustee.",
                      "x-enum-descriptions": ["The trustee is an individual."]
                    },
                    "individual": {
                      "type": "object",
                      "description": "Details of the individual trustee. Required when the trustee `structure` is equal to `individual`.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "description": "The individual's physical address. Post Office Boxes are disallowed.",
                          "properties": {
                            "line1": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The first line of the address. This is usually the street number and street."
                            },
                            "line2": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The second line of the address. This might be the floor or room number."
                            },
                            "city": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": ["line1", "city", "state", "zip"]
                        },
                        "confirmed_no_us_tax_id": {
                          "type": "boolean",
                          "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                        },
                        "identification": {
                          "type": "object",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number": {
                              "type": "string",
                              "minLength": 4,
                              "maxLength": 200,
                              "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                            },
                            "passport": {
                              "type": "object",
                              "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the passport."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The passport's expiration date in YYYY-MM-DD format."
                                },
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The country that issued the passport."
                                }
                              },
                              "required": ["file_id", "expiration_date", "country"]
                            },
                            "drivers_license": {
                              "type": "object",
                              "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the front of the driver's license."
                                },
                                "back_file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the back of the driver's license."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The driver's license's expiration date in YYYY-MM-DD format."
                                },
                                "state": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The state that issued the provided driver's license."
                                }
                              },
                              "required": ["file_id", "expiration_date", "state"]
                            },
                            "other": {
                              "type": "object",
                              "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                              "properties": {
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                                },
                                "description": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "A description of the document submitted."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The document's expiration date in YYYY-MM-DD format."
                                },
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the front of the document."
                                },
                                "back_file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                                }
                              },
                              "required": ["country", "description", "file_id"]
                            }
                          },
                          "required": ["method", "number"]
                        }
                      },
                      "required": ["name", "date_of_birth", "address", "identification"]
                    }
                  },
                  "required": ["structure"]
                },
                "description": "The trustees of the trust."
              },
              "grantor": {
                "type": "object",
                "description": "The grantor of the trust. Required if `category` is equal to `revocable`.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The person's legal name."
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "The person's date of birth in YYYY-MM-DD format."
                  },
                  "address": {
                    "type": "object",
                    "description": "The individual's physical address. Post Office Boxes are disallowed.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The first line of the address. This is usually the street number and street."
                      },
                      "line2": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The second line of the address. This might be the floor or room number."
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The city of the address."
                      },
                      "state": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The ZIP code of the address."
                      }
                    },
                    "required": ["line1", "city", "state", "zip"]
                  },
                  "confirmed_no_us_tax_id": {
                    "type": "boolean",
                    "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                  },
                  "identification": {
                    "type": "object",
                    "description": "A means of verifying the person's identity.",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "social_security_number",
                          "individual_taxpayer_identification_number",
                          "passport",
                          "drivers_license",
                          "other"
                        ],
                        "description": "A method that can be used to verify the individual's identity.",
                        "x-enum-descriptions": [
                          "A social security number.",
                          "An individual taxpayer identification number (ITIN).",
                          "A passport number.",
                          "A driver's license number.",
                          "Another identifying document."
                        ]
                      },
                      "number": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 200,
                        "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                      },
                      "passport": {
                        "type": "object",
                        "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the passport."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The passport's expiration date in YYYY-MM-DD format."
                          },
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The country that issued the passport."
                          }
                        },
                        "required": ["file_id", "expiration_date", "country"]
                      },
                      "drivers_license": {
                        "type": "object",
                        "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the front of the driver's license."
                          },
                          "back_file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the back of the driver's license."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The driver's license's expiration date in YYYY-MM-DD format."
                          },
                          "state": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The state that issued the provided driver's license."
                          }
                        },
                        "required": ["file_id", "expiration_date", "state"]
                      },
                      "other": {
                        "type": "object",
                        "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                        "properties": {
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "A description of the document submitted."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The document's expiration date in YYYY-MM-DD format."
                          },
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the front of the document."
                          },
                          "back_file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                          }
                        },
                        "required": ["country", "description", "file_id"]
                      }
                    },
                    "required": ["method", "number"]
                  }
                },
                "required": ["name", "date_of_birth", "address", "identification"]
              }
            },
            "required": ["name", "category", "address", "trustees"]
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the entity."
          },
          "relationship": {
            "type": "string",
            "enum": ["affiliated", "informational", "unaffiliated"],
            "description": "The relationship between your group and the entity.",
            "x-enum-descriptions": [
              "The entity is controlled by your group.",
              "The entity is for informational purposes only.",
              "The entity is not controlled by your group, but can still directly open accounts."
            ]
          },
          "supplemental_documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_id": {
                  "type": "string",
                  "description": "The identifier of the File containing the document."
                }
              },
              "required": ["file_id"]
            },
            "description": "Additional documentation associated with the entity."
          }
        },
        "required": ["structure"]
      },
      "update_a_natural_person_or_corporation's_address_parameters": {
        "type": "object",
        "example": {
          "address": {
            "line1": "33 Liberty Street",
            "line2": "Unit 2",
            "city": "New York",
            "state": "NY",
            "zip": "10045"
          }
        },
        "properties": {
          "address": {
            "type": "object",
            "description": "The entity's physical address. Post Office Boxes are disallowed.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the address. This is usually the street number and street."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the address. This might be the floor or room number."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
              },
              "zip": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The ZIP code of the address."
              }
            },
            "required": ["line1", "city", "state", "zip"]
          }
        },
        "required": ["address"]
      },
      "update_the_address_for_a_beneficial_owner_belonging_to_a_corporate_entity_parameters": {
        "type": "object",
        "example": {
          "address": {
            "line1": "33 Liberty Street",
            "line2": "Unit 2",
            "city": "New York",
            "state": "NY",
            "zip": "10045"
          },
          "beneficial_owner_id": "entity_setup_beneficial_owner_submission_vgkyk7dj5eb4sfhdbkx7",
          "entity_id": "entity_n8y8tnk2p9339ti393yi"
        },
        "properties": {
          "entity_id": { "type": "string", "description": "The identifier of the Entity to retrieve." },
          "beneficial_owner_id": {
            "type": "string",
            "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
          },
          "address": {
            "type": "object",
            "description": "The individual's physical address. Post Office Boxes are disallowed.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the address. This is usually the street number and street."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the address. This might be the floor or room number."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
              },
              "zip": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The ZIP code of the address."
              }
            },
            "required": ["line1", "city", "state", "zip"]
          }
        },
        "required": ["entity_id", "beneficial_owner_id", "address"]
      },
      "create_a_beneficial_owner_for_a_corporate_entity_parameters": {
        "type": "object",
        "example": {
          "beneficial_owner": {
            "individual": {
              "name": "Ian Crease",
              "date_of_birth": "1970-01-31",
              "address": { "line1": "33 Liberty Street", "city": "New York", "state": "NY", "zip": "10045" },
              "identification": { "method": "social_security_number", "number": "078051120" }
            },
            "prongs": ["control"],
            "company_title": "CEO"
          },
          "entity_id": "entity_n8y8tnk2p9339ti393yi"
        },
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The identifier of the Entity to associate with the new Beneficial Owner."
          },
          "beneficial_owner": {
            "type": "object",
            "description": "The identifying details of anyone controlling or owning 25% or more of the corporation.",
            "properties": {
              "individual": {
                "type": "object",
                "description": "Personal details for the beneficial owner.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The person's legal name."
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "The person's date of birth in YYYY-MM-DD format."
                  },
                  "address": {
                    "type": "object",
                    "description": "The individual's physical address. Post Office Boxes are disallowed.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The first line of the address. This is usually the street number and street."
                      },
                      "line2": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The second line of the address. This might be the floor or room number."
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The city of the address."
                      },
                      "state": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The ZIP code of the address."
                      }
                    },
                    "required": ["line1", "city", "state", "zip"]
                  },
                  "confirmed_no_us_tax_id": {
                    "type": "boolean",
                    "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                  },
                  "identification": {
                    "type": "object",
                    "description": "A means of verifying the person's identity.",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "social_security_number",
                          "individual_taxpayer_identification_number",
                          "passport",
                          "drivers_license",
                          "other"
                        ],
                        "description": "A method that can be used to verify the individual's identity.",
                        "x-enum-descriptions": [
                          "A social security number.",
                          "An individual taxpayer identification number (ITIN).",
                          "A passport number.",
                          "A driver's license number.",
                          "Another identifying document."
                        ]
                      },
                      "number": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 200,
                        "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                      },
                      "passport": {
                        "type": "object",
                        "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the passport."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The passport's expiration date in YYYY-MM-DD format."
                          },
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The country that issued the passport."
                          }
                        },
                        "required": ["file_id", "expiration_date", "country"]
                      },
                      "drivers_license": {
                        "type": "object",
                        "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the front of the driver's license."
                          },
                          "back_file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the back of the driver's license."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The driver's license's expiration date in YYYY-MM-DD format."
                          },
                          "state": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The state that issued the provided driver's license."
                          }
                        },
                        "required": ["file_id", "expiration_date", "state"]
                      },
                      "other": {
                        "type": "object",
                        "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                        "properties": {
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "A description of the document submitted."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The document's expiration date in YYYY-MM-DD format."
                          },
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the front of the document."
                          },
                          "back_file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the back of the document. Not every document has a reverse side."
                          }
                        },
                        "required": ["country", "description", "file_id"]
                      }
                    },
                    "required": ["method", "number"]
                  }
                },
                "required": ["name", "date_of_birth", "address", "identification"]
              },
              "company_title": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "This person's role or title within the entity."
              },
              "prongs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["ownership", "control"],
                  "x-enum-descriptions": [
                    "A person with 25% or greater direct or indirect ownership of the entity.",
                    "A person who manages, directs, or has significant control of the entity."
                  ]
                },
                "description": "Why this person is considered a beneficial owner of the entity. At least one option is required, if a person is both a control person and owner, submit an array containing both."
              }
            },
            "required": ["individual", "prongs"]
          }
        },
        "required": ["entity_id", "beneficial_owner"]
      },
      "archive_a_beneficial_owner_for_a_corporate_entity_parameters": {
        "type": "object",
        "example": {
          "beneficial_owner_id": "entity_setup_beneficial_owner_submission_vgkyk7dj5eb4sfhdbkx7",
          "entity_id": "entity_n8y8tnk2p9339ti393yi"
        },
        "properties": {
          "entity_id": { "type": "string", "description": "The identifier of the Entity to retrieve." },
          "beneficial_owner_id": {
            "type": "string",
            "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
          }
        },
        "required": ["entity_id", "beneficial_owner_id"]
      },
      "create_a_supplemental_document_for_an_entity_parameters": {
        "type": "object",
        "example": { "file_id": "file_makxrc67oh9l6sg7w9yc" },
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing the document."
          }
        },
        "required": ["file_id"]
      },
      "create_a_file_parameters": {
        "type": "object",
        "example": { "file": "\"@tax_form.pdf\"", "purpose": "check_image_front" },
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The file contents. This should follow the specifications of [RFC 7578](https://datatracker.ietf.org/doc/html/rfc7578) which defines file transfers for the multipart/form-data protocol."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the File."
          },
          "purpose": {
            "type": "string",
            "enum": [
              "check_image_front",
              "check_image_back",
              "mailed_check_image",
              "form_ss_4",
              "identity_document",
              "other",
              "trust_formation_document",
              "digital_wallet_artwork",
              "digital_wallet_app_icon",
              "physical_card_front",
              "physical_card_carrier",
              "document_request",
              "entity_supplemental_document"
            ],
            "description": "What the File will be used for in Increase's systems.",
            "x-enum-descriptions": [
              "An image of the front of a check, used for check deposits.",
              "An image of the back of a check, used for check deposits.",
              "An image of a check that was mailed to a recipient.",
              "IRS Form SS-4.",
              "An image of a government-issued ID.",
              "A file purpose not covered by any of the other cases.",
              "A legal document forming a trust.",
              "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
              "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
              "A card image to be printed on the front of a physical card. This must be a 2100x1340 pixel PNG with no other color but black.",
              "An image representing the entirety of the carrier used for a physical card. This must be a 2550x3300 pixel PNG with no other color but black.",
              "A document requested by Increase.",
              "A supplemental document associated an an Entity."
            ]
          }
        },
        "required": ["file", "purpose"]
      },
      "create_an_event_subscription_parameters": {
        "type": "object",
        "example": { "url": "https://website.com/webhooks" },
        "properties": {
          "url": { "type": "string", "description": "The URL you'd like us to send webhooks to." },
          "shared_secret": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "The key that will be used to sign webhooks. If no value is passed, a random string will be used as default."
          },
          "selected_event_category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "bookkeeping_account.created",
              "bookkeeping_account.updated",
              "bookkeeping_entry_set.updated",
              "card.created",
              "card.updated",
              "card_payment.created",
              "card_payment.updated",
              "card_profile.created",
              "card_profile.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "event_subscription.created",
              "event_subscription.updated",
              "export.created",
              "export.updated",
              "external_account.created",
              "external_account.updated",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer.created",
              "inbound_ach_transfer.updated",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "intrafi_account_enrollment.created",
              "intrafi_account_enrollment.updated",
              "intrafi_exclusion.created",
              "intrafi_exclusion.updated",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "physical_card.created",
              "physical_card.updated",
              "proof_of_authorization_request.created",
              "proof_of_authorization_request.updated",
              "proof_of_authorization_request_submission.created",
              "proof_of_authorization_request_submission.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Bookkeeping Account is created.",
              "Occurs whenever a Bookkeeping Account is updated.",
              "Occurs whenever a Bookkeeping Entry Set is created.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Payment is created.",
              "Occurs whenever a Card Payment is updated.",
              "Occurs whenever a Card Profile is created.",
              "Occurs whenever a Card Profile is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an Event Subscription is created.",
              "Occurs whenever an Event Subscription is updated.",
              "Occurs whenever an Export is created.",
              "Occurs whenever an Export is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever an External Account is updated.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer is created.",
              "Occurs whenever an Inbound ACH Transfer is updated.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an IntraFi Account Enrollment is created.",
              "Occurs whenever an IntraFi Account Enrollment is updated.",
              "Occurs whenever an IntraFi Exclusion is created.",
              "Occurs whenever an IntraFi Exclusion is updated.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Physical Card is created.",
              "Occurs whenever a Physical Card is updated.",
              "Occurs whenever a Proof of Authorization Request is created.",
              "Occurs whenever a Proof of Authorization Request is updated.",
              "Occurs whenever a Proof of Authorization Request Submission is created.",
              "Occurs whenever a Proof of Authorization Request Submission is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real-Time Payments Transfer is created.",
              "Occurs whenever a Real-Time Payments Transfer is updated.",
              "Occurs whenever a Real-Time Payments Request for Payment is created.",
              "Occurs whenever a Real-Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is created.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          }
        },
        "required": ["url"]
      },
      "update_an_event_subscription_parameters": {
        "type": "object",
        "example": {},
        "properties": {
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "deleted"],
            "description": "The status to update the Event Subscription with.",
            "x-enum-descriptions": [
              "The subscription is active and Events will be delivered normally.",
              "The subscription is temporarily disabled and Events will not be delivered.",
              "The subscription is permanently disabled and Events will not be delivered."
            ]
          }
        }
      },
      "action_a_real_time_decision_parameters": {
        "type": "object",
        "example": { "card_authorization": { "decision": "approve" } },
        "properties": {
          "card_authorization": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.",
            "properties": {
              "decision": {
                "type": "string",
                "enum": ["approve", "decline"],
                "description": "Whether the card authorization should be approved or declined.",
                "x-enum-descriptions": ["Approve the authorization.", "Decline the authorization."]
              }
            },
            "required": ["decision"]
          },
          "digital_wallet_token": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.",
            "properties": {
              "approval": {
                "type": "object",
                "description": "If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.",
                "properties": {
                  "card_profile_id": {
                    "type": "string",
                    "description": "The identifier of the Card Profile to assign to the Digital Wallet token."
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "An email address that can be used to verify the cardholder via one-time passcode."
                  }
                },
                "required": ["card_profile_id"]
              },
              "decline": {
                "type": "object",
                "description": "If your application declines the provisioning attempt, this contains details about the decline.",
                "properties": {
                  "reason": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "Why the tokenization attempt was declined. This is for logging purposes only and is not displayed to the end-user."
                  }
                }
              }
            }
          },
          "digital_wallet_authentication": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.",
            "properties": {
              "result": {
                "type": "string",
                "enum": ["success", "failure"],
                "description": "Whether your application was able to deliver the one-time passcode.",
                "x-enum-descriptions": [
                  "Your application successfully delivered the one-time passcode to the cardholder.",
                  "Your application failed to deliver the one-time passcode to the cardholder."
                ]
              }
            },
            "required": ["result"]
          }
        }
      },
      "create_an_export_parameters": {
        "type": "object",
        "example": {
          "category": "transaction_csv",
          "transaction_csv": { "account_id": "account_in71c4amph0vgo2qllky" }
        },
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "account_statement_ofx",
              "transaction_csv",
              "balance_csv",
              "bookkeeping_account_balance_csv",
              "entity_csv"
            ],
            "description": "The type of Export to create.",
            "x-enum-descriptions": [
              "Export an Open Financial Exchange (OFX) file of transactions and balances for a given time range and Account.",
              "Export a CSV of all transactions for a given time range.",
              "Export a CSV of account balances for the dates in a given range.",
              "Export a CSV of bookkeeping account balances for the dates in a given range.",
              "Export a CSV of entities with a given status."
            ]
          },
          "transaction_csv": {
            "type": "object",
            "description": "Options for the created export. Required if `category` is equal to `transaction_csv`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "Filter exported Transactions to the specified Account."
              },
              "created_at": {
                "type": "object",
                "description": "Filter results by time range on the `created_at` attribute.",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  }
                }
              }
            }
          },
          "balance_csv": {
            "type": "object",
            "description": "Options for the created export. Required if `category` is equal to `balance_csv`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "Filter exported Transactions to the specified Account."
              },
              "created_at": {
                "type": "object",
                "description": "Filter results by time range on the `created_at` attribute.",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  }
                }
              }
            }
          },
          "bookkeeping_account_balance_csv": {
            "type": "object",
            "description": "Options for the created export. Required if `category` is equal to `bookkeeping_account_balance_csv`.",
            "properties": {
              "bookkeeping_account_id": {
                "type": "string",
                "description": "Filter exported Transactions to the specified BookkeepingAccount."
              },
              "created_at": {
                "type": "object",
                "description": "Filter results by time range on the `created_at` attribute.",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  }
                }
              }
            }
          },
          "account_statement_ofx": {
            "type": "object",
            "description": "Options for the created export. Required if `category` is equal to `account_statement_ofx`.",
            "properties": {
              "account_id": { "type": "string", "description": "The Account to create a statement for." },
              "created_at": {
                "type": "object",
                "description": "Filter results by time range on the `created_at` attribute.",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  },
                  "on_or_before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
                  }
                }
              }
            },
            "required": ["account_id"]
          },
          "entity_csv": {
            "type": "object",
            "description": "Options for the created export. Required if `category` is equal to `entity_csv`.",
            "properties": {
              "status": {
                "type": "object",
                "description": "Entity statuses to filter by.",
                "properties": {
                  "in": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["active", "archived", "disabled"],
                      "x-enum-descriptions": [
                        "The entity is active.",
                        "The entity is archived, and can no longer be used to create accounts.",
                        "The entity is temporarily disabled and cannot be used for financial activity."
                      ]
                    },
                    "description": "Entity statuses to filter by. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
                  }
                },
                "required": ["in"]
              }
            }
          }
        },
        "required": ["category"]
      },
      "create_a_bookkeeping_account_parameters": {
        "type": "object",
        "example": { "name": "New Account!" },
        "properties": {
          "compliance_category": {
            "type": "string",
            "enum": ["commingled_cash", "customer_balance"],
            "description": "The account compliance category.",
            "x-enum-descriptions": ["A cash in an commingled Increase Account.", "A customer balance."]
          },
          "entity_id": {
            "type": "string",
            "description": "The entity, if `compliance_category` is `customer_balance`."
          },
          "account_id": {
            "type": "string",
            "description": "The entity, if `compliance_category` is `commingled_cash`."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the account."
          }
        },
        "required": ["name"]
      },
      "update_a_bookkeeping_account_parameters": {
        "type": "object",
        "example": { "name": "Deprecated Account" },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the account."
          }
        },
        "required": ["name"]
      },
      "create_a_bookkeeping_entry_set_parameters": {
        "type": "object",
        "example": {
          "date": "2020-01-31T23:59:59Z",
          "entries": [
            { "account_id": "bookkeeping_account_9husfpw68pzmve9dvvc7", "amount": 100 },
            { "account_id": "bookkeeping_account_t2obldz1rcu15zr54umg", "amount": -100 }
          ],
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
        },
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the transaction. Optional if `transaction_id` is provided, in which case we use the `date` of that transaction. Required otherwise."
          },
          "transaction_id": {
            "type": "string",
            "description": "The identifier of the Transaction related to this entry set, if any."
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string",
                  "description": "The identifier for the Bookkeeping Account impacted by this entry."
                },
                "amount": {
                  "type": "integer",
                  "description": "The entry amount in the minor unit of the account currency. For dollars, for example, this is cents. Debit entries have positive amounts; credit entries have negative amounts."
                }
              },
              "required": ["account_id", "amount"]
            },
            "description": "The bookkeeping entries."
          }
        },
        "required": ["entries"]
      },
      "create_a_real_time_payments_transfer_parameters": {
        "type": "object",
        "example": {
          "amount": 100,
          "creditor_name": "Ian Crease",
          "destination_account_number": "987654321",
          "destination_routing_number": "101050001",
          "remittance_information": "Invoice 29582",
          "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2"
        },
        "properties": {
          "source_account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number from which to send the transfer."
          },
          "destination_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 34,
            "description": "The destination account number."
          },
          "destination_routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The destination American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "external_account_id": {
            "type": "string",
            "description": "The ID of an External Account to initiate a transfer to. If this parameter is provided, `destination_account_number` and `destination_routing_number` must be absent."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents. For Real-Time Payments transfers, must be positive.",
            "minimum": 1
          },
          "creditor_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "The name of the transfer's recipient."
          },
          "remittance_information": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "Unstructured information that will show on the recipient's bank statement."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "unique_identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A unique identifier you choose for the transfer. Reusing this identifier for another transfer will result in an error. You can query for the transfer associated with this identifier using the List endpoint."
          }
        },
        "required": ["source_account_number_id", "amount", "creditor_name", "remittance_information"]
      },
      "submit_proof_of_authorization_parameters": {
        "type": "object",
        "example": {
          "authorization_terms": "I agree to the terms of service.",
          "authorized_at": "2020-01-31T23:59:59Z",
          "authorizer_company": "National Phonograph Company",
          "authorizer_email": "user@example.com",
          "authorizer_name": "Ian Crease",
          "proof_of_authorization_request_id": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b"
        },
        "properties": {
          "proof_of_authorization_request_id": {
            "type": "string",
            "description": "ID of the proof of authorization request."
          },
          "authorizer_email": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Email of the authorizer."
          },
          "authorizer_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Name of the authorizer."
          },
          "authorizer_ip_address": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "IP address of the authorizer."
          },
          "authorizer_company": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Company of the authorizer."
          },
          "authorization_terms": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2048,
            "description": "Terms of authorization."
          },
          "authorized_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time of authorization."
          }
        },
        "required": [
          "proof_of_authorization_request_id",
          "authorizer_email",
          "authorizer_name",
          "authorization_terms",
          "authorized_at"
        ]
      },
      "simulate_an_ach_transfer_to_your_account_parameters": {
        "type": "object",
        "example": { "account_number_id": "account_number_v18nkfqm6afpsrvy82b2", "amount": 1000 },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound ACH Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Data associated with the transfer set by the sender."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "The description of the transfer set by the sender."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name of the sender."
          },
          "company_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "description": "The sender's company id."
          },
          "resolve_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the transfer should be resolved. If not provided will resolve immediately."
          }
        },
        "required": ["account_number_id", "amount"]
      },
      "return_a_sandbox_ach_transfer_parameters": {
        "type": "object",
        "example": {},
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "insufficient_fund",
              "no_account",
              "account_closed",
              "invalid_account_number_structure",
              "account_frozen_entry_returned_per_ofac_instruction",
              "credit_entry_refused_by_receiver",
              "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
              "corporate_customer_advised_not_authorized",
              "payment_stopped",
              "non_transaction_account",
              "uncollected_funds",
              "routing_number_check_digit_error",
              "customer_advised_unauthorized_improper_ineligible_or_incomplete",
              "amount_field_error",
              "authorization_revoked_by_customer",
              "invalid_ach_routing_number",
              "file_record_edit_criteria",
              "enr_invalid_individual_name",
              "returned_per_odfi_request",
              "limited_participation_dfi",
              "incorrectly_coded_outbound_international_payment",
              "account_sold_to_another_dfi",
              "addenda_error",
              "beneficiary_or_account_holder_deceased",
              "customer_advised_not_within_authorization_terms",
              "corrected_return",
              "duplicate_entry",
              "duplicate_return",
              "enr_duplicate_enrollment",
              "enr_invalid_dfi_account_number",
              "enr_invalid_individual_id_number",
              "enr_invalid_representative_payee_indicator",
              "enr_invalid_transaction_code",
              "enr_return_of_enr_entry",
              "enr_routing_number_check_digit_error",
              "entry_not_processed_by_gateway",
              "field_error",
              "foreign_receiving_dfi_unable_to_settle",
              "iat_entry_coding_error",
              "improper_effective_entry_date",
              "improper_source_document_source_document_presented",
              "invalid_company_id",
              "invalid_foreign_receiving_dfi_identification",
              "invalid_individual_id_number",
              "item_and_rck_entry_presented_for_payment",
              "item_related_to_rck_entry_is_ineligible",
              "mandatory_field_error",
              "misrouted_dishonored_return",
              "misrouted_return",
              "no_errors_found",
              "non_acceptance_of_r62_dishonored_return",
              "non_participant_in_iat_program",
              "permissible_return_entry",
              "permissible_return_entry_not_accepted",
              "rdfi_non_settlement",
              "rdfi_participant_in_check_truncation_program",
              "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
              "return_not_a_duplicate",
              "return_of_erroneous_or_reversing_debit",
              "return_of_improper_credit_entry",
              "return_of_improper_debit_entry",
              "return_of_xck_entry",
              "source_document_presented_for_payment",
              "state_law_affecting_rck_acceptance",
              "stop_payment_on_item_related_to_rck_entry",
              "stop_payment_on_source_document",
              "timely_original_return",
              "trace_number_error",
              "untimely_dishonored_return",
              "untimely_return"
            ],
            "description": "The reason why the Federal Reserve or destination bank returned this transfer. Defaults to `no_account`.",
            "x-enum-descriptions": [
              "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
              "Code R03. The account does not exist or the receiving bank was unable to locate it.",
              "Code R02. The account is closed at the receiving bank.",
              "Code R04. The account number is invalid at the receiving bank.",
              "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
              "Code R23. The receiving bank account refused a credit transfer.",
              "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
              "Code R29. The corporate customer at the receiving bank reversed the transfer.",
              "Code R08. The receiving bank stopped payment on this transfer.",
              "Code R20. The receiving bank account does not perform transfers.",
              "Code R09. The receiving bank account does not have enough available balance for the transfer.",
              "Code R28. The routing number is incorrect.",
              "Code R10. The customer at the receiving bank reversed the transfer.",
              "Code R19. The amount field is incorrect or too large.",
              "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
              "Code R13. The routing number is invalid.",
              "Code R17. The receiving bank is unable to process a field in the transfer.",
              "Code R45. The individual name field was invalid.",
              "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
              "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
              "Code R85. The outbound international ACH transfer was incorrect.",
              "Code R12. A rare return reason. The account was sold to another bank.",
              "Code R25. The addenda record is incorrect or missing.",
              "Code R15. A rare return reason. The account holder is deceased.",
              "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
              "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
              "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
              "Code R67. A rare return reason. The return this message refers to was a duplicate.",
              "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
              "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
              "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
              "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
              "Code R80. A rare return reason. The International ACH Transfer is malformed.",
              "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
              "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
              "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
              "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
              "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
              "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
              "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
              "Code R26. A rare return reason. The ACH is missing a required field.",
              "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
              "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
              "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
              "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
              "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
              "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
              "Code R70. A rare return reason. The receiving bank had not approved this return.",
              "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
              "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
              "Code R14. A rare return reason. The payee is deceased.",
              "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
              "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
              "Code R36. A rare return reason. Return of a malformed credit entry.",
              "Code R35. A rare return reason. Return of a malformed debit entry.",
              "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
              "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
              "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
              "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
              "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
              "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
              "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
              "Code R72. A rare return reason. The dishonored return was sent too late.",
              "Code R68. A rare return reason. The return was sent too late."
            ]
          }
        }
      },
      "simulate_a_wire_transfer_to_your_account_parameters": {
        "type": "object",
        "example": { "account_number_id": "account_number_v18nkfqm6afpsrvy82b2", "amount": 1000 },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound Wire Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. Must be positive.",
            "minimum": 1
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line1 in production. You can simulate any value here."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line2 in production. You can simulate any value here."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line3 in production. You can simulate any value here."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_name in production. You can simulate any value here."
          },
          "beneficiary_reference": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_reference in production. You can simulate any value here."
          },
          "originator_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line1 in production. You can simulate any value here."
          },
          "originator_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line2 in production. You can simulate any value here."
          },
          "originator_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line3 in production. You can simulate any value here."
          },
          "originator_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_name in production. You can simulate any value here."
          },
          "originator_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_routing_number in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line1 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line2 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line3 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line4 in production. You can simulate any value here."
          }
        },
        "required": ["account_number_id", "amount"]
      },
      "simulate_an_inbound_wire_drawdown_request_being_created_parameters": {
        "type": "object",
        "example": {
          "amount": 10000,
          "beneficiary_account_number": "987654321",
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York, NY, 10045",
          "beneficiary_name": "Ian Crease",
          "beneficiary_routing_number": "101050001",
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "originator_account_number": "987654321",
          "originator_address_line1": "33 Liberty Street",
          "originator_address_line2": "New York, NY, 10045",
          "originator_name": "Ian Crease",
          "originator_routing_number": "101050001",
          "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2"
        },
        "properties": {
          "recipient_account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient of this request is being requested to send funds from."
          },
          "originator_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's originator's account number."
          },
          "originator_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's originator's routing number."
          },
          "beneficiary_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's beneficiary's account number."
          },
          "beneficiary_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's beneficiary's routing number."
          },
          "amount": {
            "type": "integer",
            "description": "The amount being requested in cents.",
            "minimum": 0
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "A message from the drawdown request's originator."
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 4 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's originator's name."
          },
          "originator_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's originator's address."
          },
          "originator_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's originator's address."
          },
          "originator_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's originator's address."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's beneficiary's name."
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's beneficiary's address."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's beneficiary's address."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's beneficiary's address."
          }
        },
        "required": [
          "recipient_account_number_id",
          "originator_account_number",
          "originator_routing_number",
          "beneficiary_account_number",
          "beneficiary_routing_number",
          "amount",
          "currency",
          "message_to_recipient"
        ]
      },
      "simulate_an_authorization_on_a_card_parameters": {
        "type": "object",
        "example": {
          "amount": 1000,
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "event_subscription_id": "event_subscription_001dzz0r20rcdxgb013zqb8m04g"
        },
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The authorization amount in cents.",
            "minimum": 1,
            "maximum": 1000000000
          },
          "card_id": { "type": "string", "description": "The identifier of the Card to be authorized." },
          "physical_card_id": {
            "type": "string",
            "description": "The identifier of the Physical Card to be authorized."
          },
          "digital_wallet_token_id": {
            "type": "string",
            "description": "The identifier of the Digital Wallet Token to be authorized."
          },
          "event_subscription_id": {
            "type": "string",
            "description": "The identifier of the Event Subscription to use. If provided, will override the default real time event subscription. Because you can only create one real time decision event subscription, you can use this field to route events to any specified event subscription for testing purposes."
          }
        },
        "required": ["amount"]
      },
      "simulate_an_interest_payment_to_your_account_parameters": {
        "type": "object",
        "example": { "account_id": "account_in71c4amph0vgo2qllky", "amount": 1000 },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account Number the Interest Payment is for."
          },
          "amount": {
            "type": "integer",
            "description": "The interest amount in cents. Must be positive.",
            "minimum": 1
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "description": "The start of the interest period. If not provided, defaults to the current time."
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "description": "The end of the interest period. If not provided, defaults to the current time."
          }
        },
        "required": ["account_id", "amount"]
      },
      "simulate_settling_a_card_authorization_parameters": {
        "type": "object",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4"
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The identifier of the Card to create a settlement on."
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The identifier of the Pending Transaction for the Card Authorization you wish to settle."
          },
          "amount": {
            "type": "integer",
            "description": "The amount to be settled. This defaults to the amount of the Pending Transaction being settled.",
            "minimum": 1
          }
        },
        "required": ["card_id", "pending_transaction_id"]
      },
      "simulate_a_refund_on_a_card_parameters": {
        "type": "object",
        "example": { "transaction_id": "transaction_uyrp7fld2ium70oa7oi" },
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The identifier for the Transaction to refund. The Transaction's source must have a category of card_settlement."
          }
        },
        "required": ["transaction_id"]
      },
      "simulate_advancing_the_state_of_a_card_dispute_parameters": {
        "type": "object",
        "example": { "explanation": "This was a valid recurring transaction", "status": "rejected" },
        "properties": {
          "status": {
            "type": "string",
            "enum": ["accepted", "rejected"],
            "description": "The status to move the dispute to.",
            "x-enum-descriptions": [
              "The Card Dispute has been accepted and your funds have been returned.",
              "The Card Dispute has been rejected."
            ]
          },
          "explanation": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Why the dispute was rejected. Not required for accepting disputes."
          }
        },
        "required": ["status"]
      },
      "simulate_digital_wallet_provisioning_for_a_card_parameters": {
        "type": "object",
        "example": { "card_id": "card_oubs0hwk5rn6knuecxg2" },
        "properties": {
          "card_id": { "type": "string", "description": "The identifier of the Card to be authorized." }
        },
        "required": ["card_id"]
      },
      "simulate_a_real_time_payments_transfer_to_your_account_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 1000,
          "request_for_payment_id": "real_time_payments_request_for_payment_28kcliz1oevcnqyn9qp7"
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound Real-Time Payments Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents. Must be positive.",
            "minimum": 1
          },
          "request_for_payment_id": {
            "type": "string",
            "description": "The identifier of a pending Request for Payment that this transfer will fulfill."
          },
          "debtor_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name provided by the sender of the transfer."
          },
          "debtor_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number of the account that sent the transfer."
          },
          "debtor_routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The routing number of the account that sent the transfer."
          },
          "remittance_information": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "Additional information included with the transfer."
          }
        },
        "required": ["account_number_id", "amount"]
      },
      "simulate_an_account_statement_being_created_parameters": {
        "type": "object",
        "example": { "account_id": "account_in71c4amph0vgo2qllky" },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account the statement is for."
          }
        },
        "required": ["account_id"]
      },
      "simulate_a_tax_document_being_created_parameters": {
        "type": "object",
        "example": { "account_id": "account_in71c4amph0vgo2qllky" },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account the tax document is for."
          }
        },
        "required": ["account_id"]
      },
      "complete_a_sandbox_real_time_payments_transfer_parameters": {
        "type": "object",
        "example": {},
        "properties": {
          "rejection": {
            "type": "object",
            "description": "If set, the simulation will reject the transfer.",
            "properties": {
              "reject_reason_code": {
                "type": "string",
                "enum": [
                  "account_closed",
                  "account_blocked",
                  "invalid_creditor_account_type",
                  "invalid_creditor_account_number",
                  "invalid_creditor_financial_institution_identifier",
                  "end_customer_deceased",
                  "narrative",
                  "transaction_forbidden",
                  "transaction_type_not_supported",
                  "unexpected_amount",
                  "amount_exceeds_bank_limits",
                  "invalid_creditor_address",
                  "unknown_end_customer",
                  "invalid_debtor_address",
                  "timeout",
                  "unsupported_message_for_recipient",
                  "recipient_connection_not_available",
                  "real_time_payments_suspended",
                  "instructed_agent_signed_off",
                  "processing_error",
                  "other"
                ],
                "description": "The reason code that the simulated rejection will have.",
                "x-enum-descriptions": [
                  "The destination account is closed. Corresponds to the Real-Time Payments reason code `AC04`.",
                  "The destination account is currently blocked from receiving transactions. Corresponds to the Real-Time Payments reason code `AC06`.",
                  "The destination account is ineligible to receive Real-Time Payments transfers. Corresponds to the Real-Time Payments reason code `AC14`.",
                  "The destination account does not exist. Corresponds to the Real-Time Payments reason code `AC03`.",
                  "The destination routing number is invalid. Corresponds to the Real-Time Payments reason code `RC04`.",
                  "The destination account holder is deceased. Corresponds to the Real-Time Payments reason code `MD07`.",
                  "The reason is provided as narrative information in the additional information field.",
                  "Real-Time Payments transfers are not allowed to the destination account. Corresponds to the Real-Time Payments reason code `AG01`.",
                  "Real-Time Payments transfers are not enabled for the destination account. Corresponds to the Real-Time Payments reason code `AG03`.",
                  "The amount of the transfer is different than expected by the recipient. Corresponds to the Real-Time Payments reason code `AM09`.",
                  "The amount is higher than the recipient is authorized to send or receive. Corresponds to the Real-Time Payments reason code `AM14`.",
                  "The creditor's address is required, but missing or invalid. Corresponds to the Real-Time Payments reason code `BE04`.",
                  "The specified creditor is unknown. Corresponds to the Real-Time Payments reason code `BE06`.",
                  "The debtor's address is required, but missing or invalid. Corresponds to the Real-Time Payments reason code `BE07`.",
                  "There was a timeout processing the transfer. Corresponds to the Real-Time Payments reason code `DS24`.",
                  "Real-Time Payments transfers are not enabled for the destination account. Corresponds to the Real-Time Payments reason code `NOAT`.",
                  "The destination financial institution is currently not connected to Real-Time Payments. Corresponds to the Real-Time Payments reason code `9912`.",
                  "Real-Time Payments is currently unavailable. Corresponds to the Real-Time Payments reason code `9948`.",
                  "The destination financial institution is currently signed off of Real-Time Payments. Corresponds to the Real-Time Payments reason code `9910`.",
                  "The transfer was rejected due to an internal Increase issue. We have been notified.",
                  "Some other error or issue has occurred."
                ]
              }
            },
            "required": ["reject_reason_code"]
          }
        }
      },
      "create_a_program_parameters": {
        "type": "object",
        "example": { "name": "For Benefit Of" },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name of the program being added."
          }
        },
        "required": ["name"]
      },
      "simulate_advancing_the_shipment_status_of_a_physical_card_parameters": {
        "type": "object",
        "example": { "shipment_status": "shipped" },
        "properties": {
          "shipment_status": {
            "type": "string",
            "enum": ["pending", "canceled", "submitted", "acknowledged", "rejected", "shipped", "returned"],
            "description": "The shipment status to move the Physical Card to.",
            "x-enum-descriptions": [
              "The physical card has not yet been shipped.",
              "The physical card shipment was canceled prior to submission.",
              "The physical card shipment has been submitted to the card fulfillment provider.",
              "The physical card shipment has been acknowledged by the card fulfillment provider and will be processed in their next batch.",
              "The physical card shipment was rejected by the card printer due to an error.",
              "The physical card has been shipped.",
              "The physical card shipment was returned to the sender and destroyed by the production facility."
            ]
          }
        },
        "required": ["shipment_status"]
      },
      "account": {
        "type": "object",
        "title": "Account",
        "description": "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
        "example": {
          "bank": "first_internet_bank",
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "informational_entity_id": null,
          "id": "account_in71c4amph0vgo2qllky",
          "interest_accrued": "0.01",
          "interest_accrued_at": "2020-01-31",
          "interest_rate": "0.055",
          "name": "My first account!",
          "status": "open",
          "replacement": { "replaced_account_id": null, "replaced_by_account_id": null },
          "type": "account"
        },
        "properties": {
          "bank": {
            "type": "string",
            "enum": ["blue_ridge_bank", "first_internet_bank"],
            "description": "The bank the Account is with.",
            "x-enum-descriptions": ["Blue Ridge Bank, N.A.", "First Internet Bank of Indiana"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "entity_id": {
            "type": "string",
            "description": "The identifier for the Entity the Account belongs to.",
            "nullable": true
          },
          "informational_entity_id": {
            "type": "string",
            "description": "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
            "nullable": true
          },
          "id": { "type": "string", "description": "The Account identifier." },
          "interest_accrued": {
            "type": "string",
            "description": "The interest accrued but not yet paid, expressed as a string containing a floating-point value."
          },
          "interest_accrued_at": {
            "type": "string",
            "format": "date",
            "description": "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
            "nullable": true
          },
          "interest_rate": {
            "type": "string",
            "pattern": "^-?\\d+(\\.\\d+)?$",
            "description": "The Interest Rate currently being earned on the account, as a string containing a decimal number. For example, a 1% interest rate would be represented as \"0.01\"."
          },
          "name": { "type": "string", "description": "The name you choose for the Account." },
          "status": {
            "type": "string",
            "enum": ["open", "closed"],
            "description": "The status of the Account.",
            "x-enum-descriptions": [
              "Open Accounts that are ready to use.",
              "Closed Accounts on which no new activity can occur."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["account"],
            "description": "A constant representing the object's type. For this resource it will always be `account`."
          }
        },
        "required": [
          "bank",
          "created_at",
          "currency",
          "entity_id",
          "informational_entity_id",
          "id",
          "interest_accrued",
          "interest_accrued_at",
          "interest_rate",
          "name",
          "status",
          "type"
        ],
        "x-title-plural": "Accounts",
        "x-tag": "Accounts"
      },
      "account_list": {
        "type": "object",
        "title": "Account List",
        "description": "A list of Account objects.",
        "example": {
          "data": [
            {
              "bank": "first_internet_bank",
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "entity_id": "entity_n8y8tnk2p9339ti393yi",
              "informational_entity_id": null,
              "id": "account_in71c4amph0vgo2qllky",
              "interest_accrued": "0.01",
              "interest_accrued_at": "2020-01-31",
              "interest_rate": "0.055",
              "name": "My first account!",
              "status": "open",
              "replacement": { "replaced_account_id": null, "replaced_by_account_id": null },
              "type": "account"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/account" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Account Lists"
      },
      "balance_lookup": {
        "type": "object",
        "title": "Balance Lookup",
        "description": "Represents a request to lookup the balance of an Account at a given point in time.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "current_balance": 100,
          "available_balance": 100,
          "type": "balance_lookup"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account for which the balance was queried."
          },
          "current_balance": {
            "type": "integer",
            "description": "The Account's current balance, representing the sum of all posted Transactions on the Account."
          },
          "available_balance": {
            "type": "integer",
            "description": "The Account's available balance, representing the current balance less any open Pending Transactions on the Account."
          },
          "type": {
            "type": "string",
            "enum": ["balance_lookup"],
            "description": "A constant representing the object's type. For this resource it will always be `balance_lookup`."
          }
        },
        "required": ["account_id", "current_balance", "available_balance", "type"],
        "x-title-plural": "Balance Lookups"
      },
      "account_number": {
        "type": "object",
        "title": "Account Number",
        "description": "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "id": "account_number_v18nkfqm6afpsrvy82b2",
          "created_at": "2020-01-31T23:59:59Z",
          "name": "ACH",
          "routing_number": "101050001",
          "status": "active",
          "inbound_ach": { "debit_status": "blocked" },
          "inbound_checks": { "status": "check_transfers_only" },
          "replacement": { "replaced_account_number_id": null, "replaced_by_account_number_id": null },
          "type": "account_number"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this Account Number belongs to."
          },
          "account_number": { "type": "string", "description": "The account number." },
          "id": { "type": "string", "description": "The Account Number identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Number was created."
          },
          "name": { "type": "string", "description": "The name you choose for the Account Number." },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "This indicates if payments can be made to the Account Number.",
            "x-enum-descriptions": [
              "The account number is active.",
              "The account number is temporarily disabled.",
              "The account number is permanently disabled."
            ]
          },
          "inbound_ach": {
            "type": "object",
            "title": "Inbound ACH",
            "description": "Properties related to how this Account Number handles inbound ACH transfers.",
            "properties": {
              "debit_status": {
                "type": "string",
                "enum": ["allowed", "blocked"],
                "description": "Whether ACH debits are allowed against this Account Number. Note that they will still be declined if this is `allowed` if the Account Number is not active.",
                "x-enum-descriptions": ["ACH Debits are allowed.", "ACH Debits are blocked."]
              }
            },
            "required": ["debit_status"],
            "x-title-plural": "Inbound Achs"
          },
          "inbound_checks": {
            "type": "object",
            "title": "Inbound Checks",
            "description": "Properties related to how this Account Number should handle inbound check withdrawls.",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["allowed", "check_transfers_only"],
                "description": "How Increase should process checks with this account number printed on them.",
                "x-enum-descriptions": [
                  "Checks with this Account Number will be processed even if they are not associated with a Check Transfer.",
                  "Checks with this Account Number will be processed only if they can be matched to an existing Check Transfer."
                ]
              }
            },
            "required": ["status"],
            "x-title-plural": "Inbound Checks"
          },
          "type": {
            "type": "string",
            "enum": ["account_number"],
            "description": "A constant representing the object's type. For this resource it will always be `account_number`."
          }
        },
        "required": [
          "account_id",
          "account_number",
          "id",
          "created_at",
          "name",
          "routing_number",
          "status",
          "inbound_ach",
          "inbound_checks",
          "type"
        ],
        "x-title-plural": "Account Numbers",
        "x-tag": "Account Numbers"
      },
      "account_number_list": {
        "type": "object",
        "title": "Account Number List",
        "description": "A list of Account Number objects.",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "account_number": "987654321",
              "id": "account_number_v18nkfqm6afpsrvy82b2",
              "created_at": "2020-01-31T23:59:59Z",
              "name": "ACH",
              "routing_number": "101050001",
              "status": "active",
              "inbound_ach": { "debit_status": "blocked" },
              "inbound_checks": { "status": "check_transfers_only" },
              "replacement": { "replaced_account_number_id": null, "replaced_by_account_number_id": null },
              "type": "account_number"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/account_number" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Account Number Lists"
      },
      "card": {
        "type": "object",
        "title": "Card",
        "description": "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.",
        "example": {
          "id": "card_oubs0hwk5rn6knuecxg2",
          "account_id": "account_in71c4amph0vgo2qllky",
          "entity_id": null,
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Office Expenses",
          "last4": "4242",
          "expiration_month": 11,
          "expiration_year": 2028,
          "status": "active",
          "billing_address": {
            "line1": "33 Liberty Street",
            "line2": null,
            "city": "New York",
            "state": "NY",
            "postal_code": "10045"
          },
          "digital_wallet": {
            "email": "user@example.com",
            "phone": "+16505046304",
            "card_profile_id": "card_profile_cox5y73lob2eqly18piy"
          },
          "replacement": { "replaced_card_id": null, "replaced_by_card_id": null },
          "type": "card"
        },
        "properties": {
          "id": { "type": "string", "description": "The card identifier." },
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this card belongs to."
          },
          "entity_id": {
            "type": "string",
            "description": "The identifier for the entity associated with this card.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created."
          },
          "description": {
            "type": "string",
            "description": "The card's description for display purposes.",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "description": "The last 4 digits of the Card's Primary Account Number."
          },
          "expiration_month": {
            "type": "integer",
            "description": "The month the card expires in M format (e.g., August is 8)."
          },
          "expiration_year": {
            "type": "integer",
            "description": "The year the card expires in YYYY format (e.g., 2025)."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "This indicates if payments can be made with the card.",
            "x-enum-descriptions": [
              "The card is active.",
              "The card is temporarily disabled.",
              "The card is permanently canceled."
            ]
          },
          "billing_address": {
            "type": "object",
            "title": "Billing Address",
            "description": "The Card's billing address.",
            "example": {
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            },
            "properties": {
              "line1": {
                "type": "string",
                "description": "The first line of the billing address.",
                "nullable": true
              },
              "line2": {
                "type": "string",
                "description": "The second line of the billing address.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "The city of the billing address.",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "The US state of the billing address.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "The postal code of the billing address.",
                "nullable": true
              }
            },
            "required": ["line1", "line2", "city", "state", "postal_code"],
            "x-title-plural": "Billing Addresses"
          },
          "digital_wallet": {
            "type": "object",
            "title": "Digital Wallet",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
            "properties": {
              "email": {
                "type": "string",
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS.",
                "nullable": true
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this digital card. Card profiles may also be assigned at the program level.",
                "nullable": true
              }
            },
            "required": ["email", "phone", "card_profile_id"],
            "nullable": true,
            "x-title-plural": "Digital Wallets"
          },
          "type": {
            "type": "string",
            "enum": ["card"],
            "description": "A constant representing the object's type. For this resource it will always be `card`."
          }
        },
        "required": [
          "id",
          "account_id",
          "entity_id",
          "created_at",
          "description",
          "last4",
          "expiration_month",
          "expiration_year",
          "status",
          "billing_address",
          "digital_wallet",
          "type"
        ],
        "x-title-plural": "Cards",
        "x-tag": "Cards"
      },
      "card_details": {
        "type": "object",
        "title": "Card Details",
        "description": "An object containing the sensitive details (card number, cvc, etc) for a Card.",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "primary_account_number": "4242424242424242",
          "expiration_month": 7,
          "expiration_year": 2025,
          "verification_code": "123",
          "type": "card_details"
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The identifier for the Card for which sensitive details have been returned."
          },
          "primary_account_number": { "type": "string", "description": "The card number." },
          "expiration_month": {
            "type": "integer",
            "description": "The month the card expires in M format (e.g., August is 8)."
          },
          "expiration_year": {
            "type": "integer",
            "description": "The year the card expires in YYYY format (e.g., 2025)."
          },
          "verification_code": {
            "type": "string",
            "description": "The three-digit verification code for the card. It's also known as the Card Verification Code (CVC), the Card Verification Value (CVV), or the Card Identification (CID)."
          },
          "type": {
            "type": "string",
            "enum": ["card_details"],
            "description": "A constant representing the object's type. For this resource it will always be `card_details`."
          }
        },
        "required": [
          "card_id",
          "primary_account_number",
          "expiration_month",
          "expiration_year",
          "verification_code",
          "type"
        ],
        "x-title-plural": "Card Details"
      },
      "card_list": {
        "type": "object",
        "title": "Card List",
        "description": "A list of Card objects.",
        "example": {
          "data": [
            {
              "id": "card_oubs0hwk5rn6knuecxg2",
              "account_id": "account_in71c4amph0vgo2qllky",
              "entity_id": null,
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Office Expenses",
              "last4": "4242",
              "expiration_month": 11,
              "expiration_year": 2028,
              "status": "active",
              "billing_address": {
                "line1": "33 Liberty Street",
                "line2": null,
                "city": "New York",
                "state": "NY",
                "postal_code": "10045"
              },
              "digital_wallet": {
                "email": "user@example.com",
                "phone": "+16505046304",
                "card_profile_id": "card_profile_cox5y73lob2eqly18piy"
              },
              "replacement": { "replaced_card_id": null, "replaced_by_card_id": null },
              "type": "card"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/card" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Card Lists"
      },
      "card_payment_list": {
        "type": "object",
        "title": "Card Payment List",
        "description": "A list of Card Payment objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/card_payment" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Card Payment Lists"
      },
      "card_payment": {
        "type": "object",
        "title": "Card Payment",
        "description": "Card Payments group together interactions related to a single card payment, such as an authorization and its corresponding settlement.",
        "properties": {
          "id": { "type": "string", "description": "The Card Payment identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Card Payment was created."
          },
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Transaction belongs to."
          },
          "card_id": { "type": "string", "description": "The Card identifier for this payment." },
          "elements": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Card Payment Element",
              "properties": {
                "category": {
                  "type": "string",
                  "enum": [
                    "card_authorization",
                    "card_validation",
                    "card_decline",
                    "card_reversal",
                    "card_authorization_expiration",
                    "card_increment",
                    "card_settlement",
                    "card_refund",
                    "card_fuel_confirmation",
                    "other"
                  ],
                  "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                  "x-enum-descriptions": [
                    "Card Authorization: details will be under the `card_authorization` object.",
                    "Card Validation: details will be under the `card_validation` object.",
                    "Card Decline: details will be under the `card_decline` object.",
                    "Card Reversal: details will be under the `card_reversal` object.",
                    "Card Authorization Expiration: details will be under the `card_authorization_expiration` object.",
                    "Card Increment: details will be under the `card_increment` object.",
                    "Card Settlement: details will be under the `card_settlement` object.",
                    "Card Refund: details will be under the `card_refund` object.",
                    "Card Fuel Confirmation: details will be under the `card_fuel_confirmation` object.",
                    "Unknown card payment element."
                  ]
                },
                "card_authorization": {
                  "type": "object",
                  "title": "Card Authorization",
                  "description": "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                  "example": {
                    "id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                    "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                    "merchant_acceptor_id": "5665270011000168",
                    "merchant_descriptor": "AMAZON.COM",
                    "merchant_category_code": "5734",
                    "merchant_city": "New York",
                    "merchant_country": "US",
                    "digital_wallet_token_id": null,
                    "physical_card_id": null,
                    "verification": {
                      "cardholder_address": {
                        "provided_postal_code": "94132",
                        "provided_line1": "33 Liberty Street",
                        "actual_postal_code": "94131",
                        "actual_line1": "33 Liberty Street",
                        "result": "postal_code_no_match_address_match"
                      },
                      "card_verification_code": { "result": "match" }
                    },
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "network_details": {
                      "category": "visa",
                      "visa": {
                        "electronic_commerce_indicator": "secure_electronic_commerce",
                        "point_of_service_entry_mode": "manual"
                      }
                    },
                    "amount": 100,
                    "currency": "USD",
                    "direction": "settlement",
                    "processing_category": "purchase",
                    "expires_at": "2020-01-31T23:59:59Z",
                    "real_time_decision_id": null,
                    "pending_transaction_id": null,
                    "type": "card_authorization"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Authorization identifier." },
                    "card_payment_id": {
                      "type": "string",
                      "description": "The ID of the Card Payment this transaction belongs to.",
                      "nullable": true
                    },
                    "merchant_acceptor_id": {
                      "type": "string",
                      "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                    },
                    "merchant_descriptor": {
                      "type": "string",
                      "description": "The merchant descriptor of the merchant the card is transacting with."
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                      "nullable": true
                    },
                    "merchant_city": {
                      "type": "string",
                      "description": "The city the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_country": {
                      "type": "string",
                      "description": "The country the merchant resides in.",
                      "nullable": true
                    },
                    "digital_wallet_token_id": {
                      "type": "string",
                      "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                      "nullable": true
                    },
                    "physical_card_id": {
                      "type": "string",
                      "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                      "nullable": true
                    },
                    "verification": {
                      "type": "object",
                      "description": "Fields related to verification of cardholder-provided values.",
                      "properties": {
                        "cardholder_address": {
                          "type": "object",
                          "title": "Cardholder Address",
                          "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                          "properties": {
                            "provided_postal_code": {
                              "type": "string",
                              "description": "The postal code provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "provided_line1": {
                              "type": "string",
                              "description": "The cardholder address line 1 provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "actual_postal_code": {
                              "type": "string",
                              "description": "The postal code of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "actual_line1": {
                              "type": "string",
                              "description": "Line 1 of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "result": {
                              "type": "string",
                              "enum": [
                                "not_checked",
                                "postal_code_match_address_not_checked",
                                "postal_code_match_address_no_match",
                                "postal_code_no_match_address_match",
                                "match",
                                "no_match"
                              ],
                              "description": "The address verification result returned to the card network.",
                              "x-enum-descriptions": [
                                "No adress was provided in the authorization request.",
                                "Postal code matches, but the street address was not verified.",
                                "Postal code matches, but the street address does not match.",
                                "Postal code does not match, but the street address matches.",
                                "Postal code and street address match.",
                                "Postal code and street address do not match."
                              ]
                            }
                          },
                          "required": [
                            "provided_postal_code",
                            "provided_line1",
                            "actual_postal_code",
                            "actual_line1",
                            "result"
                          ],
                          "x-title-plural": "Cardholder Addresses"
                        },
                        "card_verification_code": {
                          "type": "object",
                          "title": "Card Verification Code",
                          "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                          "properties": {
                            "result": {
                              "type": "string",
                              "enum": ["not_checked", "match", "no_match"],
                              "description": "The result of verifying the Card Verification Code.",
                              "x-enum-descriptions": [
                                "No card verification code was provided in the authorization request.",
                                "The card verification code matched the one on file.",
                                "The card verification code did not match the one on file."
                              ]
                            }
                          },
                          "required": ["result"],
                          "x-title-plural": "Card Verification Codes"
                        }
                      },
                      "required": ["cardholder_address", "card_verification_code"],
                      "x-title-plural": "s"
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "network_details": {
                      "type": "object",
                      "description": "Fields specific to the `network`.",
                      "properties": {
                        "category": {
                          "type": "string",
                          "enum": ["visa"],
                          "description": "The payment network used to process this card authorization.",
                          "x-enum-descriptions": ["Visa"]
                        },
                        "visa": {
                          "type": "object",
                          "title": "Visa",
                          "description": "Fields specific to the `visa` network.",
                          "properties": {
                            "electronic_commerce_indicator": {
                              "type": "string",
                              "enum": [
                                "mail_phone_order",
                                "recurring",
                                "installment",
                                "unknown_mail_phone_order",
                                "secure_electronic_commerce",
                                "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                "non_authenticated_security_transaction",
                                "non_secure_transaction"
                              ],
                              "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                              ]
                            },
                            "point_of_service_entry_mode": {
                              "$ref": "#/components/schemas/point_of_service_entry_mode"
                            }
                          },
                          "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                          "nullable": true,
                          "x-title-plural": "Visas"
                        }
                      },
                      "required": ["category", "visa"],
                      "x-title-plural": "s"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "direction": {
                      "type": "string",
                      "enum": ["settlement", "refund"],
                      "description": "The direction descibes the direction the funds will move, either from the cardholder to the merchant or from the merchant to the cardholder.",
                      "x-enum-descriptions": [
                        "A regular card authorization where funds are debited from the cardholder.",
                        "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                      ]
                    },
                    "processing_category": {
                      "type": "string",
                      "enum": [
                        "account_funding",
                        "automatic_fuel_dispenser",
                        "bill_payment",
                        "purchase",
                        "quasi_cash",
                        "refund"
                      ],
                      "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                      "x-enum-descriptions": [
                        "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                        "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                        "A transaction used to pay a bill.",
                        "A regular purchase.",
                        "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                        "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                      ]
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) when this authorization will expire and the pending transaction will be released."
                    },
                    "real_time_decision_id": {
                      "type": "string",
                      "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                      "nullable": true
                    },
                    "pending_transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Pending Transaction associated with this Transaction.",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_authorization"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_authorization`."
                    }
                  },
                  "required": [
                    "id",
                    "card_payment_id",
                    "merchant_acceptor_id",
                    "merchant_descriptor",
                    "merchant_category_code",
                    "merchant_city",
                    "merchant_country",
                    "digital_wallet_token_id",
                    "physical_card_id",
                    "verification",
                    "network_identifiers",
                    "network_details",
                    "amount",
                    "currency",
                    "direction",
                    "processing_category",
                    "expires_at",
                    "real_time_decision_id",
                    "pending_transaction_id",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Authorizations"
                },
                "card_validation": {
                  "type": "object",
                  "title": "Card Validation",
                  "description": "A Card Validation object. This field will be present in the JSON response if and only if `category` is equal to `card_validation`.",
                  "example": {
                    "id": "card_validation_yi4e59jiaz6n9hx8tczv",
                    "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                    "merchant_acceptor_id": "5665270011000168",
                    "merchant_descriptor": "AMAZON.COM",
                    "merchant_category_code": "5734",
                    "merchant_city": "New York",
                    "merchant_country": "US",
                    "digital_wallet_token_id": null,
                    "physical_card_id": null,
                    "verification": {
                      "cardholder_address": {
                        "provided_postal_code": "94132",
                        "provided_line1": "33 Liberty Street",
                        "actual_postal_code": "94131",
                        "actual_line1": "33 Liberty Street",
                        "result": "postal_code_no_match_address_match"
                      },
                      "card_verification_code": { "result": "match" }
                    },
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "network_details": {
                      "category": "visa",
                      "visa": {
                        "electronic_commerce_indicator": "secure_electronic_commerce",
                        "point_of_service_entry_mode": "manual"
                      }
                    },
                    "currency": "USD",
                    "real_time_decision_id": null,
                    "type": "card_validation"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Validation identifier." },
                    "card_payment_id": {
                      "type": "string",
                      "description": "The ID of the Card Payment this transaction belongs to.",
                      "nullable": true
                    },
                    "merchant_acceptor_id": {
                      "type": "string",
                      "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                    },
                    "merchant_descriptor": {
                      "type": "string",
                      "description": "The merchant descriptor of the merchant the card is transacting with."
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                      "nullable": true
                    },
                    "merchant_city": {
                      "type": "string",
                      "description": "The city the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_country": {
                      "type": "string",
                      "description": "The country the merchant resides in.",
                      "nullable": true
                    },
                    "digital_wallet_token_id": {
                      "type": "string",
                      "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                      "nullable": true
                    },
                    "physical_card_id": {
                      "type": "string",
                      "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                      "nullable": true
                    },
                    "verification": {
                      "type": "object",
                      "description": "Fields related to verification of cardholder-provided values.",
                      "properties": {
                        "cardholder_address": {
                          "type": "object",
                          "title": "Cardholder Address",
                          "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                          "properties": {
                            "provided_postal_code": {
                              "type": "string",
                              "description": "The postal code provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "provided_line1": {
                              "type": "string",
                              "description": "The cardholder address line 1 provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "actual_postal_code": {
                              "type": "string",
                              "description": "The postal code of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "actual_line1": {
                              "type": "string",
                              "description": "Line 1 of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "result": {
                              "type": "string",
                              "enum": [
                                "not_checked",
                                "postal_code_match_address_not_checked",
                                "postal_code_match_address_no_match",
                                "postal_code_no_match_address_match",
                                "match",
                                "no_match"
                              ],
                              "description": "The address verification result returned to the card network.",
                              "x-enum-descriptions": [
                                "No adress was provided in the authorization request.",
                                "Postal code matches, but the street address was not verified.",
                                "Postal code matches, but the street address does not match.",
                                "Postal code does not match, but the street address matches.",
                                "Postal code and street address match.",
                                "Postal code and street address do not match."
                              ]
                            }
                          },
                          "required": [
                            "provided_postal_code",
                            "provided_line1",
                            "actual_postal_code",
                            "actual_line1",
                            "result"
                          ],
                          "x-title-plural": "Cardholder Addresses"
                        },
                        "card_verification_code": {
                          "type": "object",
                          "title": "Card Verification Code",
                          "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                          "properties": {
                            "result": {
                              "type": "string",
                              "enum": ["not_checked", "match", "no_match"],
                              "description": "The result of verifying the Card Verification Code.",
                              "x-enum-descriptions": [
                                "No card verification code was provided in the authorization request.",
                                "The card verification code matched the one on file.",
                                "The card verification code did not match the one on file."
                              ]
                            }
                          },
                          "required": ["result"],
                          "x-title-plural": "Card Verification Codes"
                        }
                      },
                      "required": ["cardholder_address", "card_verification_code"],
                      "x-title-plural": "s"
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "network_details": {
                      "type": "object",
                      "description": "Fields specific to the `network`.",
                      "properties": {
                        "category": {
                          "type": "string",
                          "enum": ["visa"],
                          "description": "The payment network used to process this card authorization.",
                          "x-enum-descriptions": ["Visa"]
                        },
                        "visa": {
                          "type": "object",
                          "title": "Visa",
                          "description": "Fields specific to the `visa` network.",
                          "properties": {
                            "electronic_commerce_indicator": {
                              "type": "string",
                              "enum": [
                                "mail_phone_order",
                                "recurring",
                                "installment",
                                "unknown_mail_phone_order",
                                "secure_electronic_commerce",
                                "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                "non_authenticated_security_transaction",
                                "non_secure_transaction"
                              ],
                              "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                              ]
                            },
                            "point_of_service_entry_mode": {
                              "$ref": "#/components/schemas/point_of_service_entry_mode"
                            }
                          },
                          "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                          "nullable": true,
                          "x-title-plural": "Visas"
                        }
                      },
                      "required": ["category", "visa"],
                      "x-title-plural": "s"
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "real_time_decision_id": {
                      "type": "string",
                      "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_validation"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_validation`."
                    }
                  },
                  "required": [
                    "id",
                    "card_payment_id",
                    "merchant_acceptor_id",
                    "merchant_descriptor",
                    "merchant_category_code",
                    "merchant_city",
                    "merchant_country",
                    "digital_wallet_token_id",
                    "physical_card_id",
                    "verification",
                    "network_identifiers",
                    "network_details",
                    "currency",
                    "real_time_decision_id",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Validations"
                },
                "card_decline": {
                  "type": "object",
                  "title": "Card Decline",
                  "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                  "example": {
                    "merchant_acceptor_id": "5665270011000168",
                    "merchant_descriptor": "AMAZON.COM",
                    "merchant_category_code": "5734",
                    "merchant_city": "New York",
                    "merchant_country": "US",
                    "digital_wallet_token_id": null,
                    "physical_card_id": null,
                    "verification": {
                      "cardholder_address": {
                        "provided_postal_code": "94132",
                        "provided_line1": "33 Liberty Street",
                        "actual_postal_code": "94131",
                        "actual_line1": "33 Liberty Street",
                        "result": "postal_code_no_match_address_match"
                      },
                      "card_verification_code": { "result": "match" }
                    },
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "network_details": {
                      "category": "visa",
                      "visa": {
                        "electronic_commerce_indicator": "secure_electronic_commerce",
                        "point_of_service_entry_mode": "manual"
                      }
                    },
                    "id": "card_decline_bx3o8zd7glq8yvtwg25v",
                    "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                    "amount": -1000,
                    "currency": "USD",
                    "processing_category": "purchase",
                    "reason": "insufficient_funds",
                    "merchant_state": null,
                    "real_time_decision_id": null
                  },
                  "properties": {
                    "merchant_acceptor_id": {
                      "type": "string",
                      "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                    },
                    "merchant_descriptor": {
                      "type": "string",
                      "description": "The merchant descriptor of the merchant the card is transacting with."
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                      "nullable": true
                    },
                    "merchant_city": {
                      "type": "string",
                      "description": "The city the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_country": {
                      "type": "string",
                      "description": "The country the merchant resides in.",
                      "nullable": true
                    },
                    "digital_wallet_token_id": {
                      "type": "string",
                      "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                      "nullable": true
                    },
                    "physical_card_id": {
                      "type": "string",
                      "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                      "nullable": true
                    },
                    "verification": {
                      "type": "object",
                      "description": "Fields related to verification of cardholder-provided values.",
                      "properties": {
                        "cardholder_address": {
                          "type": "object",
                          "title": "Cardholder Address",
                          "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                          "properties": {
                            "provided_postal_code": {
                              "type": "string",
                              "description": "The postal code provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "provided_line1": {
                              "type": "string",
                              "description": "The cardholder address line 1 provided for verification in the authorization request.",
                              "nullable": true
                            },
                            "actual_postal_code": {
                              "type": "string",
                              "description": "The postal code of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "actual_line1": {
                              "type": "string",
                              "description": "Line 1 of the address on file for the cardholder.",
                              "nullable": true
                            },
                            "result": {
                              "type": "string",
                              "enum": [
                                "not_checked",
                                "postal_code_match_address_not_checked",
                                "postal_code_match_address_no_match",
                                "postal_code_no_match_address_match",
                                "match",
                                "no_match"
                              ],
                              "description": "The address verification result returned to the card network.",
                              "x-enum-descriptions": [
                                "No adress was provided in the authorization request.",
                                "Postal code matches, but the street address was not verified.",
                                "Postal code matches, but the street address does not match.",
                                "Postal code does not match, but the street address matches.",
                                "Postal code and street address match.",
                                "Postal code and street address do not match."
                              ]
                            }
                          },
                          "required": [
                            "provided_postal_code",
                            "provided_line1",
                            "actual_postal_code",
                            "actual_line1",
                            "result"
                          ],
                          "x-title-plural": "Cardholder Addresses"
                        },
                        "card_verification_code": {
                          "type": "object",
                          "title": "Card Verification Code",
                          "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                          "properties": {
                            "result": {
                              "type": "string",
                              "enum": ["not_checked", "match", "no_match"],
                              "description": "The result of verifying the Card Verification Code.",
                              "x-enum-descriptions": [
                                "No card verification code was provided in the authorization request.",
                                "The card verification code matched the one on file.",
                                "The card verification code did not match the one on file."
                              ]
                            }
                          },
                          "required": ["result"],
                          "x-title-plural": "Card Verification Codes"
                        }
                      },
                      "required": ["cardholder_address", "card_verification_code"],
                      "x-title-plural": "s"
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "network_details": {
                      "type": "object",
                      "description": "Fields specific to the `network`.",
                      "properties": {
                        "category": {
                          "type": "string",
                          "enum": ["visa"],
                          "description": "The payment network used to process this card authorization.",
                          "x-enum-descriptions": ["Visa"]
                        },
                        "visa": {
                          "type": "object",
                          "title": "Visa",
                          "description": "Fields specific to the `visa` network.",
                          "properties": {
                            "electronic_commerce_indicator": {
                              "type": "string",
                              "enum": [
                                "mail_phone_order",
                                "recurring",
                                "installment",
                                "unknown_mail_phone_order",
                                "secure_electronic_commerce",
                                "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                "non_authenticated_security_transaction",
                                "non_secure_transaction"
                              ],
                              "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                              ]
                            },
                            "point_of_service_entry_mode": {
                              "$ref": "#/components/schemas/point_of_service_entry_mode"
                            }
                          },
                          "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                          "nullable": true,
                          "x-title-plural": "Visas"
                        }
                      },
                      "required": ["category", "visa"],
                      "x-title-plural": "s"
                    },
                    "id": { "type": "string", "description": "The Card Decline identifier." },
                    "card_payment_id": {
                      "type": "string",
                      "description": "The ID of the Card Payment this transaction belongs to.",
                      "nullable": true
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "processing_category": {
                      "type": "string",
                      "enum": [
                        "account_funding",
                        "automatic_fuel_dispenser",
                        "bill_payment",
                        "purchase",
                        "quasi_cash",
                        "refund"
                      ],
                      "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                      "x-enum-descriptions": [
                        "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                        "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                        "A transaction used to pay a bill.",
                        "A regular purchase.",
                        "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                        "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                      ]
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "card_not_active",
                        "physical_card_not_active",
                        "entity_not_active",
                        "group_locked",
                        "insufficient_funds",
                        "cvv2_mismatch",
                        "transaction_not_allowed",
                        "breaches_limit",
                        "webhook_declined",
                        "webhook_timed_out",
                        "declined_by_stand_in_processing",
                        "invalid_physical_card",
                        "missing_original_authorization",
                        "suspected_fraud"
                      ],
                      "description": "Why the transaction was declined.",
                      "x-enum-descriptions": [
                        "The Card was not active.",
                        "The Physical Card was not active.",
                        "The account's entity was not active.",
                        "The account was inactive.",
                        "The Card's Account did not have a sufficient available balance.",
                        "The given CVV2 did not match the card's value.",
                        "The attempted card transaction is not allowed per Increase's terms.",
                        "The transaction was blocked by a Limit.",
                        "Your application declined the transaction via webhook.",
                        "Your application webhook did not respond without the required timeout.",
                        "Declined by stand-in processing.",
                        "The card read had an invalid CVV, dCVV, or authorization request cryptogram.",
                        "The original card authorization for this incremental authorization does not exist.",
                        "The transaction was suspected to be fraudulent. Please reach out to support@increase.com for more information."
                      ]
                    },
                    "merchant_state": {
                      "type": "string",
                      "description": "The state the merchant resides in.",
                      "nullable": true
                    },
                    "real_time_decision_id": {
                      "type": "string",
                      "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                      "nullable": true
                    }
                  },
                  "required": [
                    "merchant_acceptor_id",
                    "merchant_descriptor",
                    "merchant_category_code",
                    "merchant_city",
                    "merchant_country",
                    "digital_wallet_token_id",
                    "physical_card_id",
                    "verification",
                    "network_identifiers",
                    "network_details",
                    "id",
                    "card_payment_id",
                    "amount",
                    "currency",
                    "processing_category",
                    "reason",
                    "merchant_state",
                    "real_time_decision_id"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Declines"
                },
                "card_reversal": {
                  "type": "object",
                  "title": "Card Reversal",
                  "description": "A Card Reversal object. This field will be present in the JSON response if and only if `category` is equal to `card_reversal`.",
                  "example": {
                    "id": "card_reversal_8vr9qy60cgf5d0slpb68",
                    "reversal_amount": 20,
                    "updated_authorization_amount": 80,
                    "currency": "USD",
                    "card_authorization_id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                    "network": "visa",
                    "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "type": "card_reversal"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Reversal identifier." },
                    "reversal_amount": {
                      "type": "integer",
                      "description": "The amount of this reversal in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "updated_authorization_amount": {
                      "type": "integer",
                      "description": "The amount left pending on the Card Authorization in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the reversal's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "card_authorization_id": {
                      "type": "string",
                      "description": "The identifier for the Card Authorization this reverses."
                    },
                    "network": {
                      "type": "string",
                      "enum": ["visa"],
                      "description": "The card network used to process this card authorization.",
                      "x-enum-descriptions": ["Visa"]
                    },
                    "pending_transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Pending Transaction associated with this Card Reversal.",
                      "nullable": true
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_reversal"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_reversal`."
                    }
                  },
                  "required": [
                    "id",
                    "reversal_amount",
                    "updated_authorization_amount",
                    "currency",
                    "card_authorization_id",
                    "network",
                    "pending_transaction_id",
                    "network_identifiers",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Reversals"
                },
                "card_authorization_expiration": {
                  "type": "object",
                  "title": "Card Authorization Expiration",
                  "description": "A Card Authorization Expiration object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization_expiration`.",
                  "example": {
                    "id": "card_authorization_expiration_9xxbjtmixs8sfluzux2e",
                    "expired_amount": 20,
                    "currency": "USD",
                    "card_authorization_id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                    "network": "visa",
                    "type": "card_authorization_expiration"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The Card Authorization Expiration identifier."
                    },
                    "expired_amount": {
                      "type": "integer",
                      "description": "The amount of this authorization expiration in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the reversal's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "card_authorization_id": {
                      "type": "string",
                      "description": "The identifier for the Card Authorization this reverses."
                    },
                    "network": {
                      "type": "string",
                      "enum": ["visa"],
                      "description": "The card network used to process this card authorization.",
                      "x-enum-descriptions": ["Visa"]
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_authorization_expiration"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_authorization_expiration`."
                    }
                  },
                  "required": [
                    "id",
                    "expired_amount",
                    "currency",
                    "card_authorization_id",
                    "network",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Authorization Expirations"
                },
                "card_increment": {
                  "type": "object",
                  "title": "Card Increment",
                  "description": "A Card Increment object. This field will be present in the JSON response if and only if `category` is equal to `card_increment`.",
                  "example": {
                    "id": "card_increment_6ztayc58j1od0rpebp3e",
                    "amount": 20,
                    "updated_authorization_amount": 120,
                    "currency": "USD",
                    "card_authorization_id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                    "network": "visa",
                    "real_time_decision_id": null,
                    "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "type": "card_increment"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Increment identifier." },
                    "amount": {
                      "type": "integer",
                      "description": "The amount of this increment in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "updated_authorization_amount": {
                      "type": "integer",
                      "description": "The updated authorization amount after this increment, in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the increment's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "card_authorization_id": {
                      "type": "string",
                      "description": "The identifier for the Card Authorization this increments."
                    },
                    "network": {
                      "type": "string",
                      "enum": ["visa"],
                      "description": "The card network used to process this card authorization.",
                      "x-enum-descriptions": ["Visa"]
                    },
                    "real_time_decision_id": {
                      "type": "string",
                      "description": "The identifier of the Real-Time Decision sent to approve or decline this incremental authorization.",
                      "nullable": true
                    },
                    "pending_transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Pending Transaction associated with this Card Increment.",
                      "nullable": true
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_increment"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_increment`."
                    }
                  },
                  "required": [
                    "id",
                    "amount",
                    "updated_authorization_amount",
                    "currency",
                    "card_authorization_id",
                    "network",
                    "real_time_decision_id",
                    "pending_transaction_id",
                    "network_identifiers",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Increments"
                },
                "card_settlement": {
                  "type": "object",
                  "title": "Card Settlement",
                  "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                  "example": {
                    "id": "card_settlement_khv5kfeu0vndj291omg6",
                    "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                    "card_authorization": null,
                    "amount": 100,
                    "currency": "USD",
                    "presentment_amount": 100,
                    "presentment_currency": "USD",
                    "merchant_acceptor_id": "5665270011000168",
                    "merchant_city": "New York",
                    "merchant_state": "NY",
                    "merchant_country": "US",
                    "merchant_name": "AMAZON.COM",
                    "merchant_category_code": "5734",
                    "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                    "pending_transaction_id": null,
                    "purchase_details": {
                      "purchase_identifier": "10203",
                      "purchase_identifier_format": "order_number",
                      "customer_reference_identifier": "51201",
                      "local_tax_amount": null,
                      "local_tax_currency": "usd",
                      "national_tax_amount": null,
                      "national_tax_currency": "usd",
                      "car_rental": null,
                      "lodging": {
                        "no_show_indicator": "no_show",
                        "extra_charges": "restaurant",
                        "check_in_date": "2023-07-20",
                        "daily_room_rate_amount": 1000,
                        "daily_room_rate_currency": "usd",
                        "total_tax_amount": 100,
                        "total_tax_currency": "usd",
                        "prepaid_expenses_amount": 0,
                        "prepaid_expenses_currency": "usd",
                        "food_beverage_charges_amount": 0,
                        "food_beverage_charges_currency": "usd",
                        "folio_cash_advances_amount": 0,
                        "folio_cash_advances_currency": "usd",
                        "room_nights": 1,
                        "total_room_tax_amount": 100,
                        "total_room_tax_currency": "usd"
                      },
                      "travel": null
                    },
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "acquirer_reference_number": "83163715445437604865089",
                      "acquirer_business_id": "69650702"
                    },
                    "type": "card_settlement"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Settlement identifier." },
                    "card_payment_id": {
                      "type": "string",
                      "description": "The ID of the Card Payment this transaction belongs to.",
                      "nullable": true
                    },
                    "card_authorization": {
                      "type": "string",
                      "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                      "nullable": true
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "presentment_amount": {
                      "type": "integer",
                      "description": "The amount in the minor unit of the transaction's presentment currency."
                    },
                    "presentment_currency": {
                      "type": "string",
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                    },
                    "merchant_acceptor_id": {
                      "type": "string",
                      "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                      "nullable": true
                    },
                    "merchant_city": {
                      "type": "string",
                      "description": "The city the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_state": {
                      "type": "string",
                      "description": "The state the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_country": {
                      "type": "string",
                      "description": "The country the merchant resides in."
                    },
                    "merchant_name": {
                      "type": "string",
                      "description": "The name of the merchant.",
                      "nullable": true
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "The 4-digit MCC describing the merchant's business."
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Transaction associated with this Transaction."
                    },
                    "pending_transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Pending Transaction associated with this Transaction.",
                      "nullable": true
                    },
                    "purchase_details": {
                      "type": "object",
                      "title": "Card Purchase Details",
                      "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                      "example": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "properties": {
                        "purchase_identifier": {
                          "type": "string",
                          "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                          "nullable": true
                        },
                        "purchase_identifier_format": {
                          "type": "string",
                          "enum": [
                            "free_text",
                            "order_number",
                            "rental_agreement_number",
                            "hotel_folio_number",
                            "invoice_number"
                          ],
                          "description": "The format of the purchase identifier.",
                          "nullable": true,
                          "x-enum-descriptions": [
                            "Free text",
                            "Order number",
                            "Rental agreement number",
                            "Hotel folio number",
                            "Invoice number"
                          ]
                        },
                        "customer_reference_identifier": {
                          "type": "string",
                          "description": "An identifier from the merchant for the customer or consumer.",
                          "nullable": true
                        },
                        "local_tax_amount": {
                          "type": "integer",
                          "description": "The state or provincial tax amount in minor units.",
                          "nullable": true
                        },
                        "local_tax_currency": {
                          "type": "string",
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                          "nullable": true
                        },
                        "national_tax_amount": {
                          "type": "integer",
                          "description": "The national tax amount in minor units.",
                          "nullable": true
                        },
                        "national_tax_currency": {
                          "type": "string",
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                          "nullable": true
                        },
                        "car_rental": {
                          "type": "object",
                          "title": "Car Rental",
                          "description": "Fields specific to car rentals.",
                          "properties": {
                            "extra_charges": {
                              "type": "string",
                              "enum": [
                                "no_extra_charge",
                                "gas",
                                "extra_mileage",
                                "late_return",
                                "one_way_service_fee",
                                "parking_violation"
                              ],
                              "description": "Additional charges (gas, late fee, etc.) being billed.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No extra charge",
                                "Gas",
                                "Extra mileage",
                                "Late return",
                                "One way service fee",
                                "Parking violation"
                              ]
                            },
                            "days_rented": {
                              "type": "integer",
                              "description": "Number of days the vehicle was rented.",
                              "nullable": true
                            },
                            "no_show_indicator": {
                              "type": "string",
                              "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                              "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                              "nullable": true,
                              "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                            },
                            "checkout_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                              "nullable": true
                            },
                            "daily_rental_rate_amount": {
                              "type": "integer",
                              "description": "Daily rate being charged for the vehicle.",
                              "nullable": true
                            },
                            "daily_rental_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                              "nullable": true
                            },
                            "weekly_rental_rate_amount": {
                              "type": "integer",
                              "description": "Weekly rate being charged for the vehicle.",
                              "nullable": true
                            },
                            "weekly_rental_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                              "nullable": true
                            },
                            "insurance_charges_amount": {
                              "type": "integer",
                              "description": "Any insurance being charged for the vehicle.",
                              "nullable": true
                            },
                            "insurance_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                              "nullable": true
                            },
                            "fuel_charges_amount": {
                              "type": "integer",
                              "description": "Fuel charges for the vehicle.",
                              "nullable": true
                            },
                            "fuel_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                              "nullable": true
                            },
                            "one_way_drop_off_charges_amount": {
                              "type": "integer",
                              "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                              "nullable": true
                            },
                            "one_way_drop_off_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                              "nullable": true
                            },
                            "car_class_code": {
                              "type": "string",
                              "description": "Code indicating the vehicle's class.",
                              "nullable": true
                            },
                            "renter_name": {
                              "type": "string",
                              "description": "Name of the person renting the vehicle.",
                              "nullable": true
                            }
                          },
                          "required": [
                            "extra_charges",
                            "days_rented",
                            "no_show_indicator",
                            "checkout_date",
                            "daily_rental_rate_amount",
                            "daily_rental_rate_currency",
                            "weekly_rental_rate_amount",
                            "weekly_rental_rate_currency",
                            "insurance_charges_amount",
                            "insurance_charges_currency",
                            "fuel_charges_amount",
                            "fuel_charges_currency",
                            "one_way_drop_off_charges_amount",
                            "one_way_drop_off_charges_currency",
                            "car_class_code",
                            "renter_name"
                          ],
                          "nullable": true,
                          "x-title-plural": "Car Rentals"
                        },
                        "lodging": {
                          "type": "object",
                          "title": "Lodging",
                          "description": "Fields specific to lodging.",
                          "properties": {
                            "no_show_indicator": {
                              "type": "string",
                              "enum": ["not_applicable", "no_show"],
                              "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                              "nullable": true,
                              "x-enum-descriptions": ["Not applicable", "No show"]
                            },
                            "extra_charges": {
                              "type": "string",
                              "enum": [
                                "no_extra_charge",
                                "restaurant",
                                "gift_shop",
                                "mini_bar",
                                "telephone",
                                "other",
                                "laundry"
                              ],
                              "description": "Additional charges (phone, late check-out, etc.) being billed.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No extra charge",
                                "Restaurant",
                                "Gift shop",
                                "Mini bar",
                                "Telephone",
                                "Other",
                                "Laundry"
                              ]
                            },
                            "check_in_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the customer checked in.",
                              "nullable": true
                            },
                            "daily_room_rate_amount": {
                              "type": "integer",
                              "description": "Daily rate being charged for the room.",
                              "nullable": true
                            },
                            "daily_room_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                              "nullable": true
                            },
                            "total_tax_amount": {
                              "type": "integer",
                              "description": "Total tax being charged for the room.",
                              "nullable": true
                            },
                            "total_tax_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                              "nullable": true
                            },
                            "prepaid_expenses_amount": {
                              "type": "integer",
                              "description": "Prepaid expenses being charged for the room.",
                              "nullable": true
                            },
                            "prepaid_expenses_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                              "nullable": true
                            },
                            "food_beverage_charges_amount": {
                              "type": "integer",
                              "description": "Food and beverage charges for the room.",
                              "nullable": true
                            },
                            "food_beverage_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                              "nullable": true
                            },
                            "folio_cash_advances_amount": {
                              "type": "integer",
                              "description": "Folio cash advances for the room.",
                              "nullable": true
                            },
                            "folio_cash_advances_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                              "nullable": true
                            },
                            "room_nights": {
                              "type": "integer",
                              "description": "Number of nights the room was rented.",
                              "nullable": true
                            },
                            "total_room_tax_amount": {
                              "type": "integer",
                              "description": "Total room tax being charged.",
                              "nullable": true
                            },
                            "total_room_tax_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                              "nullable": true
                            }
                          },
                          "required": [
                            "no_show_indicator",
                            "extra_charges",
                            "check_in_date",
                            "daily_room_rate_amount",
                            "daily_room_rate_currency",
                            "total_tax_amount",
                            "total_tax_currency",
                            "prepaid_expenses_amount",
                            "prepaid_expenses_currency",
                            "food_beverage_charges_amount",
                            "food_beverage_charges_currency",
                            "folio_cash_advances_amount",
                            "folio_cash_advances_currency",
                            "room_nights",
                            "total_room_tax_amount",
                            "total_room_tax_currency"
                          ],
                          "nullable": true,
                          "x-title-plural": "Lodgings"
                        },
                        "travel": {
                          "type": "object",
                          "title": "Travel",
                          "description": "Fields specific to travel.",
                          "properties": {
                            "ticket_number": {
                              "type": "string",
                              "description": "Ticket number.",
                              "nullable": true
                            },
                            "passenger_name": {
                              "type": "string",
                              "description": "Name of the passenger.",
                              "nullable": true
                            },
                            "departure_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of departure.",
                              "nullable": true
                            },
                            "origination_city_airport_code": {
                              "type": "string",
                              "description": "Code for the originating city or airport.",
                              "nullable": true
                            },
                            "travel_agency_code": {
                              "type": "string",
                              "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                              "nullable": true
                            },
                            "travel_agency_name": {
                              "type": "string",
                              "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                              "nullable": true
                            },
                            "restricted_ticket_indicator": {
                              "type": "string",
                              "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                              "description": "Indicates whether this ticket is non-refundable.",
                              "nullable": true,
                              "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                            },
                            "computerized_reservation_system": {
                              "type": "string",
                              "description": "Indicates the computerized reservation system used to book the ticket.",
                              "nullable": true
                            },
                            "credit_reason_indicator": {
                              "type": "string",
                              "enum": [
                                "no_credit",
                                "passenger_transport_ancillary_purchase_cancellation",
                                "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                "airline_ticket_cancellation",
                                "other",
                                "partial_refund_of_airline_ticket"
                              ],
                              "description": "Indicates the reason for a credit to the cardholder.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No credit",
                                "Passenger transport ancillary purchase cancellation",
                                "Airline ticket and passenger transport ancillary purchase cancellation",
                                "Airline ticket cancellation",
                                "Other",
                                "Partial refund of airline ticket"
                              ]
                            },
                            "ticket_change_indicator": {
                              "type": "string",
                              "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                              "description": "Indicates why a ticket was changed.",
                              "nullable": true,
                              "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                            },
                            "trip_legs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Trip Legs Element",
                                "properties": {
                                  "flight_number": {
                                    "type": "string",
                                    "description": "Flight number.",
                                    "nullable": true
                                  },
                                  "carrier_code": {
                                    "type": "string",
                                    "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                    "nullable": true
                                  },
                                  "fare_basis_code": {
                                    "type": "string",
                                    "description": "Fare basis code.",
                                    "nullable": true
                                  },
                                  "service_class": {
                                    "type": "string",
                                    "description": "Service class (e.g., first class, business class, etc.).",
                                    "nullable": true
                                  },
                                  "stop_over_code": {
                                    "type": "string",
                                    "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                    "description": "Indicates whether a stopover is allowed on this ticket.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "None",
                                      "Stop over allowed",
                                      "Stop over not allowed"
                                    ]
                                  },
                                  "destination_city_airport_code": {
                                    "type": "string",
                                    "description": "Code for the destination city or airport.",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "flight_number",
                                  "carrier_code",
                                  "fare_basis_code",
                                  "service_class",
                                  "stop_over_code",
                                  "destination_city_airport_code"
                                ],
                                "x-title-plural": "Trip Legs Elements"
                              },
                              "description": "Fields specific to each leg of the journey.",
                              "nullable": true
                            },
                            "ancillary": {
                              "type": "object",
                              "title": "Ancillary",
                              "description": "Ancillary purchases in addition to the airfare.",
                              "properties": {
                                "ticket_document_number": {
                                  "type": "string",
                                  "description": "Ticket document number.",
                                  "nullable": true
                                },
                                "passenger_name_or_description": {
                                  "type": "string",
                                  "description": "Name of the passenger or description of the ancillary purchase.",
                                  "nullable": true
                                },
                                "connected_ticket_document_number": {
                                  "type": "string",
                                  "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                  "nullable": true
                                },
                                "credit_reason_indicator": {
                                  "type": "string",
                                  "enum": [
                                    "no_credit",
                                    "passenger_transport_ancillary_purchase_cancellation",
                                    "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                    "other"
                                  ],
                                  "description": "Indicates the reason for a credit to the cardholder.",
                                  "nullable": true,
                                  "x-enum-descriptions": [
                                    "No credit",
                                    "Passenger transport ancillary purchase cancellation",
                                    "Airline ticket and passenger transport ancillary purchase cancellation",
                                    "Other"
                                  ]
                                },
                                "services": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Services Element",
                                    "properties": {
                                      "category": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "bundled_service",
                                          "baggage_fee",
                                          "change_fee",
                                          "cargo",
                                          "carbon_offset",
                                          "frequent_flyer",
                                          "gift_card",
                                          "ground_transport",
                                          "in_flight_entertainment",
                                          "lounge",
                                          "medical",
                                          "meal_beverage",
                                          "other",
                                          "passenger_assist_fee",
                                          "pets",
                                          "seat_fees",
                                          "standby",
                                          "service_fee",
                                          "store",
                                          "travel_service",
                                          "unaccompanied_travel",
                                          "upgrades",
                                          "wifi"
                                        ],
                                        "description": "Category of the ancillary service.",
                                        "nullable": true,
                                        "x-enum-descriptions": [
                                          "None",
                                          "Bundled service",
                                          "Baggage fee",
                                          "Change fee",
                                          "Cargo",
                                          "Carbon offset",
                                          "Frequent flyer",
                                          "Gift card",
                                          "Ground transport",
                                          "In-flight entertainment",
                                          "Lounge",
                                          "Medical",
                                          "Meal beverage",
                                          "Other",
                                          "Passenger assist fee",
                                          "Pets",
                                          "Seat fees",
                                          "Standby",
                                          "Service fee",
                                          "Store",
                                          "Travel service",
                                          "Unaccompanied travel",
                                          "Upgrades",
                                          "Wi-fi"
                                        ]
                                      },
                                      "sub_category": {
                                        "type": "string",
                                        "description": "Sub-category of the ancillary service, free-form.",
                                        "nullable": true
                                      }
                                    },
                                    "required": ["category", "sub_category"],
                                    "x-title-plural": "Services Elements"
                                  },
                                  "description": "Additional travel charges, such as baggage fees."
                                }
                              },
                              "required": [
                                "ticket_document_number",
                                "passenger_name_or_description",
                                "connected_ticket_document_number",
                                "credit_reason_indicator",
                                "services"
                              ],
                              "nullable": true,
                              "x-title-plural": "Ancillaries"
                            }
                          },
                          "required": [
                            "ticket_number",
                            "passenger_name",
                            "departure_date",
                            "origination_city_airport_code",
                            "travel_agency_code",
                            "travel_agency_name",
                            "restricted_ticket_indicator",
                            "computerized_reservation_system",
                            "credit_reason_indicator",
                            "ticket_change_indicator",
                            "trip_legs",
                            "ancillary"
                          ],
                          "nullable": true,
                          "x-title-plural": "Travels"
                        }
                      },
                      "required": [
                        "purchase_identifier",
                        "purchase_identifier_format",
                        "customer_reference_identifier",
                        "local_tax_amount",
                        "local_tax_currency",
                        "national_tax_amount",
                        "national_tax_currency",
                        "car_rental",
                        "lodging",
                        "travel"
                      ],
                      "nullable": true,
                      "x-title-plural": "Card Purchase Details"
                    },
                    "network_identifiers": {
                      "type": "object",
                      "title": "Network Identifiers",
                      "description": "Network-specific identifiers for this refund.",
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "acquirer_reference_number": {
                          "type": "string",
                          "description": "A globally unique identifier for this settlement."
                        },
                        "acquirer_business_id": {
                          "type": "string",
                          "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                        }
                      },
                      "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                      "x-title-plural": "Network Identifiers"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_settlement"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                    }
                  },
                  "required": [
                    "id",
                    "card_payment_id",
                    "card_authorization",
                    "amount",
                    "currency",
                    "presentment_amount",
                    "presentment_currency",
                    "merchant_acceptor_id",
                    "merchant_city",
                    "merchant_state",
                    "merchant_country",
                    "merchant_name",
                    "merchant_category_code",
                    "transaction_id",
                    "pending_transaction_id",
                    "purchase_details",
                    "network_identifiers",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Settlements"
                },
                "card_refund": {
                  "type": "object",
                  "title": "Card Refund",
                  "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                  "example": {
                    "id": "card_refund_imgc2xwplh6t4r3gn16e",
                    "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                    "amount": 100,
                    "currency": "USD",
                    "merchant_acceptor_id": "5665270011000168",
                    "merchant_city": "New York",
                    "merchant_state": "NY",
                    "merchant_country": "US",
                    "merchant_name": "AMAZON.COM",
                    "merchant_category_code": "5734",
                    "purchase_details": {
                      "purchase_identifier": "10203",
                      "purchase_identifier_format": "order_number",
                      "customer_reference_identifier": "51201",
                      "local_tax_amount": null,
                      "local_tax_currency": "usd",
                      "national_tax_amount": null,
                      "national_tax_currency": "usd",
                      "car_rental": null,
                      "lodging": {
                        "no_show_indicator": "no_show",
                        "extra_charges": "restaurant",
                        "check_in_date": "2023-07-20",
                        "daily_room_rate_amount": 1000,
                        "daily_room_rate_currency": "usd",
                        "total_tax_amount": 100,
                        "total_tax_currency": "usd",
                        "prepaid_expenses_amount": 0,
                        "prepaid_expenses_currency": "usd",
                        "food_beverage_charges_amount": 0,
                        "food_beverage_charges_currency": "usd",
                        "folio_cash_advances_amount": 0,
                        "folio_cash_advances_currency": "usd",
                        "room_nights": 1,
                        "total_room_tax_amount": 100,
                        "total_room_tax_currency": "usd"
                      },
                      "travel": null
                    },
                    "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "acquirer_reference_number": "83163715445437604865089",
                      "acquirer_business_id": "69650702"
                    },
                    "type": "card_refund"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Refund identifier." },
                    "card_payment_id": {
                      "type": "string",
                      "description": "The ID of the Card Payment this transaction belongs to.",
                      "nullable": true
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "merchant_acceptor_id": {
                      "type": "string",
                      "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                      "nullable": true
                    },
                    "merchant_city": {
                      "type": "string",
                      "description": "The city the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_state": {
                      "type": "string",
                      "description": "The state the merchant resides in.",
                      "nullable": true
                    },
                    "merchant_country": {
                      "type": "string",
                      "description": "The country the merchant resides in."
                    },
                    "merchant_name": {
                      "type": "string",
                      "description": "The name of the merchant.",
                      "nullable": true
                    },
                    "merchant_category_code": {
                      "type": "string",
                      "description": "The 4-digit MCC describing the merchant's business."
                    },
                    "purchase_details": {
                      "type": "object",
                      "title": "Card Purchase Details",
                      "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                      "example": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "properties": {
                        "purchase_identifier": {
                          "type": "string",
                          "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                          "nullable": true
                        },
                        "purchase_identifier_format": {
                          "type": "string",
                          "enum": [
                            "free_text",
                            "order_number",
                            "rental_agreement_number",
                            "hotel_folio_number",
                            "invoice_number"
                          ],
                          "description": "The format of the purchase identifier.",
                          "nullable": true,
                          "x-enum-descriptions": [
                            "Free text",
                            "Order number",
                            "Rental agreement number",
                            "Hotel folio number",
                            "Invoice number"
                          ]
                        },
                        "customer_reference_identifier": {
                          "type": "string",
                          "description": "An identifier from the merchant for the customer or consumer.",
                          "nullable": true
                        },
                        "local_tax_amount": {
                          "type": "integer",
                          "description": "The state or provincial tax amount in minor units.",
                          "nullable": true
                        },
                        "local_tax_currency": {
                          "type": "string",
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                          "nullable": true
                        },
                        "national_tax_amount": {
                          "type": "integer",
                          "description": "The national tax amount in minor units.",
                          "nullable": true
                        },
                        "national_tax_currency": {
                          "type": "string",
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                          "nullable": true
                        },
                        "car_rental": {
                          "type": "object",
                          "title": "Car Rental",
                          "description": "Fields specific to car rentals.",
                          "properties": {
                            "extra_charges": {
                              "type": "string",
                              "enum": [
                                "no_extra_charge",
                                "gas",
                                "extra_mileage",
                                "late_return",
                                "one_way_service_fee",
                                "parking_violation"
                              ],
                              "description": "Additional charges (gas, late fee, etc.) being billed.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No extra charge",
                                "Gas",
                                "Extra mileage",
                                "Late return",
                                "One way service fee",
                                "Parking violation"
                              ]
                            },
                            "days_rented": {
                              "type": "integer",
                              "description": "Number of days the vehicle was rented.",
                              "nullable": true
                            },
                            "no_show_indicator": {
                              "type": "string",
                              "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                              "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                              "nullable": true,
                              "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                            },
                            "checkout_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                              "nullable": true
                            },
                            "daily_rental_rate_amount": {
                              "type": "integer",
                              "description": "Daily rate being charged for the vehicle.",
                              "nullable": true
                            },
                            "daily_rental_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                              "nullable": true
                            },
                            "weekly_rental_rate_amount": {
                              "type": "integer",
                              "description": "Weekly rate being charged for the vehicle.",
                              "nullable": true
                            },
                            "weekly_rental_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                              "nullable": true
                            },
                            "insurance_charges_amount": {
                              "type": "integer",
                              "description": "Any insurance being charged for the vehicle.",
                              "nullable": true
                            },
                            "insurance_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                              "nullable": true
                            },
                            "fuel_charges_amount": {
                              "type": "integer",
                              "description": "Fuel charges for the vehicle.",
                              "nullable": true
                            },
                            "fuel_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                              "nullable": true
                            },
                            "one_way_drop_off_charges_amount": {
                              "type": "integer",
                              "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                              "nullable": true
                            },
                            "one_way_drop_off_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                              "nullable": true
                            },
                            "car_class_code": {
                              "type": "string",
                              "description": "Code indicating the vehicle's class.",
                              "nullable": true
                            },
                            "renter_name": {
                              "type": "string",
                              "description": "Name of the person renting the vehicle.",
                              "nullable": true
                            }
                          },
                          "required": [
                            "extra_charges",
                            "days_rented",
                            "no_show_indicator",
                            "checkout_date",
                            "daily_rental_rate_amount",
                            "daily_rental_rate_currency",
                            "weekly_rental_rate_amount",
                            "weekly_rental_rate_currency",
                            "insurance_charges_amount",
                            "insurance_charges_currency",
                            "fuel_charges_amount",
                            "fuel_charges_currency",
                            "one_way_drop_off_charges_amount",
                            "one_way_drop_off_charges_currency",
                            "car_class_code",
                            "renter_name"
                          ],
                          "nullable": true,
                          "x-title-plural": "Car Rentals"
                        },
                        "lodging": {
                          "type": "object",
                          "title": "Lodging",
                          "description": "Fields specific to lodging.",
                          "properties": {
                            "no_show_indicator": {
                              "type": "string",
                              "enum": ["not_applicable", "no_show"],
                              "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                              "nullable": true,
                              "x-enum-descriptions": ["Not applicable", "No show"]
                            },
                            "extra_charges": {
                              "type": "string",
                              "enum": [
                                "no_extra_charge",
                                "restaurant",
                                "gift_shop",
                                "mini_bar",
                                "telephone",
                                "other",
                                "laundry"
                              ],
                              "description": "Additional charges (phone, late check-out, etc.) being billed.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No extra charge",
                                "Restaurant",
                                "Gift shop",
                                "Mini bar",
                                "Telephone",
                                "Other",
                                "Laundry"
                              ]
                            },
                            "check_in_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the customer checked in.",
                              "nullable": true
                            },
                            "daily_room_rate_amount": {
                              "type": "integer",
                              "description": "Daily rate being charged for the room.",
                              "nullable": true
                            },
                            "daily_room_rate_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                              "nullable": true
                            },
                            "total_tax_amount": {
                              "type": "integer",
                              "description": "Total tax being charged for the room.",
                              "nullable": true
                            },
                            "total_tax_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                              "nullable": true
                            },
                            "prepaid_expenses_amount": {
                              "type": "integer",
                              "description": "Prepaid expenses being charged for the room.",
                              "nullable": true
                            },
                            "prepaid_expenses_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                              "nullable": true
                            },
                            "food_beverage_charges_amount": {
                              "type": "integer",
                              "description": "Food and beverage charges for the room.",
                              "nullable": true
                            },
                            "food_beverage_charges_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                              "nullable": true
                            },
                            "folio_cash_advances_amount": {
                              "type": "integer",
                              "description": "Folio cash advances for the room.",
                              "nullable": true
                            },
                            "folio_cash_advances_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                              "nullable": true
                            },
                            "room_nights": {
                              "type": "integer",
                              "description": "Number of nights the room was rented.",
                              "nullable": true
                            },
                            "total_room_tax_amount": {
                              "type": "integer",
                              "description": "Total room tax being charged.",
                              "nullable": true
                            },
                            "total_room_tax_currency": {
                              "type": "string",
                              "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                              "nullable": true
                            }
                          },
                          "required": [
                            "no_show_indicator",
                            "extra_charges",
                            "check_in_date",
                            "daily_room_rate_amount",
                            "daily_room_rate_currency",
                            "total_tax_amount",
                            "total_tax_currency",
                            "prepaid_expenses_amount",
                            "prepaid_expenses_currency",
                            "food_beverage_charges_amount",
                            "food_beverage_charges_currency",
                            "folio_cash_advances_amount",
                            "folio_cash_advances_currency",
                            "room_nights",
                            "total_room_tax_amount",
                            "total_room_tax_currency"
                          ],
                          "nullable": true,
                          "x-title-plural": "Lodgings"
                        },
                        "travel": {
                          "type": "object",
                          "title": "Travel",
                          "description": "Fields specific to travel.",
                          "properties": {
                            "ticket_number": {
                              "type": "string",
                              "description": "Ticket number.",
                              "nullable": true
                            },
                            "passenger_name": {
                              "type": "string",
                              "description": "Name of the passenger.",
                              "nullable": true
                            },
                            "departure_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of departure.",
                              "nullable": true
                            },
                            "origination_city_airport_code": {
                              "type": "string",
                              "description": "Code for the originating city or airport.",
                              "nullable": true
                            },
                            "travel_agency_code": {
                              "type": "string",
                              "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                              "nullable": true
                            },
                            "travel_agency_name": {
                              "type": "string",
                              "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                              "nullable": true
                            },
                            "restricted_ticket_indicator": {
                              "type": "string",
                              "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                              "description": "Indicates whether this ticket is non-refundable.",
                              "nullable": true,
                              "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                            },
                            "computerized_reservation_system": {
                              "type": "string",
                              "description": "Indicates the computerized reservation system used to book the ticket.",
                              "nullable": true
                            },
                            "credit_reason_indicator": {
                              "type": "string",
                              "enum": [
                                "no_credit",
                                "passenger_transport_ancillary_purchase_cancellation",
                                "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                "airline_ticket_cancellation",
                                "other",
                                "partial_refund_of_airline_ticket"
                              ],
                              "description": "Indicates the reason for a credit to the cardholder.",
                              "nullable": true,
                              "x-enum-descriptions": [
                                "No credit",
                                "Passenger transport ancillary purchase cancellation",
                                "Airline ticket and passenger transport ancillary purchase cancellation",
                                "Airline ticket cancellation",
                                "Other",
                                "Partial refund of airline ticket"
                              ]
                            },
                            "ticket_change_indicator": {
                              "type": "string",
                              "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                              "description": "Indicates why a ticket was changed.",
                              "nullable": true,
                              "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                            },
                            "trip_legs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Trip Legs Element",
                                "properties": {
                                  "flight_number": {
                                    "type": "string",
                                    "description": "Flight number.",
                                    "nullable": true
                                  },
                                  "carrier_code": {
                                    "type": "string",
                                    "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                    "nullable": true
                                  },
                                  "fare_basis_code": {
                                    "type": "string",
                                    "description": "Fare basis code.",
                                    "nullable": true
                                  },
                                  "service_class": {
                                    "type": "string",
                                    "description": "Service class (e.g., first class, business class, etc.).",
                                    "nullable": true
                                  },
                                  "stop_over_code": {
                                    "type": "string",
                                    "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                    "description": "Indicates whether a stopover is allowed on this ticket.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "None",
                                      "Stop over allowed",
                                      "Stop over not allowed"
                                    ]
                                  },
                                  "destination_city_airport_code": {
                                    "type": "string",
                                    "description": "Code for the destination city or airport.",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "flight_number",
                                  "carrier_code",
                                  "fare_basis_code",
                                  "service_class",
                                  "stop_over_code",
                                  "destination_city_airport_code"
                                ],
                                "x-title-plural": "Trip Legs Elements"
                              },
                              "description": "Fields specific to each leg of the journey.",
                              "nullable": true
                            },
                            "ancillary": {
                              "type": "object",
                              "title": "Ancillary",
                              "description": "Ancillary purchases in addition to the airfare.",
                              "properties": {
                                "ticket_document_number": {
                                  "type": "string",
                                  "description": "Ticket document number.",
                                  "nullable": true
                                },
                                "passenger_name_or_description": {
                                  "type": "string",
                                  "description": "Name of the passenger or description of the ancillary purchase.",
                                  "nullable": true
                                },
                                "connected_ticket_document_number": {
                                  "type": "string",
                                  "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                  "nullable": true
                                },
                                "credit_reason_indicator": {
                                  "type": "string",
                                  "enum": [
                                    "no_credit",
                                    "passenger_transport_ancillary_purchase_cancellation",
                                    "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                    "other"
                                  ],
                                  "description": "Indicates the reason for a credit to the cardholder.",
                                  "nullable": true,
                                  "x-enum-descriptions": [
                                    "No credit",
                                    "Passenger transport ancillary purchase cancellation",
                                    "Airline ticket and passenger transport ancillary purchase cancellation",
                                    "Other"
                                  ]
                                },
                                "services": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Services Element",
                                    "properties": {
                                      "category": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "bundled_service",
                                          "baggage_fee",
                                          "change_fee",
                                          "cargo",
                                          "carbon_offset",
                                          "frequent_flyer",
                                          "gift_card",
                                          "ground_transport",
                                          "in_flight_entertainment",
                                          "lounge",
                                          "medical",
                                          "meal_beverage",
                                          "other",
                                          "passenger_assist_fee",
                                          "pets",
                                          "seat_fees",
                                          "standby",
                                          "service_fee",
                                          "store",
                                          "travel_service",
                                          "unaccompanied_travel",
                                          "upgrades",
                                          "wifi"
                                        ],
                                        "description": "Category of the ancillary service.",
                                        "nullable": true,
                                        "x-enum-descriptions": [
                                          "None",
                                          "Bundled service",
                                          "Baggage fee",
                                          "Change fee",
                                          "Cargo",
                                          "Carbon offset",
                                          "Frequent flyer",
                                          "Gift card",
                                          "Ground transport",
                                          "In-flight entertainment",
                                          "Lounge",
                                          "Medical",
                                          "Meal beverage",
                                          "Other",
                                          "Passenger assist fee",
                                          "Pets",
                                          "Seat fees",
                                          "Standby",
                                          "Service fee",
                                          "Store",
                                          "Travel service",
                                          "Unaccompanied travel",
                                          "Upgrades",
                                          "Wi-fi"
                                        ]
                                      },
                                      "sub_category": {
                                        "type": "string",
                                        "description": "Sub-category of the ancillary service, free-form.",
                                        "nullable": true
                                      }
                                    },
                                    "required": ["category", "sub_category"],
                                    "x-title-plural": "Services Elements"
                                  },
                                  "description": "Additional travel charges, such as baggage fees."
                                }
                              },
                              "required": [
                                "ticket_document_number",
                                "passenger_name_or_description",
                                "connected_ticket_document_number",
                                "credit_reason_indicator",
                                "services"
                              ],
                              "nullable": true,
                              "x-title-plural": "Ancillaries"
                            }
                          },
                          "required": [
                            "ticket_number",
                            "passenger_name",
                            "departure_date",
                            "origination_city_airport_code",
                            "travel_agency_code",
                            "travel_agency_name",
                            "restricted_ticket_indicator",
                            "computerized_reservation_system",
                            "credit_reason_indicator",
                            "ticket_change_indicator",
                            "trip_legs",
                            "ancillary"
                          ],
                          "nullable": true,
                          "x-title-plural": "Travels"
                        }
                      },
                      "required": [
                        "purchase_identifier",
                        "purchase_identifier_format",
                        "customer_reference_identifier",
                        "local_tax_amount",
                        "local_tax_currency",
                        "national_tax_amount",
                        "national_tax_currency",
                        "car_rental",
                        "lodging",
                        "travel"
                      ],
                      "nullable": true,
                      "x-title-plural": "Card Purchase Details"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Transaction associated with this Transaction."
                    },
                    "network_identifiers": {
                      "type": "object",
                      "title": "Network Identifiers",
                      "description": "Network-specific identifiers for this refund.",
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "acquirer_reference_number": {
                          "type": "string",
                          "description": "A globally unique identifier for this settlement."
                        },
                        "acquirer_business_id": {
                          "type": "string",
                          "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                        }
                      },
                      "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                      "x-title-plural": "Network Identifiers"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_refund"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                    }
                  },
                  "required": [
                    "id",
                    "card_payment_id",
                    "amount",
                    "currency",
                    "merchant_acceptor_id",
                    "merchant_city",
                    "merchant_state",
                    "merchant_country",
                    "merchant_name",
                    "merchant_category_code",
                    "purchase_details",
                    "transaction_id",
                    "network_identifiers",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Refunds"
                },
                "card_fuel_confirmation": {
                  "type": "object",
                  "title": "Card Fuel Confirmation",
                  "description": "A Card Fuel Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `card_fuel_confirmation`.",
                  "example": {
                    "id": "card_fuel_confirmation_wuy91qate4judq2la80a",
                    "updated_authorization_amount": 120,
                    "currency": "USD",
                    "card_authorization_id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                    "network": "visa",
                    "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
                    "network_identifiers": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "type": "card_fuel_confirmation"
                  },
                  "properties": {
                    "id": { "type": "string", "description": "The Card Fuel Confirmation identifier." },
                    "updated_authorization_amount": {
                      "type": "integer",
                      "description": "The updated authorization amount after this fuel confirmation, in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                    },
                    "currency": {
                      "type": "string",
                      "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                      "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the increment's currency.",
                      "x-enum-descriptions": [
                        "Canadian Dollar (CAD)",
                        "Swiss Franc (CHF)",
                        "Euro (EUR)",
                        "British Pound (GBP)",
                        "Japanese Yen (JPY)",
                        "US Dollar (USD)"
                      ]
                    },
                    "card_authorization_id": {
                      "type": "string",
                      "description": "The identifier for the Card Authorization this updates."
                    },
                    "network": {
                      "type": "string",
                      "enum": ["visa"],
                      "description": "The card network used to process this card authorization.",
                      "x-enum-descriptions": ["Visa"]
                    },
                    "pending_transaction_id": {
                      "type": "string",
                      "description": "The identifier of the Pending Transaction associated with this Card Fuel Confirmation.",
                      "nullable": true
                    },
                    "network_identifiers": {
                      "type": "object",
                      "description": "Network-specific identifiers for a specific request or transaction.",
                      "example": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "properties": {
                        "transaction_id": {
                          "type": "string",
                          "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                          "nullable": true
                        },
                        "trace_number": {
                          "type": "string",
                          "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                          "nullable": true
                        },
                        "retrieval_reference_number": {
                          "type": "string",
                          "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                          "nullable": true
                        }
                      },
                      "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                      "x-title-plural": "s"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["card_fuel_confirmation"],
                      "description": "A constant representing the object's type. For this resource it will always be `card_fuel_confirmation`."
                    }
                  },
                  "required": [
                    "id",
                    "updated_authorization_amount",
                    "currency",
                    "card_authorization_id",
                    "network",
                    "pending_transaction_id",
                    "network_identifiers",
                    "type"
                  ],
                  "nullable": true,
                  "x-title-plural": "Card Fuel Confirmations"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the card payment element was created."
                }
              },
              "required": [
                "category",
                "card_authorization",
                "card_validation",
                "card_decline",
                "card_reversal",
                "card_authorization_expiration",
                "card_increment",
                "card_settlement",
                "card_refund",
                "card_fuel_confirmation",
                "created_at"
              ],
              "x-title-plural": "Card Payment Elements"
            },
            "description": "The interactions related to this card payment."
          },
          "state": {
            "type": "object",
            "title": "Card Payment State",
            "description": "The summarized state of this card payment.",
            "example": {
              "authorized_amount": 100,
              "incremented_amount": 20,
              "reversed_amount": 20,
              "fuel_confirmed_amount": 0,
              "settled_amount": 100
            },
            "properties": {
              "authorized_amount": {
                "type": "integer",
                "description": "The total authorized amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "incremented_amount": {
                "type": "integer",
                "description": "The total incrementally updated authorized amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "reversed_amount": {
                "type": "integer",
                "description": "The total reversed amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "fuel_confirmed_amount": {
                "type": "integer",
                "description": "The total amount from fuel confirmations in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "settled_amount": {
                "type": "integer",
                "description": "The total settled or refunded amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              }
            },
            "required": [
              "authorized_amount",
              "incremented_amount",
              "reversed_amount",
              "fuel_confirmed_amount",
              "settled_amount"
            ],
            "x-title-plural": "Card Payment States"
          },
          "type": {
            "type": "string",
            "enum": ["card_payment"],
            "description": "A constant representing the object's type. For this resource it will always be `card_payment`."
          }
        },
        "required": ["id", "created_at", "account_id", "card_id", "elements", "state", "type"],
        "x-title-plural": "Card Payments",
        "x-tag": "Card Payments"
      },
      "card_dispute": {
        "type": "object",
        "title": "Card Dispute",
        "description": "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.",
        "example": {
          "id": "card_dispute_h9sc95nbl1cgltpp7men",
          "explanation": "Unauthorized recurring purchase",
          "status": "pending_reviewing",
          "created_at": "2020-01-31T23:59:59Z",
          "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "acceptance": null,
          "rejection": null,
          "type": "card_dispute"
        },
        "properties": {
          "id": { "type": "string", "description": "The Card Dispute identifier." },
          "explanation": { "type": "string", "description": "Why you disputed the Transaction in question." },
          "status": {
            "type": "string",
            "enum": ["pending_reviewing", "accepted", "rejected"],
            "description": "The results of the Dispute investigation.",
            "x-enum-descriptions": [
              "The Card Dispute is pending review.",
              "The Card Dispute has been accepted and your funds have been returned.",
              "The Card Dispute has been rejected."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."
          },
          "disputed_transaction_id": {
            "type": "string",
            "description": "The identifier of the Transaction that was disputed."
          },
          "acceptance": {
            "type": "object",
            "title": "Card Dispute Acceptance",
            "description": "If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.",
            "example": {
              "accepted_at": "2020-01-31T23:59:59Z",
              "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
            },
            "properties": {
              "accepted_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
              },
              "card_dispute_id": {
                "type": "string",
                "description": "The identifier of the Card Dispute that was accepted."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
              }
            },
            "required": ["accepted_at", "card_dispute_id", "transaction_id"],
            "nullable": true,
            "x-title-plural": "Card Dispute Acceptances"
          },
          "rejection": {
            "type": "object",
            "title": "Card Dispute Rejection",
            "description": "If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.",
            "example": {
              "explanation": "Acquirer provided evidence that the transaction was authorized.",
              "rejected_at": "2020-01-31T23:59:59Z",
              "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men"
            },
            "properties": {
              "explanation": { "type": "string", "description": "Why the Card Dispute was rejected." },
              "rejected_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected."
              },
              "card_dispute_id": {
                "type": "string",
                "description": "The identifier of the Card Dispute that was rejected."
              }
            },
            "required": ["explanation", "rejected_at", "card_dispute_id"],
            "nullable": true,
            "x-title-plural": "Card Dispute Rejections"
          },
          "type": {
            "type": "string",
            "enum": ["card_dispute"],
            "description": "A constant representing the object's type. For this resource it will always be `card_dispute`."
          }
        },
        "required": [
          "id",
          "explanation",
          "status",
          "created_at",
          "disputed_transaction_id",
          "acceptance",
          "rejection",
          "type"
        ],
        "x-title-plural": "Card Disputes",
        "x-tag": "Card Disputes"
      },
      "card_dispute_list": {
        "type": "object",
        "title": "Card Dispute List",
        "description": "A list of Card Dispute objects.",
        "example": {
          "data": [
            {
              "id": "card_dispute_h9sc95nbl1cgltpp7men",
              "explanation": "Unauthorized recurring purchase",
              "status": "pending_reviewing",
              "created_at": "2020-01-31T23:59:59Z",
              "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "acceptance": null,
              "rejection": null,
              "type": "card_dispute"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/card_dispute" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Card Dispute Lists"
      },
      "physical_card": {
        "type": "object",
        "title": "Physical Card",
        "description": "Custom physical Visa cards that are shipped to your customers. The artwork is configurable by a connected [Card Profile](/documentation/api#card-profiles). The same Card can be used for multiple Physical Cards. Printing cards incurs a fee. Please contact [support@increase.com](mailto:support@increase.com) for pricing!",
        "example": {
          "id": "physical_card_ode8duyq5v2ynhjoharl",
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "card_profile_id": "card_profile_cox5y73lob2eqly18piy",
          "created_at": "2020-01-31T23:59:59Z",
          "status": "active",
          "cardholder": { "first_name": "Ian", "last_name": "Crease" },
          "shipment": {
            "method": "usps",
            "status": "pending",
            "tracking": null,
            "address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "line2": "Unit 2",
              "line3": null,
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            }
          },
          "type": "physical_card"
        },
        "properties": {
          "id": { "type": "string", "description": "The physical card identifier." },
          "card_id": {
            "type": "string",
            "description": "The identifier for the Card this Physical Card represents."
          },
          "card_profile_id": {
            "type": "string",
            "description": "The Card Profile used for this Physical Card.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Physical Card was created."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "canceled"],
            "description": "The status of the Physical Card.",
            "x-enum-descriptions": [
              "The physical card is active.",
              "The physical card is temporarily disabled.",
              "The physical card is permanently canceled."
            ]
          },
          "cardholder": {
            "type": "object",
            "title": "Cardholder",
            "description": "Details about the cardholder, as it appears on the printed card.",
            "properties": {
              "first_name": { "type": "string", "description": "The cardholder's first name." },
              "last_name": { "type": "string", "description": "The cardholder's last name." }
            },
            "required": ["first_name", "last_name"],
            "nullable": true,
            "x-title-plural": "Cardholders"
          },
          "shipment": {
            "type": "object",
            "title": "Shipment",
            "description": "The details used to ship this physical card.",
            "properties": {
              "method": {
                "type": "string",
                "enum": ["usps", "fedex_priority_overnight", "fedex_2_day"],
                "description": "The shipping method.",
                "x-enum-descriptions": [
                  "USPS Post with tracking.",
                  "FedEx Priority Overnight, no signature.",
                  "FedEx 2-day."
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "canceled",
                  "submitted",
                  "acknowledged",
                  "rejected",
                  "shipped",
                  "returned"
                ],
                "description": "The status of this shipment.",
                "x-enum-descriptions": [
                  "The physical card has not yet been shipped.",
                  "The physical card shipment was canceled prior to submission.",
                  "The physical card shipment has been submitted to the card fulfillment provider.",
                  "The physical card shipment has been acknowledged by the card fulfillment provider and will be processed in their next batch.",
                  "The physical card shipment was rejected by the card printer due to an error.",
                  "The physical card has been shipped.",
                  "The physical card shipment was returned to the sender and destroyed by the production facility."
                ]
              },
              "tracking": {
                "type": "object",
                "title": "Tracking",
                "description": "Tracking details for the shipment.",
                "properties": {
                  "number": { "type": "string", "description": "The tracking number." },
                  "shipped_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the fulfillment provider marked the card as ready for pick-up by the shipment carrier."
                  },
                  "return_reason": {
                    "type": "string",
                    "description": "For returned shipments, this describes why the package was returned.",
                    "nullable": true
                  }
                },
                "required": ["number", "shipped_at", "return_reason"],
                "nullable": true,
                "x-title-plural": "Trackings"
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The location to where the card's packing label is addressed.",
                "properties": {
                  "name": { "type": "string", "description": "The name of the recipient." },
                  "line1": { "type": "string", "description": "The first line of the shipping address." },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the shipping address.",
                    "nullable": true
                  },
                  "line3": {
                    "type": "string",
                    "description": "The third line of the shipping address.",
                    "nullable": true
                  },
                  "city": { "type": "string", "description": "The city of the shipping address." },
                  "state": { "type": "string", "description": "The US state of the shipping address." },
                  "postal_code": {
                    "type": "string",
                    "description": "The postal code of the shipping address."
                  }
                },
                "required": ["name", "line1", "line2", "line3", "city", "state", "postal_code"],
                "x-title-plural": "Addresses"
              }
            },
            "required": ["method", "status", "tracking", "address"],
            "x-title-plural": "Shipments"
          },
          "type": {
            "type": "string",
            "enum": ["physical_card"],
            "description": "A constant representing the object's type. For this resource it will always be `physical_card`."
          }
        },
        "required": [
          "id",
          "card_id",
          "card_profile_id",
          "created_at",
          "status",
          "cardholder",
          "shipment",
          "type"
        ],
        "x-title-plural": "Physical Cards",
        "x-tag": "Physical Cards"
      },
      "physical_card_list": {
        "type": "object",
        "title": "Physical Card List",
        "description": "A list of Physical Card objects.",
        "example": {
          "data": [
            {
              "id": "physical_card_ode8duyq5v2ynhjoharl",
              "card_id": "card_oubs0hwk5rn6knuecxg2",
              "card_profile_id": "card_profile_cox5y73lob2eqly18piy",
              "created_at": "2020-01-31T23:59:59Z",
              "status": "active",
              "cardholder": { "first_name": "Ian", "last_name": "Crease" },
              "shipment": {
                "method": "usps",
                "status": "pending",
                "tracking": null,
                "address": {
                  "name": "Ian Crease",
                  "line1": "33 Liberty Street",
                  "line2": "Unit 2",
                  "line3": null,
                  "city": "New York",
                  "state": "NY",
                  "postal_code": "10045"
                }
              },
              "type": "physical_card"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/physical_card" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Physical Card Lists"
      },
      "card_profile": {
        "type": "object",
        "title": "Card Profile",
        "description": "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art).",
        "properties": {
          "id": { "type": "string", "description": "The Card Profile identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."
          },
          "status": {
            "type": "string",
            "enum": ["pending", "rejected", "active", "archived"],
            "description": "The status of the Card Profile.",
            "x-enum-descriptions": [
              "The Card Profile is awaiting review from Increase and/or processing by card networks.",
              "There is an issue with the Card Profile preventing it from use.",
              "The Card Profile can be assigned to Cards.",
              "The Card Profile is no longer in use."
            ]
          },
          "description": {
            "type": "string",
            "description": "A description you can use to identify the Card Profile."
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether this Card Profile is the default for all cards in its Increase group."
          },
          "digital_wallets": {
            "type": "object",
            "title": "Digital Wallets",
            "description": "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
            "properties": {
              "text_color": {
                "type": "object",
                "title": "Text Color",
                "description": "The Card's text color, specified as an RGB triple.",
                "properties": {
                  "red": {
                    "type": "integer",
                    "description": "The value of the red channel in the RGB color."
                  },
                  "green": {
                    "type": "integer",
                    "description": "The value of the green channel in the RGB color."
                  },
                  "blue": {
                    "type": "integer",
                    "description": "The value of the blue channel in the RGB color."
                  }
                },
                "required": ["red", "green", "blue"],
                "x-title-plural": "Text Colors"
              },
              "issuer_name": {
                "type": "string",
                "description": "A user-facing description for whoever is issuing the card."
              },
              "card_description": {
                "type": "string",
                "description": "A user-facing description for the card itself."
              },
              "contact_website": {
                "type": "string",
                "description": "A website the user can visit to view and receive support for their card.",
                "nullable": true
              },
              "contact_email": {
                "type": "string",
                "description": "An email address the user can contact to receive support for their card.",
                "nullable": true
              },
              "contact_phone": {
                "type": "string",
                "description": "A phone number the user can contact to receive support for their card.",
                "nullable": true
              },
              "background_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's front image."
              },
              "app_icon_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's icon image."
              }
            },
            "required": [
              "text_color",
              "issuer_name",
              "card_description",
              "contact_website",
              "contact_email",
              "contact_phone",
              "background_image_file_id",
              "app_icon_file_id"
            ],
            "x-title-plural": "Digital Wallets"
          },
          "physical_cards": {
            "type": "object",
            "title": "Physical Cards",
            "description": "How physical cards should be designed and shipped.",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "not_eligible",
                  "rejected",
                  "pending_creating",
                  "pending_reviewing",
                  "pending_submitting",
                  "active"
                ],
                "description": "The status of the Physical Card Profile.",
                "x-enum-descriptions": [
                  "The Card Profile is not eligible for physical cards.",
                  "There is an issue with the Physical Card Profile preventing it from use.",
                  "The Card Profile has not yet been processed by Increase.",
                  "The card profile is awaiting review by Increase.",
                  "The card profile is awaiting submission to the fulfillment provider.",
                  "The Physical Card Profile has been submitted to the fulfillment provider and is ready to use."
                ]
              },
              "contact_phone": {
                "type": "string",
                "description": "A phone number the user can contact to receive support for their card.",
                "nullable": true
              },
              "front_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the physical card's front image.",
                "nullable": true
              },
              "back_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the physical card's back image.",
                "nullable": true
              },
              "carrier_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the physical card's carrier image.",
                "nullable": true
              }
            },
            "required": [
              "status",
              "contact_phone",
              "front_image_file_id",
              "back_image_file_id",
              "carrier_image_file_id"
            ],
            "nullable": true,
            "x-title-plural": "Physical Cards"
          },
          "type": {
            "type": "string",
            "enum": ["card_profile"],
            "description": "A constant representing the object's type. For this resource it will always be `card_profile`."
          }
        },
        "required": [
          "id",
          "created_at",
          "status",
          "description",
          "is_default",
          "digital_wallets",
          "physical_cards",
          "type"
        ],
        "x-title-plural": "Card Profiles",
        "x-tag": "Card Profiles"
      },
      "card_profile_list": {
        "type": "object",
        "title": "Card Profile List",
        "description": "A list of Card Profile objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/card_profile" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Card Profile Lists"
      },
      "digital_wallet_token_list": {
        "type": "object",
        "title": "Digital Wallet Token List",
        "description": "A list of Digital Wallet Token objects.",
        "example": {
          "data": [
            {
              "id": "digital_wallet_token_izi62go3h51p369jrie0",
              "card_id": "card_oubs0hwk5rn6knuecxg2",
              "created_at": "2020-01-31T23:59:59Z",
              "status": "active",
              "token_requestor": "apple_pay",
              "type": "digital_wallet_token"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/digital_wallet_token" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Digital Wallet Token Lists"
      },
      "digital_wallet_token": {
        "type": "object",
        "title": "Digital Wallet Token",
        "description": "A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card.",
        "example": {
          "id": "digital_wallet_token_izi62go3h51p369jrie0",
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "created_at": "2020-01-31T23:59:59Z",
          "status": "active",
          "token_requestor": "apple_pay",
          "type": "digital_wallet_token"
        },
        "properties": {
          "id": { "type": "string", "description": "The Digital Wallet Token identifier." },
          "card_id": {
            "type": "string",
            "description": "The identifier for the Card this Digital Wallet Token belongs to."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created."
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "suspended", "deactivated"],
            "description": "This indicates if payments can be made with the Digital Wallet Token.",
            "x-enum-descriptions": [
              "The digital wallet token is active.",
              "The digital wallet token has been created but not successfully activated via two-factor authentication yet.",
              "The digital wallet token has been temporarily paused.",
              "The digital wallet token has been permanently canceled."
            ]
          },
          "token_requestor": {
            "type": "string",
            "enum": ["apple_pay", "google_pay", "unknown"],
            "description": "The digital wallet app being used.",
            "x-enum-descriptions": ["Apple Pay", "Google Pay", "Unknown"]
          },
          "type": {
            "type": "string",
            "enum": ["digital_wallet_token"],
            "description": "A constant representing the object's type. For this resource it will always be `digital_wallet_token`."
          }
        },
        "required": ["id", "card_id", "created_at", "status", "token_requestor", "type"],
        "x-title-plural": "Digital Wallet Tokens",
        "x-tag": "Digital Wallet Tokens"
      },
      "transaction_list": {
        "type": "object",
        "title": "Transaction List",
        "description": "A list of Transaction objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/transaction" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Transaction Lists"
      },
      "transaction": {
        "type": "object",
        "title": "Transaction",
        "description": "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transaction's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
          },
          "description": {
            "type": "string",
            "description": "An informational message describing this transaction. Use the fields in `source` to get more detailed information. This field appears as the line-item on the statement."
          },
          "id": { "type": "string", "description": "The Transaction identifier." },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "enum": ["account_number", "card"],
            "description": "The type of the route this Transaction came through.",
            "nullable": true,
            "x-enum-descriptions": ["An Account Number.", "A Card."]
          },
          "source": {
            "type": "object",
            "title": "Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_ach_transfer_return_intention",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection",
                  "other"
                ],
                "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                  "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                  "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                  "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                  "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                  "Card Refund: details will be under the `card_refund` object.",
                  "Card Settlement: details will be under the `card_settlement` object.",
                  "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                  "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                  "Check Deposit Return: details will be under the `check_deposit_return` object.",
                  "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                  "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                  "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                  "Fee Payment: details will be under the `fee_payment` object.",
                  "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                  "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                  "Inbound Check: details will be under the `inbound_check` object.",
                  "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                  "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                  "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                  "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                  "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                  "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                  "Interest Payment: details will be under the `interest_payment` object.",
                  "Internal Source: details will be under the `internal_source` object.",
                  "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                  "Sample Funds: details will be under the `sample_funds` object.",
                  "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                  "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                  "The Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "account_transfer_intention": {
                "type": "object",
                "title": "Account Transfer Intention",
                "description": "An Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "description": "Frederick S. Holmes",
                  "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                  "source_account_id": "account_in71c4amph0vgo2qllky",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "The description you chose to give the transfer."
                  },
                  "destination_account_id": {
                    "type": "string",
                    "description": "The identifier of the Account to where the Account Transfer was sent."
                  },
                  "source_account_id": {
                    "type": "string",
                    "description": "The identifier of the Account from where the Account Transfer was sent."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "description",
                  "destination_account_id",
                  "source_account_id",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Account Transfer Intentions"
              },
              "ach_transfer_intention": {
                "type": "object",
                "title": "ACH Transfer Intention",
                "description": "An ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "statement_descriptor": "Frederick S. Holmes",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The account number for the destination account."
                  },
                  "routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                  },
                  "statement_descriptor": {
                    "type": "string",
                    "description": "A description set when the ACH Transfer was created."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "statement_descriptor",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Intentions"
              },
              "ach_transfer_rejection": {
                "type": "object",
                "title": "ACH Transfer Rejection",
                "description": "An ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                "example": { "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n" },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Transaction."
                  }
                },
                "required": ["transfer_id"],
                "nullable": true,
                "x-title-plural": "ACH Transfer Rejections"
              },
              "ach_transfer_return": {
                "type": "object",
                "title": "ACH Transfer Return",
                "description": "An ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                "example": {
                  "created_at": "2020-01-31T23:59:59Z",
                  "return_reason_code": "insufficient_fund",
                  "raw_return_reason_code": "R01",
                  "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                  },
                  "return_reason_code": {
                    "type": "string",
                    "enum": [
                      "insufficient_fund",
                      "no_account",
                      "account_closed",
                      "invalid_account_number_structure",
                      "account_frozen_entry_returned_per_ofac_instruction",
                      "credit_entry_refused_by_receiver",
                      "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                      "corporate_customer_advised_not_authorized",
                      "payment_stopped",
                      "non_transaction_account",
                      "uncollected_funds",
                      "routing_number_check_digit_error",
                      "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                      "amount_field_error",
                      "authorization_revoked_by_customer",
                      "invalid_ach_routing_number",
                      "file_record_edit_criteria",
                      "enr_invalid_individual_name",
                      "returned_per_odfi_request",
                      "limited_participation_dfi",
                      "incorrectly_coded_outbound_international_payment",
                      "account_sold_to_another_dfi",
                      "addenda_error",
                      "beneficiary_or_account_holder_deceased",
                      "customer_advised_not_within_authorization_terms",
                      "corrected_return",
                      "duplicate_entry",
                      "duplicate_return",
                      "enr_duplicate_enrollment",
                      "enr_invalid_dfi_account_number",
                      "enr_invalid_individual_id_number",
                      "enr_invalid_representative_payee_indicator",
                      "enr_invalid_transaction_code",
                      "enr_return_of_enr_entry",
                      "enr_routing_number_check_digit_error",
                      "entry_not_processed_by_gateway",
                      "field_error",
                      "foreign_receiving_dfi_unable_to_settle",
                      "iat_entry_coding_error",
                      "improper_effective_entry_date",
                      "improper_source_document_source_document_presented",
                      "invalid_company_id",
                      "invalid_foreign_receiving_dfi_identification",
                      "invalid_individual_id_number",
                      "item_and_rck_entry_presented_for_payment",
                      "item_related_to_rck_entry_is_ineligible",
                      "mandatory_field_error",
                      "misrouted_dishonored_return",
                      "misrouted_return",
                      "no_errors_found",
                      "non_acceptance_of_r62_dishonored_return",
                      "non_participant_in_iat_program",
                      "permissible_return_entry",
                      "permissible_return_entry_not_accepted",
                      "rdfi_non_settlement",
                      "rdfi_participant_in_check_truncation_program",
                      "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                      "return_not_a_duplicate",
                      "return_of_erroneous_or_reversing_debit",
                      "return_of_improper_credit_entry",
                      "return_of_improper_debit_entry",
                      "return_of_xck_entry",
                      "source_document_presented_for_payment",
                      "state_law_affecting_rck_acceptance",
                      "stop_payment_on_item_related_to_rck_entry",
                      "stop_payment_on_source_document",
                      "timely_original_return",
                      "trace_number_error",
                      "untimely_dishonored_return",
                      "untimely_return"
                    ],
                    "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                    "x-enum-descriptions": [
                      "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                      "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                      "Code R02. The account is closed at the receiving bank.",
                      "Code R04. The account number is invalid at the receiving bank.",
                      "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                      "Code R23. The receiving bank account refused a credit transfer.",
                      "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                      "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                      "Code R08. The receiving bank stopped payment on this transfer.",
                      "Code R20. The receiving bank account does not perform transfers.",
                      "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                      "Code R28. The routing number is incorrect.",
                      "Code R10. The customer at the receiving bank reversed the transfer.",
                      "Code R19. The amount field is incorrect or too large.",
                      "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                      "Code R13. The routing number is invalid.",
                      "Code R17. The receiving bank is unable to process a field in the transfer.",
                      "Code R45. The individual name field was invalid.",
                      "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                      "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                      "Code R85. The outbound international ACH transfer was incorrect.",
                      "Code R12. A rare return reason. The account was sold to another bank.",
                      "Code R25. The addenda record is incorrect or missing.",
                      "Code R15. A rare return reason. The account holder is deceased.",
                      "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                      "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                      "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                      "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                      "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                      "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                      "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                      "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                      "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                      "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                      "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                      "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                      "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                      "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                      "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                      "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                      "Code R26. A rare return reason. The ACH is missing a required field.",
                      "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                      "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                      "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                      "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                      "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                      "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                      "Code R70. A rare return reason. The receiving bank had not approved this return.",
                      "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                      "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                      "Code R14. A rare return reason. The payee is deceased.",
                      "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                      "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                      "Code R36. A rare return reason. Return of a malformed credit entry.",
                      "Code R35. A rare return reason. Return of a malformed debit entry.",
                      "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                      "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                      "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                      "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                      "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                      "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                      "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                      "Code R72. A rare return reason. The dishonored return was sent too late.",
                      "Code R68. A rare return reason. The return was sent too late."
                    ]
                  },
                  "raw_return_reason_code": {
                    "type": "string",
                    "description": "The three character ACH return code, in the range R01 to R85."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer associated with this return."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction associated with this return."
                  }
                },
                "required": [
                  "created_at",
                  "return_reason_code",
                  "raw_return_reason_code",
                  "transfer_id",
                  "transaction_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Returns"
              },
              "card_dispute_acceptance": {
                "type": "object",
                "title": "Card Dispute Acceptance",
                "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                "example": {
                  "accepted_at": "2020-01-31T23:59:59Z",
                  "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                  },
                  "card_dispute_id": {
                    "type": "string",
                    "description": "The identifier of the Card Dispute that was accepted."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
                  }
                },
                "required": ["accepted_at", "card_dispute_id", "transaction_id"],
                "nullable": true,
                "x-title-plural": "Card Dispute Acceptances"
              },
              "card_refund": {
                "type": "object",
                "title": "Card Refund",
                "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                "example": {
                  "id": "card_refund_imgc2xwplh6t4r3gn16e",
                  "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                  "amount": 100,
                  "currency": "USD",
                  "merchant_acceptor_id": "5665270011000168",
                  "merchant_city": "New York",
                  "merchant_state": "NY",
                  "merchant_country": "US",
                  "merchant_name": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "purchase_details": {
                    "purchase_identifier": "10203",
                    "purchase_identifier_format": "order_number",
                    "customer_reference_identifier": "51201",
                    "local_tax_amount": null,
                    "local_tax_currency": "usd",
                    "national_tax_amount": null,
                    "national_tax_currency": "usd",
                    "car_rental": null,
                    "lodging": {
                      "no_show_indicator": "no_show",
                      "extra_charges": "restaurant",
                      "check_in_date": "2023-07-20",
                      "daily_room_rate_amount": 1000,
                      "daily_room_rate_currency": "usd",
                      "total_tax_amount": 100,
                      "total_tax_currency": "usd",
                      "prepaid_expenses_amount": 0,
                      "prepaid_expenses_currency": "usd",
                      "food_beverage_charges_amount": 0,
                      "food_beverage_charges_currency": "usd",
                      "folio_cash_advances_amount": 0,
                      "folio_cash_advances_currency": "usd",
                      "room_nights": 1,
                      "total_room_tax_amount": 100,
                      "total_room_tax_currency": "usd"
                    },
                    "travel": null
                  },
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "network_identifiers": {
                    "transaction_id": "627199945183184",
                    "acquirer_reference_number": "83163715445437604865089",
                    "acquirer_business_id": "69650702"
                  },
                  "type": "card_refund"
                },
                "properties": {
                  "id": { "type": "string", "description": "The Card Refund identifier." },
                  "card_payment_id": {
                    "type": "string",
                    "description": "The ID of the Card Payment this transaction belongs to.",
                    "nullable": true
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "The state the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in."
                  },
                  "merchant_name": {
                    "type": "string",
                    "description": "The name of the merchant.",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The 4-digit MCC describing the merchant's business."
                  },
                  "purchase_details": {
                    "type": "object",
                    "title": "Card Purchase Details",
                    "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                    "example": {
                      "purchase_identifier": "10203",
                      "purchase_identifier_format": "order_number",
                      "customer_reference_identifier": "51201",
                      "local_tax_amount": null,
                      "local_tax_currency": "usd",
                      "national_tax_amount": null,
                      "national_tax_currency": "usd",
                      "car_rental": null,
                      "lodging": {
                        "no_show_indicator": "no_show",
                        "extra_charges": "restaurant",
                        "check_in_date": "2023-07-20",
                        "daily_room_rate_amount": 1000,
                        "daily_room_rate_currency": "usd",
                        "total_tax_amount": 100,
                        "total_tax_currency": "usd",
                        "prepaid_expenses_amount": 0,
                        "prepaid_expenses_currency": "usd",
                        "food_beverage_charges_amount": 0,
                        "food_beverage_charges_currency": "usd",
                        "folio_cash_advances_amount": 0,
                        "folio_cash_advances_currency": "usd",
                        "room_nights": 1,
                        "total_room_tax_amount": 100,
                        "total_room_tax_currency": "usd"
                      },
                      "travel": null
                    },
                    "properties": {
                      "purchase_identifier": {
                        "type": "string",
                        "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                        "nullable": true
                      },
                      "purchase_identifier_format": {
                        "type": "string",
                        "enum": [
                          "free_text",
                          "order_number",
                          "rental_agreement_number",
                          "hotel_folio_number",
                          "invoice_number"
                        ],
                        "description": "The format of the purchase identifier.",
                        "nullable": true,
                        "x-enum-descriptions": [
                          "Free text",
                          "Order number",
                          "Rental agreement number",
                          "Hotel folio number",
                          "Invoice number"
                        ]
                      },
                      "customer_reference_identifier": {
                        "type": "string",
                        "description": "An identifier from the merchant for the customer or consumer.",
                        "nullable": true
                      },
                      "local_tax_amount": {
                        "type": "integer",
                        "description": "The state or provincial tax amount in minor units.",
                        "nullable": true
                      },
                      "local_tax_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                        "nullable": true
                      },
                      "national_tax_amount": {
                        "type": "integer",
                        "description": "The national tax amount in minor units.",
                        "nullable": true
                      },
                      "national_tax_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                        "nullable": true
                      },
                      "car_rental": {
                        "type": "object",
                        "title": "Car Rental",
                        "description": "Fields specific to car rentals.",
                        "properties": {
                          "extra_charges": {
                            "type": "string",
                            "enum": [
                              "no_extra_charge",
                              "gas",
                              "extra_mileage",
                              "late_return",
                              "one_way_service_fee",
                              "parking_violation"
                            ],
                            "description": "Additional charges (gas, late fee, etc.) being billed.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No extra charge",
                              "Gas",
                              "Extra mileage",
                              "Late return",
                              "One way service fee",
                              "Parking violation"
                            ]
                          },
                          "days_rented": {
                            "type": "integer",
                            "description": "Number of days the vehicle was rented.",
                            "nullable": true
                          },
                          "no_show_indicator": {
                            "type": "string",
                            "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                            "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                            "nullable": true,
                            "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                          },
                          "checkout_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                            "nullable": true
                          },
                          "daily_rental_rate_amount": {
                            "type": "integer",
                            "description": "Daily rate being charged for the vehicle.",
                            "nullable": true
                          },
                          "daily_rental_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                            "nullable": true
                          },
                          "weekly_rental_rate_amount": {
                            "type": "integer",
                            "description": "Weekly rate being charged for the vehicle.",
                            "nullable": true
                          },
                          "weekly_rental_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                            "nullable": true
                          },
                          "insurance_charges_amount": {
                            "type": "integer",
                            "description": "Any insurance being charged for the vehicle.",
                            "nullable": true
                          },
                          "insurance_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                            "nullable": true
                          },
                          "fuel_charges_amount": {
                            "type": "integer",
                            "description": "Fuel charges for the vehicle.",
                            "nullable": true
                          },
                          "fuel_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                            "nullable": true
                          },
                          "one_way_drop_off_charges_amount": {
                            "type": "integer",
                            "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                            "nullable": true
                          },
                          "one_way_drop_off_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                            "nullable": true
                          },
                          "car_class_code": {
                            "type": "string",
                            "description": "Code indicating the vehicle's class.",
                            "nullable": true
                          },
                          "renter_name": {
                            "type": "string",
                            "description": "Name of the person renting the vehicle.",
                            "nullable": true
                          }
                        },
                        "required": [
                          "extra_charges",
                          "days_rented",
                          "no_show_indicator",
                          "checkout_date",
                          "daily_rental_rate_amount",
                          "daily_rental_rate_currency",
                          "weekly_rental_rate_amount",
                          "weekly_rental_rate_currency",
                          "insurance_charges_amount",
                          "insurance_charges_currency",
                          "fuel_charges_amount",
                          "fuel_charges_currency",
                          "one_way_drop_off_charges_amount",
                          "one_way_drop_off_charges_currency",
                          "car_class_code",
                          "renter_name"
                        ],
                        "nullable": true,
                        "x-title-plural": "Car Rentals"
                      },
                      "lodging": {
                        "type": "object",
                        "title": "Lodging",
                        "description": "Fields specific to lodging.",
                        "properties": {
                          "no_show_indicator": {
                            "type": "string",
                            "enum": ["not_applicable", "no_show"],
                            "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                            "nullable": true,
                            "x-enum-descriptions": ["Not applicable", "No show"]
                          },
                          "extra_charges": {
                            "type": "string",
                            "enum": [
                              "no_extra_charge",
                              "restaurant",
                              "gift_shop",
                              "mini_bar",
                              "telephone",
                              "other",
                              "laundry"
                            ],
                            "description": "Additional charges (phone, late check-out, etc.) being billed.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No extra charge",
                              "Restaurant",
                              "Gift shop",
                              "Mini bar",
                              "Telephone",
                              "Other",
                              "Laundry"
                            ]
                          },
                          "check_in_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date the customer checked in.",
                            "nullable": true
                          },
                          "daily_room_rate_amount": {
                            "type": "integer",
                            "description": "Daily rate being charged for the room.",
                            "nullable": true
                          },
                          "daily_room_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                            "nullable": true
                          },
                          "total_tax_amount": {
                            "type": "integer",
                            "description": "Total tax being charged for the room.",
                            "nullable": true
                          },
                          "total_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                            "nullable": true
                          },
                          "prepaid_expenses_amount": {
                            "type": "integer",
                            "description": "Prepaid expenses being charged for the room.",
                            "nullable": true
                          },
                          "prepaid_expenses_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                            "nullable": true
                          },
                          "food_beverage_charges_amount": {
                            "type": "integer",
                            "description": "Food and beverage charges for the room.",
                            "nullable": true
                          },
                          "food_beverage_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                            "nullable": true
                          },
                          "folio_cash_advances_amount": {
                            "type": "integer",
                            "description": "Folio cash advances for the room.",
                            "nullable": true
                          },
                          "folio_cash_advances_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                            "nullable": true
                          },
                          "room_nights": {
                            "type": "integer",
                            "description": "Number of nights the room was rented.",
                            "nullable": true
                          },
                          "total_room_tax_amount": {
                            "type": "integer",
                            "description": "Total room tax being charged.",
                            "nullable": true
                          },
                          "total_room_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                            "nullable": true
                          }
                        },
                        "required": [
                          "no_show_indicator",
                          "extra_charges",
                          "check_in_date",
                          "daily_room_rate_amount",
                          "daily_room_rate_currency",
                          "total_tax_amount",
                          "total_tax_currency",
                          "prepaid_expenses_amount",
                          "prepaid_expenses_currency",
                          "food_beverage_charges_amount",
                          "food_beverage_charges_currency",
                          "folio_cash_advances_amount",
                          "folio_cash_advances_currency",
                          "room_nights",
                          "total_room_tax_amount",
                          "total_room_tax_currency"
                        ],
                        "nullable": true,
                        "x-title-plural": "Lodgings"
                      },
                      "travel": {
                        "type": "object",
                        "title": "Travel",
                        "description": "Fields specific to travel.",
                        "properties": {
                          "ticket_number": {
                            "type": "string",
                            "description": "Ticket number.",
                            "nullable": true
                          },
                          "passenger_name": {
                            "type": "string",
                            "description": "Name of the passenger.",
                            "nullable": true
                          },
                          "departure_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of departure.",
                            "nullable": true
                          },
                          "origination_city_airport_code": {
                            "type": "string",
                            "description": "Code for the originating city or airport.",
                            "nullable": true
                          },
                          "travel_agency_code": {
                            "type": "string",
                            "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                            "nullable": true
                          },
                          "travel_agency_name": {
                            "type": "string",
                            "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                            "nullable": true
                          },
                          "restricted_ticket_indicator": {
                            "type": "string",
                            "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                            "description": "Indicates whether this ticket is non-refundable.",
                            "nullable": true,
                            "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                          },
                          "computerized_reservation_system": {
                            "type": "string",
                            "description": "Indicates the computerized reservation system used to book the ticket.",
                            "nullable": true
                          },
                          "credit_reason_indicator": {
                            "type": "string",
                            "enum": [
                              "no_credit",
                              "passenger_transport_ancillary_purchase_cancellation",
                              "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                              "airline_ticket_cancellation",
                              "other",
                              "partial_refund_of_airline_ticket"
                            ],
                            "description": "Indicates the reason for a credit to the cardholder.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No credit",
                              "Passenger transport ancillary purchase cancellation",
                              "Airline ticket and passenger transport ancillary purchase cancellation",
                              "Airline ticket cancellation",
                              "Other",
                              "Partial refund of airline ticket"
                            ]
                          },
                          "ticket_change_indicator": {
                            "type": "string",
                            "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                            "description": "Indicates why a ticket was changed.",
                            "nullable": true,
                            "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                          },
                          "trip_legs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Trip Legs Element",
                              "properties": {
                                "flight_number": {
                                  "type": "string",
                                  "description": "Flight number.",
                                  "nullable": true
                                },
                                "carrier_code": {
                                  "type": "string",
                                  "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                  "nullable": true
                                },
                                "fare_basis_code": {
                                  "type": "string",
                                  "description": "Fare basis code.",
                                  "nullable": true
                                },
                                "service_class": {
                                  "type": "string",
                                  "description": "Service class (e.g., first class, business class, etc.).",
                                  "nullable": true
                                },
                                "stop_over_code": {
                                  "type": "string",
                                  "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                  "description": "Indicates whether a stopover is allowed on this ticket.",
                                  "nullable": true,
                                  "x-enum-descriptions": [
                                    "None",
                                    "Stop over allowed",
                                    "Stop over not allowed"
                                  ]
                                },
                                "destination_city_airport_code": {
                                  "type": "string",
                                  "description": "Code for the destination city or airport.",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "flight_number",
                                "carrier_code",
                                "fare_basis_code",
                                "service_class",
                                "stop_over_code",
                                "destination_city_airport_code"
                              ],
                              "x-title-plural": "Trip Legs Elements"
                            },
                            "description": "Fields specific to each leg of the journey.",
                            "nullable": true
                          },
                          "ancillary": {
                            "type": "object",
                            "title": "Ancillary",
                            "description": "Ancillary purchases in addition to the airfare.",
                            "properties": {
                              "ticket_document_number": {
                                "type": "string",
                                "description": "Ticket document number.",
                                "nullable": true
                              },
                              "passenger_name_or_description": {
                                "type": "string",
                                "description": "Name of the passenger or description of the ancillary purchase.",
                                "nullable": true
                              },
                              "connected_ticket_document_number": {
                                "type": "string",
                                "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "other"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Other"
                                ]
                              },
                              "services": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Services Element",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "bundled_service",
                                        "baggage_fee",
                                        "change_fee",
                                        "cargo",
                                        "carbon_offset",
                                        "frequent_flyer",
                                        "gift_card",
                                        "ground_transport",
                                        "in_flight_entertainment",
                                        "lounge",
                                        "medical",
                                        "meal_beverage",
                                        "other",
                                        "passenger_assist_fee",
                                        "pets",
                                        "seat_fees",
                                        "standby",
                                        "service_fee",
                                        "store",
                                        "travel_service",
                                        "unaccompanied_travel",
                                        "upgrades",
                                        "wifi"
                                      ],
                                      "description": "Category of the ancillary service.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Bundled service",
                                        "Baggage fee",
                                        "Change fee",
                                        "Cargo",
                                        "Carbon offset",
                                        "Frequent flyer",
                                        "Gift card",
                                        "Ground transport",
                                        "In-flight entertainment",
                                        "Lounge",
                                        "Medical",
                                        "Meal beverage",
                                        "Other",
                                        "Passenger assist fee",
                                        "Pets",
                                        "Seat fees",
                                        "Standby",
                                        "Service fee",
                                        "Store",
                                        "Travel service",
                                        "Unaccompanied travel",
                                        "Upgrades",
                                        "Wi-fi"
                                      ]
                                    },
                                    "sub_category": {
                                      "type": "string",
                                      "description": "Sub-category of the ancillary service, free-form.",
                                      "nullable": true
                                    }
                                  },
                                  "required": ["category", "sub_category"],
                                  "x-title-plural": "Services Elements"
                                },
                                "description": "Additional travel charges, such as baggage fees."
                              }
                            },
                            "required": [
                              "ticket_document_number",
                              "passenger_name_or_description",
                              "connected_ticket_document_number",
                              "credit_reason_indicator",
                              "services"
                            ],
                            "nullable": true,
                            "x-title-plural": "Ancillaries"
                          }
                        },
                        "required": [
                          "ticket_number",
                          "passenger_name",
                          "departure_date",
                          "origination_city_airport_code",
                          "travel_agency_code",
                          "travel_agency_name",
                          "restricted_ticket_indicator",
                          "computerized_reservation_system",
                          "credit_reason_indicator",
                          "ticket_change_indicator",
                          "trip_legs",
                          "ancillary"
                        ],
                        "nullable": true,
                        "x-title-plural": "Travels"
                      }
                    },
                    "required": [
                      "purchase_identifier",
                      "purchase_identifier_format",
                      "customer_reference_identifier",
                      "local_tax_amount",
                      "local_tax_currency",
                      "national_tax_amount",
                      "national_tax_currency",
                      "car_rental",
                      "lodging",
                      "travel"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Purchase Details"
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction associated with this Transaction."
                  },
                  "network_identifiers": {
                    "type": "object",
                    "title": "Network Identifiers",
                    "description": "Network-specific identifiers for this refund.",
                    "properties": {
                      "transaction_id": {
                        "type": "string",
                        "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                        "nullable": true
                      },
                      "acquirer_reference_number": {
                        "type": "string",
                        "description": "A globally unique identifier for this settlement."
                      },
                      "acquirer_business_id": {
                        "type": "string",
                        "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                      }
                    },
                    "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                    "x-title-plural": "Network Identifiers"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["card_refund"],
                    "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                  }
                },
                "required": [
                  "id",
                  "card_payment_id",
                  "amount",
                  "currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_state",
                  "merchant_country",
                  "merchant_name",
                  "merchant_category_code",
                  "purchase_details",
                  "transaction_id",
                  "network_identifiers",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Card Refunds"
              },
              "card_settlement": {
                "type": "object",
                "title": "Card Settlement",
                "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                "example": {
                  "id": "card_settlement_khv5kfeu0vndj291omg6",
                  "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                  "card_authorization": null,
                  "amount": 100,
                  "currency": "USD",
                  "presentment_amount": 100,
                  "presentment_currency": "USD",
                  "merchant_acceptor_id": "5665270011000168",
                  "merchant_city": "New York",
                  "merchant_state": "NY",
                  "merchant_country": "US",
                  "merchant_name": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "pending_transaction_id": null,
                  "purchase_details": {
                    "purchase_identifier": "10203",
                    "purchase_identifier_format": "order_number",
                    "customer_reference_identifier": "51201",
                    "local_tax_amount": null,
                    "local_tax_currency": "usd",
                    "national_tax_amount": null,
                    "national_tax_currency": "usd",
                    "car_rental": null,
                    "lodging": {
                      "no_show_indicator": "no_show",
                      "extra_charges": "restaurant",
                      "check_in_date": "2023-07-20",
                      "daily_room_rate_amount": 1000,
                      "daily_room_rate_currency": "usd",
                      "total_tax_amount": 100,
                      "total_tax_currency": "usd",
                      "prepaid_expenses_amount": 0,
                      "prepaid_expenses_currency": "usd",
                      "food_beverage_charges_amount": 0,
                      "food_beverage_charges_currency": "usd",
                      "folio_cash_advances_amount": 0,
                      "folio_cash_advances_currency": "usd",
                      "room_nights": 1,
                      "total_room_tax_amount": 100,
                      "total_room_tax_currency": "usd"
                    },
                    "travel": null
                  },
                  "network_identifiers": {
                    "transaction_id": "627199945183184",
                    "acquirer_reference_number": "83163715445437604865089",
                    "acquirer_business_id": "69650702"
                  },
                  "type": "card_settlement"
                },
                "properties": {
                  "id": { "type": "string", "description": "The Card Settlement identifier." },
                  "card_payment_id": {
                    "type": "string",
                    "description": "The ID of the Card Payment this transaction belongs to.",
                    "nullable": true
                  },
                  "card_authorization": {
                    "type": "string",
                    "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                    "nullable": true
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "presentment_amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's presentment currency."
                  },
                  "presentment_currency": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "The state the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in."
                  },
                  "merchant_name": {
                    "type": "string",
                    "description": "The name of the merchant.",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The 4-digit MCC describing the merchant's business."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction associated with this Transaction."
                  },
                  "pending_transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Pending Transaction associated with this Transaction.",
                    "nullable": true
                  },
                  "purchase_details": {
                    "type": "object",
                    "title": "Card Purchase Details",
                    "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                    "example": {
                      "purchase_identifier": "10203",
                      "purchase_identifier_format": "order_number",
                      "customer_reference_identifier": "51201",
                      "local_tax_amount": null,
                      "local_tax_currency": "usd",
                      "national_tax_amount": null,
                      "national_tax_currency": "usd",
                      "car_rental": null,
                      "lodging": {
                        "no_show_indicator": "no_show",
                        "extra_charges": "restaurant",
                        "check_in_date": "2023-07-20",
                        "daily_room_rate_amount": 1000,
                        "daily_room_rate_currency": "usd",
                        "total_tax_amount": 100,
                        "total_tax_currency": "usd",
                        "prepaid_expenses_amount": 0,
                        "prepaid_expenses_currency": "usd",
                        "food_beverage_charges_amount": 0,
                        "food_beverage_charges_currency": "usd",
                        "folio_cash_advances_amount": 0,
                        "folio_cash_advances_currency": "usd",
                        "room_nights": 1,
                        "total_room_tax_amount": 100,
                        "total_room_tax_currency": "usd"
                      },
                      "travel": null
                    },
                    "properties": {
                      "purchase_identifier": {
                        "type": "string",
                        "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                        "nullable": true
                      },
                      "purchase_identifier_format": {
                        "type": "string",
                        "enum": [
                          "free_text",
                          "order_number",
                          "rental_agreement_number",
                          "hotel_folio_number",
                          "invoice_number"
                        ],
                        "description": "The format of the purchase identifier.",
                        "nullable": true,
                        "x-enum-descriptions": [
                          "Free text",
                          "Order number",
                          "Rental agreement number",
                          "Hotel folio number",
                          "Invoice number"
                        ]
                      },
                      "customer_reference_identifier": {
                        "type": "string",
                        "description": "An identifier from the merchant for the customer or consumer.",
                        "nullable": true
                      },
                      "local_tax_amount": {
                        "type": "integer",
                        "description": "The state or provincial tax amount in minor units.",
                        "nullable": true
                      },
                      "local_tax_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                        "nullable": true
                      },
                      "national_tax_amount": {
                        "type": "integer",
                        "description": "The national tax amount in minor units.",
                        "nullable": true
                      },
                      "national_tax_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                        "nullable": true
                      },
                      "car_rental": {
                        "type": "object",
                        "title": "Car Rental",
                        "description": "Fields specific to car rentals.",
                        "properties": {
                          "extra_charges": {
                            "type": "string",
                            "enum": [
                              "no_extra_charge",
                              "gas",
                              "extra_mileage",
                              "late_return",
                              "one_way_service_fee",
                              "parking_violation"
                            ],
                            "description": "Additional charges (gas, late fee, etc.) being billed.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No extra charge",
                              "Gas",
                              "Extra mileage",
                              "Late return",
                              "One way service fee",
                              "Parking violation"
                            ]
                          },
                          "days_rented": {
                            "type": "integer",
                            "description": "Number of days the vehicle was rented.",
                            "nullable": true
                          },
                          "no_show_indicator": {
                            "type": "string",
                            "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                            "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                            "nullable": true,
                            "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                          },
                          "checkout_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                            "nullable": true
                          },
                          "daily_rental_rate_amount": {
                            "type": "integer",
                            "description": "Daily rate being charged for the vehicle.",
                            "nullable": true
                          },
                          "daily_rental_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                            "nullable": true
                          },
                          "weekly_rental_rate_amount": {
                            "type": "integer",
                            "description": "Weekly rate being charged for the vehicle.",
                            "nullable": true
                          },
                          "weekly_rental_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                            "nullable": true
                          },
                          "insurance_charges_amount": {
                            "type": "integer",
                            "description": "Any insurance being charged for the vehicle.",
                            "nullable": true
                          },
                          "insurance_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                            "nullable": true
                          },
                          "fuel_charges_amount": {
                            "type": "integer",
                            "description": "Fuel charges for the vehicle.",
                            "nullable": true
                          },
                          "fuel_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                            "nullable": true
                          },
                          "one_way_drop_off_charges_amount": {
                            "type": "integer",
                            "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                            "nullable": true
                          },
                          "one_way_drop_off_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                            "nullable": true
                          },
                          "car_class_code": {
                            "type": "string",
                            "description": "Code indicating the vehicle's class.",
                            "nullable": true
                          },
                          "renter_name": {
                            "type": "string",
                            "description": "Name of the person renting the vehicle.",
                            "nullable": true
                          }
                        },
                        "required": [
                          "extra_charges",
                          "days_rented",
                          "no_show_indicator",
                          "checkout_date",
                          "daily_rental_rate_amount",
                          "daily_rental_rate_currency",
                          "weekly_rental_rate_amount",
                          "weekly_rental_rate_currency",
                          "insurance_charges_amount",
                          "insurance_charges_currency",
                          "fuel_charges_amount",
                          "fuel_charges_currency",
                          "one_way_drop_off_charges_amount",
                          "one_way_drop_off_charges_currency",
                          "car_class_code",
                          "renter_name"
                        ],
                        "nullable": true,
                        "x-title-plural": "Car Rentals"
                      },
                      "lodging": {
                        "type": "object",
                        "title": "Lodging",
                        "description": "Fields specific to lodging.",
                        "properties": {
                          "no_show_indicator": {
                            "type": "string",
                            "enum": ["not_applicable", "no_show"],
                            "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                            "nullable": true,
                            "x-enum-descriptions": ["Not applicable", "No show"]
                          },
                          "extra_charges": {
                            "type": "string",
                            "enum": [
                              "no_extra_charge",
                              "restaurant",
                              "gift_shop",
                              "mini_bar",
                              "telephone",
                              "other",
                              "laundry"
                            ],
                            "description": "Additional charges (phone, late check-out, etc.) being billed.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No extra charge",
                              "Restaurant",
                              "Gift shop",
                              "Mini bar",
                              "Telephone",
                              "Other",
                              "Laundry"
                            ]
                          },
                          "check_in_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date the customer checked in.",
                            "nullable": true
                          },
                          "daily_room_rate_amount": {
                            "type": "integer",
                            "description": "Daily rate being charged for the room.",
                            "nullable": true
                          },
                          "daily_room_rate_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                            "nullable": true
                          },
                          "total_tax_amount": {
                            "type": "integer",
                            "description": "Total tax being charged for the room.",
                            "nullable": true
                          },
                          "total_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                            "nullable": true
                          },
                          "prepaid_expenses_amount": {
                            "type": "integer",
                            "description": "Prepaid expenses being charged for the room.",
                            "nullable": true
                          },
                          "prepaid_expenses_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                            "nullable": true
                          },
                          "food_beverage_charges_amount": {
                            "type": "integer",
                            "description": "Food and beverage charges for the room.",
                            "nullable": true
                          },
                          "food_beverage_charges_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                            "nullable": true
                          },
                          "folio_cash_advances_amount": {
                            "type": "integer",
                            "description": "Folio cash advances for the room.",
                            "nullable": true
                          },
                          "folio_cash_advances_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                            "nullable": true
                          },
                          "room_nights": {
                            "type": "integer",
                            "description": "Number of nights the room was rented.",
                            "nullable": true
                          },
                          "total_room_tax_amount": {
                            "type": "integer",
                            "description": "Total room tax being charged.",
                            "nullable": true
                          },
                          "total_room_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                            "nullable": true
                          }
                        },
                        "required": [
                          "no_show_indicator",
                          "extra_charges",
                          "check_in_date",
                          "daily_room_rate_amount",
                          "daily_room_rate_currency",
                          "total_tax_amount",
                          "total_tax_currency",
                          "prepaid_expenses_amount",
                          "prepaid_expenses_currency",
                          "food_beverage_charges_amount",
                          "food_beverage_charges_currency",
                          "folio_cash_advances_amount",
                          "folio_cash_advances_currency",
                          "room_nights",
                          "total_room_tax_amount",
                          "total_room_tax_currency"
                        ],
                        "nullable": true,
                        "x-title-plural": "Lodgings"
                      },
                      "travel": {
                        "type": "object",
                        "title": "Travel",
                        "description": "Fields specific to travel.",
                        "properties": {
                          "ticket_number": {
                            "type": "string",
                            "description": "Ticket number.",
                            "nullable": true
                          },
                          "passenger_name": {
                            "type": "string",
                            "description": "Name of the passenger.",
                            "nullable": true
                          },
                          "departure_date": {
                            "type": "string",
                            "format": "date",
                            "description": "Date of departure.",
                            "nullable": true
                          },
                          "origination_city_airport_code": {
                            "type": "string",
                            "description": "Code for the originating city or airport.",
                            "nullable": true
                          },
                          "travel_agency_code": {
                            "type": "string",
                            "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                            "nullable": true
                          },
                          "travel_agency_name": {
                            "type": "string",
                            "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                            "nullable": true
                          },
                          "restricted_ticket_indicator": {
                            "type": "string",
                            "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                            "description": "Indicates whether this ticket is non-refundable.",
                            "nullable": true,
                            "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                          },
                          "computerized_reservation_system": {
                            "type": "string",
                            "description": "Indicates the computerized reservation system used to book the ticket.",
                            "nullable": true
                          },
                          "credit_reason_indicator": {
                            "type": "string",
                            "enum": [
                              "no_credit",
                              "passenger_transport_ancillary_purchase_cancellation",
                              "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                              "airline_ticket_cancellation",
                              "other",
                              "partial_refund_of_airline_ticket"
                            ],
                            "description": "Indicates the reason for a credit to the cardholder.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "No credit",
                              "Passenger transport ancillary purchase cancellation",
                              "Airline ticket and passenger transport ancillary purchase cancellation",
                              "Airline ticket cancellation",
                              "Other",
                              "Partial refund of airline ticket"
                            ]
                          },
                          "ticket_change_indicator": {
                            "type": "string",
                            "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                            "description": "Indicates why a ticket was changed.",
                            "nullable": true,
                            "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                          },
                          "trip_legs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Trip Legs Element",
                              "properties": {
                                "flight_number": {
                                  "type": "string",
                                  "description": "Flight number.",
                                  "nullable": true
                                },
                                "carrier_code": {
                                  "type": "string",
                                  "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                  "nullable": true
                                },
                                "fare_basis_code": {
                                  "type": "string",
                                  "description": "Fare basis code.",
                                  "nullable": true
                                },
                                "service_class": {
                                  "type": "string",
                                  "description": "Service class (e.g., first class, business class, etc.).",
                                  "nullable": true
                                },
                                "stop_over_code": {
                                  "type": "string",
                                  "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                  "description": "Indicates whether a stopover is allowed on this ticket.",
                                  "nullable": true,
                                  "x-enum-descriptions": [
                                    "None",
                                    "Stop over allowed",
                                    "Stop over not allowed"
                                  ]
                                },
                                "destination_city_airport_code": {
                                  "type": "string",
                                  "description": "Code for the destination city or airport.",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "flight_number",
                                "carrier_code",
                                "fare_basis_code",
                                "service_class",
                                "stop_over_code",
                                "destination_city_airport_code"
                              ],
                              "x-title-plural": "Trip Legs Elements"
                            },
                            "description": "Fields specific to each leg of the journey.",
                            "nullable": true
                          },
                          "ancillary": {
                            "type": "object",
                            "title": "Ancillary",
                            "description": "Ancillary purchases in addition to the airfare.",
                            "properties": {
                              "ticket_document_number": {
                                "type": "string",
                                "description": "Ticket document number.",
                                "nullable": true
                              },
                              "passenger_name_or_description": {
                                "type": "string",
                                "description": "Name of the passenger or description of the ancillary purchase.",
                                "nullable": true
                              },
                              "connected_ticket_document_number": {
                                "type": "string",
                                "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "other"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Other"
                                ]
                              },
                              "services": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Services Element",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "bundled_service",
                                        "baggage_fee",
                                        "change_fee",
                                        "cargo",
                                        "carbon_offset",
                                        "frequent_flyer",
                                        "gift_card",
                                        "ground_transport",
                                        "in_flight_entertainment",
                                        "lounge",
                                        "medical",
                                        "meal_beverage",
                                        "other",
                                        "passenger_assist_fee",
                                        "pets",
                                        "seat_fees",
                                        "standby",
                                        "service_fee",
                                        "store",
                                        "travel_service",
                                        "unaccompanied_travel",
                                        "upgrades",
                                        "wifi"
                                      ],
                                      "description": "Category of the ancillary service.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Bundled service",
                                        "Baggage fee",
                                        "Change fee",
                                        "Cargo",
                                        "Carbon offset",
                                        "Frequent flyer",
                                        "Gift card",
                                        "Ground transport",
                                        "In-flight entertainment",
                                        "Lounge",
                                        "Medical",
                                        "Meal beverage",
                                        "Other",
                                        "Passenger assist fee",
                                        "Pets",
                                        "Seat fees",
                                        "Standby",
                                        "Service fee",
                                        "Store",
                                        "Travel service",
                                        "Unaccompanied travel",
                                        "Upgrades",
                                        "Wi-fi"
                                      ]
                                    },
                                    "sub_category": {
                                      "type": "string",
                                      "description": "Sub-category of the ancillary service, free-form.",
                                      "nullable": true
                                    }
                                  },
                                  "required": ["category", "sub_category"],
                                  "x-title-plural": "Services Elements"
                                },
                                "description": "Additional travel charges, such as baggage fees."
                              }
                            },
                            "required": [
                              "ticket_document_number",
                              "passenger_name_or_description",
                              "connected_ticket_document_number",
                              "credit_reason_indicator",
                              "services"
                            ],
                            "nullable": true,
                            "x-title-plural": "Ancillaries"
                          }
                        },
                        "required": [
                          "ticket_number",
                          "passenger_name",
                          "departure_date",
                          "origination_city_airport_code",
                          "travel_agency_code",
                          "travel_agency_name",
                          "restricted_ticket_indicator",
                          "computerized_reservation_system",
                          "credit_reason_indicator",
                          "ticket_change_indicator",
                          "trip_legs",
                          "ancillary"
                        ],
                        "nullable": true,
                        "x-title-plural": "Travels"
                      }
                    },
                    "required": [
                      "purchase_identifier",
                      "purchase_identifier_format",
                      "customer_reference_identifier",
                      "local_tax_amount",
                      "local_tax_currency",
                      "national_tax_amount",
                      "national_tax_currency",
                      "car_rental",
                      "lodging",
                      "travel"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Purchase Details"
                  },
                  "network_identifiers": {
                    "type": "object",
                    "title": "Network Identifiers",
                    "description": "Network-specific identifiers for this refund.",
                    "properties": {
                      "transaction_id": {
                        "type": "string",
                        "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                        "nullable": true
                      },
                      "acquirer_reference_number": {
                        "type": "string",
                        "description": "A globally unique identifier for this settlement."
                      },
                      "acquirer_business_id": {
                        "type": "string",
                        "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                      }
                    },
                    "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                    "x-title-plural": "Network Identifiers"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["card_settlement"],
                    "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                  }
                },
                "required": [
                  "id",
                  "card_payment_id",
                  "card_authorization",
                  "amount",
                  "currency",
                  "presentment_amount",
                  "presentment_currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_state",
                  "merchant_country",
                  "merchant_name",
                  "merchant_category_code",
                  "transaction_id",
                  "pending_transaction_id",
                  "purchase_details",
                  "network_identifiers",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Card Settlements"
              },
              "card_revenue_payment": {
                "type": "object",
                "title": "Card Revenue Payment",
                "description": "A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "period_start": "2023-12-01T00:00:00Z",
                  "period_end": "2023-12-31T23:59:59Z",
                  "transacted_on_account_id": "account_in71c4amph0vgo2qllky"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "period_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start of the period for which this transaction paid interest."
                  },
                  "period_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end of the period for which this transaction paid interest."
                  },
                  "transacted_on_account_id": {
                    "type": "string",
                    "description": "The account the card belonged to.",
                    "nullable": true
                  }
                },
                "required": ["amount", "currency", "period_start", "period_end", "transacted_on_account_id"],
                "nullable": true,
                "x-title-plural": "Card Revenue Payments"
              },
              "check_deposit_acceptance": {
                "type": "object",
                "title": "Check Deposit Acceptance",
                "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "auxiliary_on_us": "101",
                  "serial_number": null,
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The account number printed on the check."
                  },
                  "routing_number": {
                    "type": "string",
                    "description": "The routing number printed on the check."
                  },
                  "auxiliary_on_us": {
                    "type": "string",
                    "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable": true
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable": true
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The ID of the Check Deposit that was accepted."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "account_number",
                  "routing_number",
                  "auxiliary_on_us",
                  "serial_number",
                  "check_deposit_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Acceptances"
              },
              "check_deposit_return": {
                "type": "object",
                "title": "Check Deposit Return",
                "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                "example": {
                  "amount": 100,
                  "returned_at": "2020-01-31T23:59:59Z",
                  "currency": "USD",
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "return_reason": "insufficient_funds"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "returned_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The identifier of the Check Deposit that was returned."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the transaction that reversed the original check deposit transaction."
                  },
                  "return_reason": {
                    "type": "string",
                    "enum": [
                      "ach_conversion_not_supported",
                      "closed_account",
                      "duplicate_submission",
                      "insufficient_funds",
                      "no_account",
                      "not_authorized",
                      "stale_dated",
                      "stop_payment",
                      "unknown_reason",
                      "unmatched_details",
                      "unreadable_image",
                      "endorsement_irregular",
                      "altered_or_fictitious_item",
                      "frozen_or_blocked_account",
                      "post_dated",
                      "endorsement_missing",
                      "signature_missing",
                      "stop_payment_suspect",
                      "unusable_image",
                      "image_fails_security_check",
                      "cannot_determine_amount",
                      "signature_irregular",
                      "non_cash_item",
                      "unable_to_process",
                      "item_exceeds_dollar_limit",
                      "branch_or_account_sold"
                    ],
                    "description": "Why this check was returned by the bank holding the account it was drawn against.",
                    "x-enum-descriptions": [
                      "The check doesn't allow ACH conversion.",
                      "The account is closed.",
                      "The check has already been deposited.",
                      "Insufficient funds",
                      "No account was found matching the check details.",
                      "The check was not authorized.",
                      "The check is too old.",
                      "The payment has been stopped by the account holder.",
                      "The reason for the return is unknown.",
                      "The image doesn't match the details submitted.",
                      "The image could not be read.",
                      "The check endorsement was irregular.",
                      "The check present was either altered or fake.",
                      "The account this check is drawn on is frozen.",
                      "The check is post dated.",
                      "The endorsement was missing.",
                      "The check signature was missing.",
                      "The bank suspects a stop payment will be placed.",
                      "The bank cannot read the image.",
                      "The check image fails the bank's security check.",
                      "The bank cannot determine the amount.",
                      "The signature is inconsistent with prior signatures.",
                      "The check is a non-cash item and cannot be drawn against the account.",
                      "The bank is unable to process this check.",
                      "The check exceeds the bank or customer's limit.",
                      "The bank sold this account and no longer services this customer."
                    ]
                  }
                },
                "required": [
                  "amount",
                  "returned_at",
                  "currency",
                  "check_deposit_id",
                  "transaction_id",
                  "return_reason"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Returns"
              },
              "check_transfer_deposit": {
                "type": "object",
                "title": "Check Transfer Deposit",
                "description": "A Check Transfer Deposit object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_deposit`.",
                "example": {
                  "deposited_at": "2020-01-31T23:59:59Z",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "bank_of_first_deposit_routing_number": null,
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                  "type": "check_transfer_deposit"
                },
                "properties": {
                  "deposited_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the check was deposited."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction object created when the check was deposited.",
                    "nullable": true
                  },
                  "front_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                    "nullable": true
                  },
                  "back_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                    "nullable": true
                  },
                  "bank_of_first_deposit_routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                    "nullable": true
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer object that was deposited."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["check_transfer_deposit"],
                    "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
                  }
                },
                "required": [
                  "deposited_at",
                  "transaction_id",
                  "front_image_file_id",
                  "back_image_file_id",
                  "bank_of_first_deposit_routing_number",
                  "transfer_id",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Deposits"
              },
              "check_transfer_intention": {
                "type": "object",
                "title": "Check Transfer Intention",
                "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                "example": {
                  "address_line1": "33 Liberty Street",
                  "address_line2": null,
                  "address_city": "New York",
                  "address_state": "NY",
                  "address_zip": "10045",
                  "amount": 1000,
                  "currency": "USD",
                  "recipient_name": "Ian Crease",
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                },
                "properties": {
                  "address_line1": {
                    "type": "string",
                    "description": "The street address of the check's destination.",
                    "nullable": true
                  },
                  "address_line2": {
                    "type": "string",
                    "description": "The second line of the address of the check's destination.",
                    "nullable": true
                  },
                  "address_city": {
                    "type": "string",
                    "description": "The city of the check's destination.",
                    "nullable": true
                  },
                  "address_state": {
                    "type": "string",
                    "description": "The state of the check's destination.",
                    "nullable": true
                  },
                  "address_zip": {
                    "type": "string",
                    "description": "The postal code of the check's destination.",
                    "nullable": true
                  },
                  "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "recipient_name": {
                    "type": "string",
                    "description": "The name that will be printed on the check.",
                    "nullable": true
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer with which this is associated."
                  }
                },
                "required": [
                  "address_line1",
                  "address_line2",
                  "address_city",
                  "address_state",
                  "address_zip",
                  "amount",
                  "currency",
                  "recipient_name",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Intentions"
              },
              "check_transfer_stop_payment_request": {
                "type": "object",
                "title": "Check Transfer Stop Payment Request",
                "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                "example": {
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                  "reason": "mail_delivery_failed",
                  "requested_at": "2020-01-31T23:59:59Z",
                  "type": "check_transfer_stop_payment_request"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The ID of the check transfer that was stopped."
                  },
                  "reason": {
                    "type": "string",
                    "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                    "description": "The reason why this transfer was stopped.",
                    "x-enum-descriptions": [
                      "The check could not be delivered.",
                      "The check was canceled by an Increase operator who will provide details out-of-band.",
                      "The check was stopped for another reason."
                    ]
                  },
                  "requested_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the stop-payment was requested."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["check_transfer_stop_payment_request"],
                    "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                  }
                },
                "required": ["transfer_id", "reason", "requested_at", "type"],
                "nullable": true,
                "x-title-plural": "Check Transfer Stop Payment Requests"
              },
              "fee_payment": {
                "type": "object",
                "title": "Fee Payment",
                "description": "A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "fee_statement_id": "fee_statement_lz33v0d7pnxwkptrdwq4",
                  "fee_period_start": "2023-05-01"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "fee_period_start": {
                    "type": "string",
                    "format": "date",
                    "description": "The start of this payment's fee period, usually the first day of a month."
                  }
                },
                "required": ["amount", "currency", "fee_period_start"],
                "nullable": true,
                "x-title-plural": "Fee Payments"
              },
              "inbound_ach_transfer": {
                "type": "object",
                "title": "Inbound ACH Transfer Intention",
                "description": "An Inbound ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                "example": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022",
                  "transfer_id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "originator_company_name": {
                    "type": "string",
                    "description": "A name set by the originator to identify themselves."
                  },
                  "originator_company_descriptive_date": {
                    "type": "string",
                    "description": "The description of the date of the transfer, usually in the format `YYMMDD`.",
                    "nullable": true
                  },
                  "originator_company_discretionary_data": {
                    "type": "string",
                    "description": "Data set by the originator.",
                    "nullable": true
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": "An informational description of the transfer."
                  },
                  "originator_company_id": {
                    "type": "string",
                    "description": "An identifier for the originating company. This is generally, but not always, a stable identifier across multiple transfers."
                  },
                  "receiver_id_number": {
                    "type": "string",
                    "description": "The originator's identifier for the transfer receipient.",
                    "nullable": true
                  },
                  "receiver_name": {
                    "type": "string",
                    "description": "The name of the transfer recipient. This value is informational and not verified by Increase.",
                    "nullable": true
                  },
                  "trace_number": {
                    "type": "string",
                    "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                  },
                  "transfer_id": { "type": "string", "description": "The inbound ach transfer's identifier." }
                },
                "required": [
                  "amount",
                  "originator_company_name",
                  "originator_company_descriptive_date",
                  "originator_company_discretionary_data",
                  "originator_company_entry_description",
                  "originator_company_id",
                  "receiver_id_number",
                  "receiver_name",
                  "trace_number",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Inbound ACH Transfer Intentions"
              },
              "inbound_check": {
                "type": "object",
                "title": "Inbound Check",
                "description": "An Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "check_number": "       00000123",
                  "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "bank_of_first_deposit_routing_number": "101050001"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "check_number": {
                    "type": "string",
                    "description": "The number of the check. This field is set by the depositing bank and can be unreliable.",
                    "nullable": true
                  },
                  "check_front_image_file_id": {
                    "type": "string",
                    "description": "The front image of the check. This is a black and white TIFF image file.",
                    "nullable": true
                  },
                  "check_rear_image_file_id": {
                    "type": "string",
                    "description": "The rear image of the check. This is a black and white TIFF image file.",
                    "nullable": true
                  },
                  "bank_of_first_deposit_routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "check_number",
                  "check_front_image_file_id",
                  "check_rear_image_file_id",
                  "bank_of_first_deposit_routing_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Checks"
              },
              "inbound_international_ach_transfer": {
                "type": "object",
                "title": "Inbound International ACH Transfer",
                "description": "An Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                "example": {
                  "amount": -1000,
                  "foreign_exchange_indicator": "fixed_to_fixed",
                  "foreign_exchange_reference_indicator": "blank",
                  "foreign_exchange_reference": null,
                  "destination_country_code": "US",
                  "destination_currency_code": "USD",
                  "foreign_payment_amount": 199,
                  "foreign_trace_number": null,
                  "international_transaction_type_code": "internet_initiated",
                  "originating_currency_code": "USD",
                  "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                  "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "originating_depository_financial_institution_id": "091000019",
                  "originating_depository_financial_institution_branch_country": "US",
                  "originator_company_entry_description": "RETRY PYMT",
                  "originator_name": "BERGHAIN",
                  "originator_street_address": "Ruedersdorferstr. 7",
                  "originator_city": "BERLIN",
                  "originator_state_or_province": null,
                  "originator_postal_code": "50825",
                  "originator_country": "DE",
                  "originator_identification": "770510487A",
                  "payment_related_information": null,
                  "payment_related_information2": null,
                  "receiver_identification_number": "1018790279274",
                  "receiver_street_address": "123 FAKE ST",
                  "receiver_city": "BEVERLY HILLS",
                  "receiver_state_or_province": "CA",
                  "receiver_country": "US",
                  "receiver_postal_code": "90210",
                  "receiving_company_or_individual_name": "IAN CREASE",
                  "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                  "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "receiving_depository_financial_institution_id": "101050001",
                  "receiving_depository_financial_institution_country": "US",
                  "trace_number": "010202909100090"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "foreign_exchange_indicator": {
                    "type": "string",
                    "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                    "description": "A description of how the foreign exchange rate was calculated.",
                    "x-enum-descriptions": [
                      "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                      "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                      "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                    ]
                  },
                  "foreign_exchange_reference_indicator": {
                    "type": "string",
                    "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                    "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                    "x-enum-descriptions": [
                      "The ACH file contains a foreign exchange rate.",
                      "The ACH file contains a reference to a well-known foreign exchange rate.",
                      "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                    ]
                  },
                  "foreign_exchange_reference": {
                    "type": "string",
                    "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                    "nullable": true
                  },
                  "destination_country_code": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                  },
                  "destination_currency_code": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                  },
                  "foreign_payment_amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                  },
                  "foreign_trace_number": {
                    "type": "string",
                    "description": "A reference number in the foreign banking infrastructure.",
                    "nullable": true
                  },
                  "international_transaction_type_code": {
                    "type": "string",
                    "enum": [
                      "annuity",
                      "business_or_commercial",
                      "deposit",
                      "loan",
                      "miscellaneous",
                      "mortgage",
                      "pension",
                      "remittance",
                      "rent_or_lease",
                      "salary_or_payroll",
                      "tax",
                      "accounts_receivable",
                      "back_office_conversion",
                      "machine_transfer",
                      "point_of_purchase",
                      "point_of_sale",
                      "represented_check",
                      "shared_network_transaction",
                      "telphone_initiated",
                      "internet_initiated"
                    ],
                    "description": "The type of transfer. Set by the originator.",
                    "x-enum-descriptions": [
                      "Sent as `ANN` in the Nacha file.",
                      "Sent as `BUS` in the Nacha file.",
                      "Sent as `DEP` in the Nacha file.",
                      "Sent as `LOA` in the Nacha file.",
                      "Sent as `MIS` in the Nacha file.",
                      "Sent as `MOR` in the Nacha file.",
                      "Sent as `PEN` in the Nacha file.",
                      "Sent as `REM` in the Nacha file.",
                      "Sent as `RLS` in the Nacha file.",
                      "Sent as `SAL` in the Nacha file.",
                      "Sent as `TAX` in the Nacha file.",
                      "Sent as `ARC` in the Nacha file.",
                      "Sent as `BOC` in the Nacha file.",
                      "Sent as `MTE` in the Nacha file.",
                      "Sent as `POP` in the Nacha file.",
                      "Sent as `POS` in the Nacha file.",
                      "Sent as `RCK` in the Nacha file.",
                      "Sent as `SHR` in the Nacha file.",
                      "Sent as `TEL` in the Nacha file.",
                      "Sent as `WEB` in the Nacha file."
                    ]
                  },
                  "originating_currency_code": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                  },
                  "originating_depository_financial_institution_name": {
                    "type": "string",
                    "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                  },
                  "originating_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "enum": ["national_clearing_system_number", "bic_code", "iban"],
                    "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                    "x-enum-descriptions": [
                      "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                      "The SWIFT Bank Identifier Code (BIC) of the bank.",
                      "An International Bank Account Number."
                    ]
                  },
                  "originating_depository_financial_institution_id": {
                    "type": "string",
                    "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                  },
                  "originating_depository_financial_institution_branch_country": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": "A description field set by the originator."
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "Either the name of the originator or an intermediary money transmitter."
                  },
                  "originator_street_address": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete."
                  },
                  "originator_city": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete."
                  },
                  "originator_state_or_province": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete.",
                    "nullable": true
                  },
                  "originator_postal_code": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete.",
                    "nullable": true
                  },
                  "originator_country": {
                    "type": "string",
                    "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                  },
                  "originator_identification": {
                    "type": "string",
                    "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                  },
                  "payment_related_information": {
                    "type": "string",
                    "description": "A description field set by the originator.",
                    "nullable": true
                  },
                  "payment_related_information2": {
                    "type": "string",
                    "description": "A description field set by the originator.",
                    "nullable": true
                  },
                  "receiver_identification_number": {
                    "type": "string",
                    "description": "An identification number the originator uses for the receiver.",
                    "nullable": true
                  },
                  "receiver_street_address": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete."
                  },
                  "receiver_city": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete."
                  },
                  "receiver_state_or_province": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete.",
                    "nullable": true
                  },
                  "receiver_country": {
                    "type": "string",
                    "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                  },
                  "receiver_postal_code": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete.",
                    "nullable": true
                  },
                  "receiving_company_or_individual_name": {
                    "type": "string",
                    "description": "The name of the receiver of the transfer. This is not verified by Increase."
                  },
                  "receiving_depository_financial_institution_name": {
                    "type": "string",
                    "description": "The name of the receiving bank, as set by the sending financial institution."
                  },
                  "receiving_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "enum": ["national_clearing_system_number", "bic_code", "iban"],
                    "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                    "x-enum-descriptions": [
                      "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                      "The SWIFT Bank Identifier Code (BIC) of the bank.",
                      "An International Bank Account Number."
                    ]
                  },
                  "receiving_depository_financial_institution_id": {
                    "type": "string",
                    "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                  },
                  "receiving_depository_financial_institution_country": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                  },
                  "trace_number": {
                    "type": "string",
                    "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                  }
                },
                "required": [
                  "amount",
                  "foreign_exchange_indicator",
                  "foreign_exchange_reference_indicator",
                  "foreign_exchange_reference",
                  "destination_country_code",
                  "destination_currency_code",
                  "foreign_payment_amount",
                  "foreign_trace_number",
                  "international_transaction_type_code",
                  "originating_currency_code",
                  "originating_depository_financial_institution_name",
                  "originating_depository_financial_institution_id_qualifier",
                  "originating_depository_financial_institution_id",
                  "originating_depository_financial_institution_branch_country",
                  "originator_company_entry_description",
                  "originator_name",
                  "originator_street_address",
                  "originator_city",
                  "originator_state_or_province",
                  "originator_postal_code",
                  "originator_country",
                  "originator_identification",
                  "payment_related_information",
                  "payment_related_information2",
                  "receiver_identification_number",
                  "receiver_street_address",
                  "receiver_city",
                  "receiver_state_or_province",
                  "receiver_country",
                  "receiver_postal_code",
                  "receiving_company_or_individual_name",
                  "receiving_depository_financial_institution_name",
                  "receiving_depository_financial_institution_id_qualifier",
                  "receiving_depository_financial_institution_id",
                  "receiving_depository_financial_institution_country",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound International ACH Transfers"
              },
              "inbound_real_time_payments_transfer_confirmation": {
                "type": "object",
                "title": "Inbound Real-Time Payments Transfer Confirmation",
                "description": "An Inbound Real-Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "creditor_name": "Ian Crease",
                  "debtor_name": "National Phonograph Company",
                  "debtor_account_number": "987654321",
                  "debtor_routing_number": "101050001",
                  "transaction_identification": "20220501234567891T1BSLZO01745013025",
                  "remittance_information": "Invoice 29582"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "creditor_name": {
                    "type": "string",
                    "description": "The name the sender of the transfer specified as the recipient of the transfer."
                  },
                  "debtor_name": {
                    "type": "string",
                    "description": "The name provided by the sender of the transfer."
                  },
                  "debtor_account_number": {
                    "type": "string",
                    "description": "The account number of the account that sent the transfer."
                  },
                  "debtor_routing_number": {
                    "type": "string",
                    "description": "The routing number of the account that sent the transfer."
                  },
                  "transaction_identification": {
                    "type": "string",
                    "description": "The Real-Time Payments network identification of the transfer."
                  },
                  "remittance_information": {
                    "type": "string",
                    "description": "Additional information included with the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "creditor_name",
                  "debtor_name",
                  "debtor_account_number",
                  "debtor_routing_number",
                  "transaction_identification",
                  "remittance_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Real-Time Payments Transfer Confirmations"
              },
              "inbound_wire_drawdown_payment_reversal": {
                "type": "object",
                "title": "Inbound Wire Drawdown Payment Reversal",
                "description": "An Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                "example": {
                  "amount": 12345,
                  "description": "Inbound wire reversal 2022021100335128",
                  "input_cycle_date": "2022-02-11",
                  "input_sequence_number": "11023",
                  "input_source": "B6B7HU2R",
                  "input_message_accountability_data": "20220211B6B7HU2R011023",
                  "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                  "previous_message_input_cycle_date": "2022-02-10",
                  "previous_message_input_sequence_number": "3",
                  "previous_message_input_source": "MMQFMP0P",
                  "originator_routing_number": null
                },
                "properties": {
                  "amount": { "type": "integer", "description": "The amount that was reversed." },
                  "description": {
                    "type": "string",
                    "description": "The description on the reversal message from Fedwire."
                  },
                  "input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire reversal."
                  },
                  "input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number."
                  },
                  "input_source": { "type": "string", "description": "The Fedwire input source identifier." },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier."
                  },
                  "previous_message_input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                  },
                  "previous_message_input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire transfer that was reversed."
                  },
                  "previous_message_input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number for the wire transfer that was reversed."
                  },
                  "previous_message_input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                  },
                  "originator_routing_number": {
                    "type": "string",
                    "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "description",
                  "input_cycle_date",
                  "input_sequence_number",
                  "input_source",
                  "input_message_accountability_data",
                  "previous_message_input_message_accountability_data",
                  "previous_message_input_cycle_date",
                  "previous_message_input_sequence_number",
                  "previous_message_input_source",
                  "originator_routing_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
              },
              "inbound_wire_drawdown_payment": {
                "type": "object",
                "title": "Inbound Wire Drawdown Payment",
                "description": "An Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                "example": {
                  "amount": 100,
                  "beneficiary_address_line1": null,
                  "beneficiary_address_line2": null,
                  "beneficiary_address_line3": null,
                  "beneficiary_name": null,
                  "beneficiary_reference": null,
                  "description": "Inbound wire drawdown payment",
                  "input_message_accountability_data": null,
                  "originator_address_line1": null,
                  "originator_address_line2": null,
                  "originator_address_line3": null,
                  "originator_name": null,
                  "originator_routing_number": null,
                  "originator_to_beneficiary_information_line1": null,
                  "originator_to_beneficiary_information_line2": null,
                  "originator_to_beneficiary_information_line3": null,
                  "originator_to_beneficiary_information_line4": null,
                  "originator_to_beneficiary_information": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "beneficiary_address_line1": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line2": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line3": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_name": {
                    "type": "string",
                    "description": "A name set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_reference": {
                    "type": "string",
                    "description": "A free-form reference string set by the sender, to help identify the transfer.",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": "An Increase-constructed description of the transfer."
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the receiving bank.",
                    "nullable": true
                  },
                  "originator_address_line1": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line2": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line3": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "The originator of the wire, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_routing_number": {
                    "type": "string",
                    "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line1": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line2": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line3": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line4": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information": {
                    "type": "string",
                    "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "beneficiary_address_line1",
                  "beneficiary_address_line2",
                  "beneficiary_address_line3",
                  "beneficiary_name",
                  "beneficiary_reference",
                  "description",
                  "input_message_accountability_data",
                  "originator_address_line1",
                  "originator_address_line2",
                  "originator_address_line3",
                  "originator_name",
                  "originator_routing_number",
                  "originator_to_beneficiary_information_line1",
                  "originator_to_beneficiary_information_line2",
                  "originator_to_beneficiary_information_line3",
                  "originator_to_beneficiary_information_line4",
                  "originator_to_beneficiary_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Drawdown Payments"
              },
              "inbound_wire_reversal": {
                "type": "object",
                "title": "Inbound Wire Reversal",
                "description": "An Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                "example": {
                  "amount": 12345,
                  "created_at": "2020-01-31T23:59:59Z",
                  "description": "Inbound wire reversal 2022021100335128",
                  "input_cycle_date": "2022-02-11",
                  "input_sequence_number": "11023",
                  "input_source": "B6B7HU2R",
                  "input_message_accountability_data": "20220211B6B7HU2R011023",
                  "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                  "previous_message_input_cycle_date": "2022-02-10",
                  "previous_message_input_sequence_number": "3",
                  "previous_message_input_source": "MMQFMP0P",
                  "receiver_financial_institution_information": null,
                  "financial_institution_to_financial_institution_information": null,
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
                  "originator_routing_number": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount that was reversed in USD cents."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description on the reversal message from Fedwire, set by the reversing bank."
                  },
                  "input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
                  },
                  "input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number."
                  },
                  "input_source": { "type": "string", "description": "The Fedwire input source identifier." },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier."
                  },
                  "previous_message_input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                  },
                  "previous_message_input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
                  },
                  "previous_message_input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number for the wire transfer that was reversed."
                  },
                  "previous_message_input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                  },
                  "receiver_financial_institution_information": {
                    "type": "string",
                    "description": "Information included in the wire reversal for the receiving financial institution.",
                    "nullable": true
                  },
                  "financial_institution_to_financial_institution_information": {
                    "type": "string",
                    "description": "Additional financial institution information included in the wire reversal.",
                    "nullable": true
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The ID for the Transaction associated with the transfer reversal."
                  },
                  "wire_transfer_id": {
                    "type": "string",
                    "description": "The ID for the Wire Transfer that is being reversed."
                  },
                  "originator_routing_number": {
                    "type": "string",
                    "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "created_at",
                  "description",
                  "input_cycle_date",
                  "input_sequence_number",
                  "input_source",
                  "input_message_accountability_data",
                  "previous_message_input_message_accountability_data",
                  "previous_message_input_cycle_date",
                  "previous_message_input_sequence_number",
                  "previous_message_input_source",
                  "receiver_financial_institution_information",
                  "financial_institution_to_financial_institution_information",
                  "transaction_id",
                  "wire_transfer_id",
                  "originator_routing_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Reversals"
              },
              "inbound_wire_transfer": {
                "type": "object",
                "title": "Inbound Wire Transfer",
                "description": "An Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                "example": {
                  "amount": 100,
                  "beneficiary_address_line1": null,
                  "beneficiary_address_line2": null,
                  "beneficiary_address_line3": null,
                  "beneficiary_name": null,
                  "beneficiary_reference": null,
                  "description": "Inbound wire transfer",
                  "input_message_accountability_data": null,
                  "originator_address_line1": null,
                  "originator_address_line2": null,
                  "originator_address_line3": null,
                  "originator_name": null,
                  "originator_routing_number": null,
                  "originator_to_beneficiary_information_line1": null,
                  "originator_to_beneficiary_information_line2": null,
                  "originator_to_beneficiary_information_line3": null,
                  "originator_to_beneficiary_information_line4": null,
                  "originator_to_beneficiary_information": null
                },
                "properties": {
                  "amount": { "type": "integer", "description": "The amount in USD cents." },
                  "beneficiary_address_line1": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line2": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line3": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_name": {
                    "type": "string",
                    "description": "A name set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_reference": {
                    "type": "string",
                    "description": "A free-form reference string set by the sender, to help identify the transfer.",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": "An Increase-constructed description of the transfer."
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                    "nullable": true
                  },
                  "originator_address_line1": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line2": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line3": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "The originator of the wire, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_routing_number": {
                    "type": "string",
                    "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line1": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line2": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line3": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line4": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information": {
                    "type": "string",
                    "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "beneficiary_address_line1",
                  "beneficiary_address_line2",
                  "beneficiary_address_line3",
                  "beneficiary_name",
                  "beneficiary_reference",
                  "description",
                  "input_message_accountability_data",
                  "originator_address_line1",
                  "originator_address_line2",
                  "originator_address_line3",
                  "originator_name",
                  "originator_routing_number",
                  "originator_to_beneficiary_information_line1",
                  "originator_to_beneficiary_information_line2",
                  "originator_to_beneficiary_information_line3",
                  "originator_to_beneficiary_information_line4",
                  "originator_to_beneficiary_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Transfers"
              },
              "interest_payment": {
                "type": "object",
                "title": "Interest Payment",
                "description": "An Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "period_start": "2023-12-01T00:00:00Z",
                  "period_end": "2023-12-31T23:59:59Z",
                  "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "period_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start of the period for which this transaction paid interest."
                  },
                  "period_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end of the period for which this transaction paid interest."
                  },
                  "accrued_on_account_id": {
                    "type": "string",
                    "description": "The account on which the interest was accrued.",
                    "nullable": true
                  }
                },
                "required": ["amount", "currency", "period_start", "period_end", "accrued_on_account_id"],
                "nullable": true,
                "x-title-plural": "Interest Payments"
              },
              "internal_source": {
                "type": "object",
                "title": "Internal Source",
                "description": "An Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                "example": { "amount": 100, "currency": "USD", "reason": "sample_funds" },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "account_closure",
                      "bank_migration",
                      "cashback",
                      "check_adjustment",
                      "collection_receivable",
                      "empyreal_adjustment",
                      "error",
                      "error_correction",
                      "fees",
                      "interest",
                      "negative_balance_forgiveness",
                      "sample_funds",
                      "sample_funds_return"
                    ],
                    "description": "An Internal Source is a transaction between you and Increase. This describes the reason for the transaction.",
                    "x-enum-descriptions": [
                      "Account closure",
                      "Bank migration",
                      "Cashback",
                      "Check adjustment",
                      "Collection receivable",
                      "Empyreal adjustment",
                      "Error",
                      "Error correction",
                      "Fees",
                      "Interest",
                      "Negative balance forgiveness",
                      "Sample funds",
                      "Sample funds return"
                    ]
                  }
                },
                "required": ["amount", "currency", "reason"],
                "nullable": true,
                "x-title-plural": "Internal Sources"
              },
              "real_time_payments_transfer_acknowledgement": {
                "type": "object",
                "title": "Real-Time Payments Transfer Acknowledgement",
                "description": "A Real-Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.",
                "example": {
                  "amount": 100,
                  "destination_account_number": "987654321",
                  "destination_routing_number": "101050001",
                  "remittance_information": "Invoice 29582",
                  "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                },
                "properties": {
                  "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                  "destination_account_number": {
                    "type": "string",
                    "description": "The destination account number."
                  },
                  "destination_routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                  },
                  "remittance_information": {
                    "type": "string",
                    "description": "Unstructured information that will show on the recipient's bank statement."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Payments Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "amount",
                  "destination_account_number",
                  "destination_routing_number",
                  "remittance_information",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Real-Time Payments Transfer Acknowledgements"
              },
              "sample_funds": {
                "type": "object",
                "title": "Sample Funds",
                "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                "example": { "originator": "dashboard" },
                "properties": {
                  "originator": { "type": "string", "description": "Where the sample funds came from." }
                },
                "required": ["originator"],
                "nullable": true,
                "x-title-plural": "Sample Funds"
              },
              "wire_transfer_intention": {
                "type": "object",
                "title": "Wire Transfer Intention",
                "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO",
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                  "account_number": { "type": "string", "description": "The destination account number." },
                  "routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": "The message that will show on the recipient's bank statement."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Wire Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Transfer Intentions"
              },
              "wire_transfer_rejection": {
                "type": "object",
                "title": "Wire Transfer Rejection",
                "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                "example": { "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u" },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Wire Transfer that led to this Transaction."
                  }
                },
                "required": ["transfer_id"],
                "nullable": true,
                "x-title-plural": "Wire Transfer Rejections"
              }
            },
            "required": [
              "category",
              "account_transfer_intention",
              "ach_transfer_intention",
              "ach_transfer_rejection",
              "ach_transfer_return",
              "card_dispute_acceptance",
              "card_refund",
              "card_settlement",
              "card_revenue_payment",
              "check_deposit_acceptance",
              "check_deposit_return",
              "check_transfer_deposit",
              "check_transfer_intention",
              "check_transfer_stop_payment_request",
              "fee_payment",
              "inbound_ach_transfer",
              "inbound_check",
              "inbound_international_ach_transfer",
              "inbound_real_time_payments_transfer_confirmation",
              "inbound_wire_drawdown_payment_reversal",
              "inbound_wire_drawdown_payment",
              "inbound_wire_reversal",
              "inbound_wire_transfer",
              "interest_payment",
              "internal_source",
              "real_time_payments_transfer_acknowledgement",
              "sample_funds",
              "wire_transfer_intention",
              "wire_transfer_rejection"
            ],
            "x-title-plural": "Transaction Sources"
          },
          "type": {
            "type": "string",
            "enum": ["transaction"],
            "description": "A constant representing the object's type. For this resource it will always be `transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "type"
        ],
        "x-title-plural": "Transactions",
        "x-tag": "Transactions"
      },
      "pending_transaction_list": {
        "type": "object",
        "title": "Pending Transaction List",
        "description": "A list of Pending Transaction objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/pending_transaction" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Pending Transaction Lists"
      },
      "pending_transaction": {
        "type": "object",
        "title": "Pending Transaction",
        "description": "Pending Transactions are potential future additions and removals of money from your bank account.",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this Pending Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transaction's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction was completed.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occurred."
          },
          "description": {
            "type": "string",
            "description": "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides."
          },
          "id": { "type": "string", "description": "The Pending Transaction identifier." },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "enum": ["account_number", "card"],
            "description": "The type of the route this Pending Transaction came through.",
            "nullable": true,
            "x-enum-descriptions": ["An Account Number.", "A Card."]
          },
          "source": {
            "type": "object",
            "title": "Pending Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "account_transfer_instruction",
                  "ach_transfer_instruction",
                  "card_authorization",
                  "check_deposit_instruction",
                  "check_transfer_instruction",
                  "inbound_funds_hold",
                  "real_time_payments_transfer_instruction",
                  "wire_transfer_instruction",
                  "other"
                ],
                "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "Account Transfer Instruction: details will be under the `account_transfer_instruction` object.",
                  "ACH Transfer Instruction: details will be under the `ach_transfer_instruction` object.",
                  "Card Authorization: details will be under the `card_authorization` object.",
                  "Check Deposit Instruction: details will be under the `check_deposit_instruction` object.",
                  "Check Transfer Instruction: details will be under the `check_transfer_instruction` object.",
                  "Inbound Funds Hold: details will be under the `inbound_funds_hold` object.",
                  "Real-Time Payments Transfer Instruction: details will be under the `real_time_payments_transfer_instruction` object.",
                  "Wire Transfer Instruction: details will be under the `wire_transfer_instruction` object.",
                  "The Pending Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "account_transfer_instruction": {
                "type": "object",
                "title": "Account Transfer Instruction",
                "description": "An Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                  }
                },
                "required": ["amount", "currency", "transfer_id"],
                "nullable": true,
                "x-title-plural": "Account Transfer Instructions"
              },
              "ach_transfer_instruction": {
                "type": "object",
                "title": "ACH Transfer Instruction",
                "description": "An ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                "example": { "amount": 100, "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q" },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Pending Transaction."
                  }
                },
                "required": ["amount", "transfer_id"],
                "nullable": true,
                "x-title-plural": "ACH Transfer Instructions"
              },
              "card_authorization": {
                "type": "object",
                "title": "Card Authorization",
                "description": "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                "example": {
                  "id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                  "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                  "merchant_acceptor_id": "5665270011000168",
                  "merchant_descriptor": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "merchant_city": "New York",
                  "merchant_country": "US",
                  "digital_wallet_token_id": null,
                  "physical_card_id": null,
                  "verification": {
                    "cardholder_address": {
                      "provided_postal_code": "94132",
                      "provided_line1": "33 Liberty Street",
                      "actual_postal_code": "94131",
                      "actual_line1": "33 Liberty Street",
                      "result": "postal_code_no_match_address_match"
                    },
                    "card_verification_code": { "result": "match" }
                  },
                  "network_identifiers": {
                    "transaction_id": "627199945183184",
                    "trace_number": "487941",
                    "retrieval_reference_number": "785867080153"
                  },
                  "network_details": {
                    "category": "visa",
                    "visa": {
                      "electronic_commerce_indicator": "secure_electronic_commerce",
                      "point_of_service_entry_mode": "manual"
                    }
                  },
                  "amount": 100,
                  "currency": "USD",
                  "direction": "settlement",
                  "processing_category": "purchase",
                  "expires_at": "2020-01-31T23:59:59Z",
                  "real_time_decision_id": null,
                  "pending_transaction_id": null,
                  "type": "card_authorization"
                },
                "properties": {
                  "id": { "type": "string", "description": "The Card Authorization identifier." },
                  "card_payment_id": {
                    "type": "string",
                    "description": "The ID of the Card Payment this transaction belongs to.",
                    "nullable": true
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": "The merchant descriptor of the merchant the card is transacting with."
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in.",
                    "nullable": true
                  },
                  "digital_wallet_token_id": {
                    "type": "string",
                    "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                    "nullable": true
                  },
                  "physical_card_id": {
                    "type": "string",
                    "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                    "nullable": true
                  },
                  "verification": {
                    "type": "object",
                    "description": "Fields related to verification of cardholder-provided values.",
                    "properties": {
                      "cardholder_address": {
                        "type": "object",
                        "title": "Cardholder Address",
                        "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                        "properties": {
                          "provided_postal_code": {
                            "type": "string",
                            "description": "The postal code provided for verification in the authorization request.",
                            "nullable": true
                          },
                          "provided_line1": {
                            "type": "string",
                            "description": "The cardholder address line 1 provided for verification in the authorization request.",
                            "nullable": true
                          },
                          "actual_postal_code": {
                            "type": "string",
                            "description": "The postal code of the address on file for the cardholder.",
                            "nullable": true
                          },
                          "actual_line1": {
                            "type": "string",
                            "description": "Line 1 of the address on file for the cardholder.",
                            "nullable": true
                          },
                          "result": {
                            "type": "string",
                            "enum": [
                              "not_checked",
                              "postal_code_match_address_not_checked",
                              "postal_code_match_address_no_match",
                              "postal_code_no_match_address_match",
                              "match",
                              "no_match"
                            ],
                            "description": "The address verification result returned to the card network.",
                            "x-enum-descriptions": [
                              "No adress was provided in the authorization request.",
                              "Postal code matches, but the street address was not verified.",
                              "Postal code matches, but the street address does not match.",
                              "Postal code does not match, but the street address matches.",
                              "Postal code and street address match.",
                              "Postal code and street address do not match."
                            ]
                          }
                        },
                        "required": [
                          "provided_postal_code",
                          "provided_line1",
                          "actual_postal_code",
                          "actual_line1",
                          "result"
                        ],
                        "x-title-plural": "Cardholder Addresses"
                      },
                      "card_verification_code": {
                        "type": "object",
                        "title": "Card Verification Code",
                        "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                        "properties": {
                          "result": {
                            "type": "string",
                            "enum": ["not_checked", "match", "no_match"],
                            "description": "The result of verifying the Card Verification Code.",
                            "x-enum-descriptions": [
                              "No card verification code was provided in the authorization request.",
                              "The card verification code matched the one on file.",
                              "The card verification code did not match the one on file."
                            ]
                          }
                        },
                        "required": ["result"],
                        "x-title-plural": "Card Verification Codes"
                      }
                    },
                    "required": ["cardholder_address", "card_verification_code"],
                    "x-title-plural": "s"
                  },
                  "network_identifiers": {
                    "type": "object",
                    "description": "Network-specific identifiers for a specific request or transaction.",
                    "example": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "properties": {
                      "transaction_id": {
                        "type": "string",
                        "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                        "nullable": true
                      },
                      "retrieval_reference_number": {
                        "type": "string",
                        "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                        "nullable": true
                      }
                    },
                    "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                    "x-title-plural": "s"
                  },
                  "network_details": {
                    "type": "object",
                    "description": "Fields specific to the `network`.",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": ["visa"],
                        "description": "The payment network used to process this card authorization.",
                        "x-enum-descriptions": ["Visa"]
                      },
                      "visa": {
                        "type": "object",
                        "title": "Visa",
                        "description": "Fields specific to the `visa` network.",
                        "properties": {
                          "electronic_commerce_indicator": {
                            "type": "string",
                            "enum": [
                              "mail_phone_order",
                              "recurring",
                              "installment",
                              "unknown_mail_phone_order",
                              "secure_electronic_commerce",
                              "non_authenticated_security_transaction_at_3ds_capable_merchant",
                              "non_authenticated_security_transaction",
                              "non_secure_transaction"
                            ],
                            "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                              "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                              "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                              "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                              "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                              "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                              "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                              "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                            ]
                          },
                          "point_of_service_entry_mode": {
                            "$ref": "#/components/schemas/point_of_service_entry_mode"
                          }
                        },
                        "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                        "nullable": true,
                        "x-title-plural": "Visas"
                      }
                    },
                    "required": ["category", "visa"],
                    "x-title-plural": "s"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "direction": {
                    "type": "string",
                    "enum": ["settlement", "refund"],
                    "description": "The direction descibes the direction the funds will move, either from the cardholder to the merchant or from the merchant to the cardholder.",
                    "x-enum-descriptions": [
                      "A regular card authorization where funds are debited from the cardholder.",
                      "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                    ]
                  },
                  "processing_category": {
                    "type": "string",
                    "enum": [
                      "account_funding",
                      "automatic_fuel_dispenser",
                      "bill_payment",
                      "purchase",
                      "quasi_cash",
                      "refund"
                    ],
                    "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                    "x-enum-descriptions": [
                      "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                      "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                      "A transaction used to pay a bill.",
                      "A regular purchase.",
                      "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                      "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                    ]
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) when this authorization will expire and the pending transaction will be released."
                  },
                  "real_time_decision_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                    "nullable": true
                  },
                  "pending_transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Pending Transaction associated with this Transaction.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "enum": ["card_authorization"],
                    "description": "A constant representing the object's type. For this resource it will always be `card_authorization`."
                  }
                },
                "required": [
                  "id",
                  "card_payment_id",
                  "merchant_acceptor_id",
                  "merchant_descriptor",
                  "merchant_category_code",
                  "merchant_city",
                  "merchant_country",
                  "digital_wallet_token_id",
                  "physical_card_id",
                  "verification",
                  "network_identifiers",
                  "network_details",
                  "amount",
                  "currency",
                  "direction",
                  "processing_category",
                  "expires_at",
                  "real_time_decision_id",
                  "pending_transaction_id",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Card Authorizations"
              },
              "check_deposit_instruction": {
                "type": "object",
                "title": "Check Deposit Instruction",
                "description": "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "back_image_file_id": "file_26khfk98mzfz90a11oqx",
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "front_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the File containing the image of the front of the check that was deposited."
                  },
                  "back_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the File containing the image of the back of the check that was deposited.",
                    "nullable": true
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The identifier of the Check Deposit.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "front_image_file_id",
                  "back_image_file_id",
                  "check_deposit_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Instructions"
              },
              "check_transfer_instruction": {
                "type": "object",
                "title": "Check Transfer Instruction",
                "description": "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer that led to this Pending Transaction."
                  }
                },
                "required": ["amount", "currency", "transfer_id"],
                "nullable": true,
                "x-title-plural": "Check Transfer Instructions"
              },
              "inbound_funds_hold": {
                "type": "object",
                "title": "Inbound Funds Hold",
                "description": "An Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                "example": {
                  "id": "inbound_funds_hold_9vuasmywdo7xb3zt4071",
                  "amount": 100,
                  "created_at": "2020-01-31T23:59:59Z",
                  "currency": "USD",
                  "automatically_releases_at": "2020-01-31T23:59:59Z",
                  "released_at": null,
                  "status": "held",
                  "held_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
                  "type": "inbound_funds_hold"
                },
                "properties": {
                  "id": { "type": "string", "description": "The Inbound Funds Hold identifier." },
                  "amount": {
                    "type": "integer",
                    "description": "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the hold was created."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "automatically_releases_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the hold will be released automatically. Certain conditions may cause it to be released before this time."
                  },
                  "released_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the hold was released (if it has been released).",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "enum": ["held", "complete"],
                    "description": "The status of the hold.",
                    "x-enum-descriptions": ["Funds are still being held.", "Funds have been released."]
                  },
                  "held_transaction_id": {
                    "type": "string",
                    "description": "The ID of the Transaction for which funds were held.",
                    "nullable": true
                  },
                  "pending_transaction_id": {
                    "type": "string",
                    "description": "The ID of the Pending Transaction representing the held funds.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "enum": ["inbound_funds_hold"],
                    "description": "A constant representing the object's type. For this resource it will always be `inbound_funds_hold`."
                  }
                },
                "required": [
                  "id",
                  "amount",
                  "created_at",
                  "currency",
                  "automatically_releases_at",
                  "released_at",
                  "status",
                  "held_transaction_id",
                  "pending_transaction_id",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Funds Holds"
              },
              "real_time_payments_transfer_instruction": {
                "type": "object",
                "title": "Real-Time Payments Transfer Instruction",
                "description": "A Real-Time Payments Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Payments Transfer that led to this Pending Transaction."
                  }
                },
                "required": ["amount", "transfer_id"],
                "nullable": true,
                "x-title-plural": "Real-Time Payments Transfer Instructions"
              },
              "wire_transfer_instruction": {
                "type": "object",
                "title": "Wire Transfer Instruction",
                "description": "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO",
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The account number for the destination account."
                  },
                  "routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": "The message that will show on the recipient's bank statement."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Wire Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Transfer Instructions"
              }
            },
            "required": [
              "category",
              "account_transfer_instruction",
              "ach_transfer_instruction",
              "card_authorization",
              "check_deposit_instruction",
              "check_transfer_instruction",
              "inbound_funds_hold",
              "real_time_payments_transfer_instruction",
              "wire_transfer_instruction"
            ],
            "x-title-plural": "Pending Transaction Sources"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "complete"],
            "description": "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
            "x-enum-descriptions": [
              "The Pending Transaction is still awaiting confirmation.",
              "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["pending_transaction"],
            "description": "A constant representing the object's type. For this resource it will always be `pending_transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "completed_at",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "status",
          "type"
        ],
        "x-title-plural": "Pending Transactions",
        "x-tag": "Pending Transactions"
      },
      "declined_transaction_list": {
        "type": "object",
        "title": "Declined Transaction List",
        "description": "A list of Declined Transaction objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/declined_transaction" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Declined Transaction Lists"
      },
      "declined_transaction": {
        "type": "object",
        "title": "Declined Transaction",
        "description": "Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered.",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Declined Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transaction's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
          },
          "description": { "type": "string", "description": "This is the description the vendor provides." },
          "id": { "type": "string", "description": "The Declined Transaction identifier." },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "enum": ["account_number", "card"],
            "description": "The type of the route this Declined Transaction came through.",
            "nullable": true,
            "x-enum-descriptions": ["An Account Number.", "A Card."]
          },
          "source": {
            "type": "object",
            "title": "Declined Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "wire_decline",
                  "other"
                ],
                "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "ACH Decline: details will be under the `ach_decline` object.",
                  "Card Decline: details will be under the `card_decline` object.",
                  "Check Decline: details will be under the `check_decline` object.",
                  "Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.",
                  "International ACH Decline: details will be under the `international_ach_decline` object.",
                  "Wire Decline: details will be under the `wire_decline` object.",
                  "The Declined Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "ach_decline": {
                "type": "object",
                "title": "ACH Decline",
                "description": "An ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                "example": {
                  "id": "ach_decline_72v1mcwxudctq56efipa",
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022",
                  "type": "ach_decline"
                },
                "properties": {
                  "id": { "type": "string", "description": "The ACH Decline's identifier." },
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "originator_company_name": {
                    "type": "string",
                    "description": "The name of the company that initiated the transfer."
                  },
                  "originator_company_descriptive_date": {
                    "type": "string",
                    "description": "The descriptive date of the transfer.",
                    "nullable": true
                  },
                  "originator_company_discretionary_data": {
                    "type": "string",
                    "description": "The additional information included with the transfer.",
                    "nullable": true
                  },
                  "originator_company_id": {
                    "type": "string",
                    "description": "The identifier of the company that initiated the transfer."
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "ach_route_canceled",
                      "ach_route_disabled",
                      "breaches_limit",
                      "credit_entry_refused_by_receiver",
                      "duplicate_return",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "misrouted_return",
                      "return_of_erroneous_or_reversing_debit",
                      "no_ach_route",
                      "originator_request",
                      "transaction_not_allowed",
                      "user_initiated"
                    ],
                    "description": "Why the ACH transfer was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "The transaction would cause an Increase limit to be exceeded.",
                      "A credit was refused. This is a reasonable default reason for decline of credits.",
                      "A rare return reason. The return this message refers to was a duplicate.",
                      "The account's entity is not active.",
                      "Your account is inactive.",
                      "Your account contains insufficient funds.",
                      "A rare return reason. The return this message refers to was misrouted.",
                      "The originating financial institution made a mistake and this return corrects it.",
                      "The account number that was debited does not exist.",
                      "The originating financial institution asked for this transfer to be returned.",
                      "The transaction is not allowed per Increase's terms.",
                      "The user initiated the decline."
                    ]
                  },
                  "receiver_id_number": {
                    "type": "string",
                    "description": "The id of the receiver of the transfer.",
                    "nullable": true
                  },
                  "receiver_name": {
                    "type": "string",
                    "description": "The name of the receiver of the transfer.",
                    "nullable": true
                  },
                  "trace_number": { "type": "string", "description": "The trace number of the transfer." },
                  "type": {
                    "type": "string",
                    "enum": ["ach_decline"],
                    "description": "A constant representing the object's type. For this resource it will always be `ach_decline`."
                  }
                },
                "required": [
                  "id",
                  "amount",
                  "originator_company_name",
                  "originator_company_descriptive_date",
                  "originator_company_discretionary_data",
                  "originator_company_id",
                  "reason",
                  "receiver_id_number",
                  "receiver_name",
                  "trace_number",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "ACH Declines"
              },
              "card_decline": {
                "type": "object",
                "title": "Card Decline",
                "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                "example": {
                  "merchant_acceptor_id": "5665270011000168",
                  "merchant_descriptor": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "merchant_city": "New York",
                  "merchant_country": "US",
                  "digital_wallet_token_id": null,
                  "physical_card_id": null,
                  "verification": {
                    "cardholder_address": {
                      "provided_postal_code": "94132",
                      "provided_line1": "33 Liberty Street",
                      "actual_postal_code": "94131",
                      "actual_line1": "33 Liberty Street",
                      "result": "postal_code_no_match_address_match"
                    },
                    "card_verification_code": { "result": "match" }
                  },
                  "network_identifiers": {
                    "transaction_id": "627199945183184",
                    "trace_number": "487941",
                    "retrieval_reference_number": "785867080153"
                  },
                  "network_details": {
                    "category": "visa",
                    "visa": {
                      "electronic_commerce_indicator": "secure_electronic_commerce",
                      "point_of_service_entry_mode": "manual"
                    }
                  },
                  "id": "card_decline_bx3o8zd7glq8yvtwg25v",
                  "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                  "amount": -1000,
                  "currency": "USD",
                  "processing_category": "purchase",
                  "reason": "insufficient_funds",
                  "merchant_state": null,
                  "real_time_decision_id": null
                },
                "properties": {
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": "The merchant descriptor of the merchant the card is transacting with."
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in.",
                    "nullable": true
                  },
                  "digital_wallet_token_id": {
                    "type": "string",
                    "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                    "nullable": true
                  },
                  "physical_card_id": {
                    "type": "string",
                    "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                    "nullable": true
                  },
                  "verification": {
                    "type": "object",
                    "description": "Fields related to verification of cardholder-provided values.",
                    "properties": {
                      "cardholder_address": {
                        "type": "object",
                        "title": "Cardholder Address",
                        "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                        "properties": {
                          "provided_postal_code": {
                            "type": "string",
                            "description": "The postal code provided for verification in the authorization request.",
                            "nullable": true
                          },
                          "provided_line1": {
                            "type": "string",
                            "description": "The cardholder address line 1 provided for verification in the authorization request.",
                            "nullable": true
                          },
                          "actual_postal_code": {
                            "type": "string",
                            "description": "The postal code of the address on file for the cardholder.",
                            "nullable": true
                          },
                          "actual_line1": {
                            "type": "string",
                            "description": "Line 1 of the address on file for the cardholder.",
                            "nullable": true
                          },
                          "result": {
                            "type": "string",
                            "enum": [
                              "not_checked",
                              "postal_code_match_address_not_checked",
                              "postal_code_match_address_no_match",
                              "postal_code_no_match_address_match",
                              "match",
                              "no_match"
                            ],
                            "description": "The address verification result returned to the card network.",
                            "x-enum-descriptions": [
                              "No adress was provided in the authorization request.",
                              "Postal code matches, but the street address was not verified.",
                              "Postal code matches, but the street address does not match.",
                              "Postal code does not match, but the street address matches.",
                              "Postal code and street address match.",
                              "Postal code and street address do not match."
                            ]
                          }
                        },
                        "required": [
                          "provided_postal_code",
                          "provided_line1",
                          "actual_postal_code",
                          "actual_line1",
                          "result"
                        ],
                        "x-title-plural": "Cardholder Addresses"
                      },
                      "card_verification_code": {
                        "type": "object",
                        "title": "Card Verification Code",
                        "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                        "properties": {
                          "result": {
                            "type": "string",
                            "enum": ["not_checked", "match", "no_match"],
                            "description": "The result of verifying the Card Verification Code.",
                            "x-enum-descriptions": [
                              "No card verification code was provided in the authorization request.",
                              "The card verification code matched the one on file.",
                              "The card verification code did not match the one on file."
                            ]
                          }
                        },
                        "required": ["result"],
                        "x-title-plural": "Card Verification Codes"
                      }
                    },
                    "required": ["cardholder_address", "card_verification_code"],
                    "x-title-plural": "s"
                  },
                  "network_identifiers": {
                    "type": "object",
                    "description": "Network-specific identifiers for a specific request or transaction.",
                    "example": {
                      "transaction_id": "627199945183184",
                      "trace_number": "487941",
                      "retrieval_reference_number": "785867080153"
                    },
                    "properties": {
                      "transaction_id": {
                        "type": "string",
                        "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                        "nullable": true
                      },
                      "retrieval_reference_number": {
                        "type": "string",
                        "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                        "nullable": true
                      }
                    },
                    "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                    "x-title-plural": "s"
                  },
                  "network_details": {
                    "type": "object",
                    "description": "Fields specific to the `network`.",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": ["visa"],
                        "description": "The payment network used to process this card authorization.",
                        "x-enum-descriptions": ["Visa"]
                      },
                      "visa": {
                        "type": "object",
                        "title": "Visa",
                        "description": "Fields specific to the `visa` network.",
                        "properties": {
                          "electronic_commerce_indicator": {
                            "type": "string",
                            "enum": [
                              "mail_phone_order",
                              "recurring",
                              "installment",
                              "unknown_mail_phone_order",
                              "secure_electronic_commerce",
                              "non_authenticated_security_transaction_at_3ds_capable_merchant",
                              "non_authenticated_security_transaction",
                              "non_secure_transaction"
                            ],
                            "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                              "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                              "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                              "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                              "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                              "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                              "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                              "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                            ]
                          },
                          "point_of_service_entry_mode": {
                            "$ref": "#/components/schemas/point_of_service_entry_mode"
                          }
                        },
                        "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                        "nullable": true,
                        "x-title-plural": "Visas"
                      }
                    },
                    "required": ["category", "visa"],
                    "x-title-plural": "s"
                  },
                  "id": { "type": "string", "description": "The Card Decline identifier." },
                  "card_payment_id": {
                    "type": "string",
                    "description": "The ID of the Card Payment this transaction belongs to.",
                    "nullable": true
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "processing_category": {
                    "type": "string",
                    "enum": [
                      "account_funding",
                      "automatic_fuel_dispenser",
                      "bill_payment",
                      "purchase",
                      "quasi_cash",
                      "refund"
                    ],
                    "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                    "x-enum-descriptions": [
                      "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                      "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                      "A transaction used to pay a bill.",
                      "A regular purchase.",
                      "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                      "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "card_not_active",
                      "physical_card_not_active",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "cvv2_mismatch",
                      "transaction_not_allowed",
                      "breaches_limit",
                      "webhook_declined",
                      "webhook_timed_out",
                      "declined_by_stand_in_processing",
                      "invalid_physical_card",
                      "missing_original_authorization",
                      "suspected_fraud"
                    ],
                    "description": "Why the transaction was declined.",
                    "x-enum-descriptions": [
                      "The Card was not active.",
                      "The Physical Card was not active.",
                      "The account's entity was not active.",
                      "The account was inactive.",
                      "The Card's Account did not have a sufficient available balance.",
                      "The given CVV2 did not match the card's value.",
                      "The attempted card transaction is not allowed per Increase's terms.",
                      "The transaction was blocked by a Limit.",
                      "Your application declined the transaction via webhook.",
                      "Your application webhook did not respond without the required timeout.",
                      "Declined by stand-in processing.",
                      "The card read had an invalid CVV, dCVV, or authorization request cryptogram.",
                      "The original card authorization for this incremental authorization does not exist.",
                      "The transaction was suspected to be fraudulent. Please reach out to support@increase.com for more information."
                    ]
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "The state the merchant resides in.",
                    "nullable": true
                  },
                  "real_time_decision_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                    "nullable": true
                  }
                },
                "required": [
                  "merchant_acceptor_id",
                  "merchant_descriptor",
                  "merchant_category_code",
                  "merchant_city",
                  "merchant_country",
                  "digital_wallet_token_id",
                  "physical_card_id",
                  "verification",
                  "network_identifiers",
                  "network_details",
                  "id",
                  "card_payment_id",
                  "amount",
                  "currency",
                  "processing_category",
                  "reason",
                  "merchant_state",
                  "real_time_decision_id"
                ],
                "nullable": true,
                "x-title-plural": "Card Declines"
              },
              "check_decline": {
                "type": "object",
                "title": "Check Decline",
                "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                "example": {
                  "amount": -1000,
                  "auxiliary_on_us": "99999",
                  "reason": "insufficient_funds",
                  "front_image_file_id": null,
                  "back_image_file_id": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "auxiliary_on_us": {
                    "type": "string",
                    "description": "A computer-readable number printed on the MICR line of business checks, usually the check number. This is useful for positive pay checks, but can be unreliably transmitted by the bank of first deposit.",
                    "nullable": true
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "ach_route_disabled",
                      "ach_route_canceled",
                      "breaches_limit",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "stop_payment_requested",
                      "duplicate_presentment",
                      "not_authorized",
                      "amount_mismatch",
                      "not_our_item",
                      "no_account_number_found"
                    ],
                    "description": "Why the check was declined.",
                    "x-enum-descriptions": [
                      "The account number is disabled.",
                      "The account number is canceled.",
                      "The transaction would cause a limit to be exceeded.",
                      "The account's entity is not active.",
                      "Your account is inactive.",
                      "Your account contains insufficient funds.",
                      "Stop payment requested for this check.",
                      "The check was a duplicate deposit.",
                      "The check was not authorized.",
                      "The amount the receiving bank is attempting to deposit does not match the amount on the check.",
                      "The check attempting to be deposited does not belong to Increase.",
                      "The account number on the check does not exist at Increase."
                    ]
                  },
                  "front_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the API File object containing an image of the front of the declined check.",
                    "nullable": true
                  },
                  "back_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the API File object containing an image of the back of the declined check.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "auxiliary_on_us",
                  "reason",
                  "front_image_file_id",
                  "back_image_file_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Declines"
              },
              "inbound_real_time_payments_transfer_decline": {
                "type": "object",
                "title": "Inbound Real-Time Payments Transfer Decline",
                "description": "An Inbound Real-Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "reason": "account_number_disabled",
                  "creditor_name": "Ian Crease",
                  "debtor_name": "National Phonograph Company",
                  "debtor_account_number": "987654321",
                  "debtor_routing_number": "101050001",
                  "transaction_identification": "20220501234567891T1BSLZO01745013025",
                  "remittance_information": "Invoice 29582"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "account_number_canceled",
                      "account_number_disabled",
                      "account_restricted",
                      "group_locked",
                      "entity_not_active",
                      "real_time_payments_not_enabled"
                    ],
                    "description": "Why the transfer was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "Your account is restricted.",
                      "Your account is inactive.",
                      "The account's entity is not active.",
                      "Your account is not enabled to receive Real-Time Payments transfers."
                    ]
                  },
                  "creditor_name": {
                    "type": "string",
                    "description": "The name the sender of the transfer specified as the recipient of the transfer."
                  },
                  "debtor_name": {
                    "type": "string",
                    "description": "The name provided by the sender of the transfer."
                  },
                  "debtor_account_number": {
                    "type": "string",
                    "description": "The account number of the account that sent the transfer."
                  },
                  "debtor_routing_number": {
                    "type": "string",
                    "description": "The routing number of the account that sent the transfer."
                  },
                  "transaction_identification": {
                    "type": "string",
                    "description": "The Real-Time Payments network identification of the declined transfer."
                  },
                  "remittance_information": {
                    "type": "string",
                    "description": "Additional information included with the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "reason",
                  "creditor_name",
                  "debtor_name",
                  "debtor_account_number",
                  "debtor_routing_number",
                  "transaction_identification",
                  "remittance_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Real-Time Payments Transfer Declines"
              },
              "international_ach_decline": {
                "type": "object",
                "title": "International ACH Decline",
                "description": "An International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                "example": {
                  "amount": -1000,
                  "foreign_exchange_indicator": "fixed_to_fixed",
                  "foreign_exchange_reference_indicator": "blank",
                  "foreign_exchange_reference": null,
                  "destination_country_code": "US",
                  "destination_currency_code": "USD",
                  "foreign_payment_amount": 199,
                  "foreign_trace_number": null,
                  "international_transaction_type_code": "internet_initiated",
                  "originating_currency_code": "USD",
                  "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                  "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "originating_depository_financial_institution_id": "091000019",
                  "originating_depository_financial_institution_branch_country": "US",
                  "originator_company_entry_description": "RETRY PYMT",
                  "originator_name": "BERGHAIN",
                  "originator_street_address": "Ruedersdorferstr. 7",
                  "originator_city": "BERLIN",
                  "originator_state_or_province": null,
                  "originator_postal_code": "50825",
                  "originator_country": "DE",
                  "originator_identification": "770510487A",
                  "payment_related_information": null,
                  "payment_related_information2": null,
                  "receiver_identification_number": "1018790279274",
                  "receiver_street_address": "123 FAKE ST",
                  "receiver_city": "BEVERLY HILLS",
                  "receiver_state_or_province": "CA",
                  "receiver_country": "US",
                  "receiver_postal_code": "90210",
                  "receiving_company_or_individual_name": "IAN CREASE",
                  "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                  "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "receiving_depository_financial_institution_id": "101050001",
                  "receiving_depository_financial_institution_country": "US",
                  "trace_number": "010202909100090"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "foreign_exchange_indicator": {
                    "type": "string",
                    "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                    "description": "A description of how the foreign exchange rate was calculated.",
                    "x-enum-descriptions": [
                      "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                      "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                      "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                    ]
                  },
                  "foreign_exchange_reference_indicator": {
                    "type": "string",
                    "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                    "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                    "x-enum-descriptions": [
                      "The ACH file contains a foreign exchange rate.",
                      "The ACH file contains a reference to a well-known foreign exchange rate.",
                      "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                    ]
                  },
                  "foreign_exchange_reference": {
                    "type": "string",
                    "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                    "nullable": true
                  },
                  "destination_country_code": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                  },
                  "destination_currency_code": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                  },
                  "foreign_payment_amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                  },
                  "foreign_trace_number": {
                    "type": "string",
                    "description": "A reference number in the foreign banking infrastructure.",
                    "nullable": true
                  },
                  "international_transaction_type_code": {
                    "type": "string",
                    "enum": [
                      "annuity",
                      "business_or_commercial",
                      "deposit",
                      "loan",
                      "miscellaneous",
                      "mortgage",
                      "pension",
                      "remittance",
                      "rent_or_lease",
                      "salary_or_payroll",
                      "tax",
                      "accounts_receivable",
                      "back_office_conversion",
                      "machine_transfer",
                      "point_of_purchase",
                      "point_of_sale",
                      "represented_check",
                      "shared_network_transaction",
                      "telphone_initiated",
                      "internet_initiated"
                    ],
                    "description": "The type of transfer. Set by the originator.",
                    "x-enum-descriptions": [
                      "Sent as `ANN` in the Nacha file.",
                      "Sent as `BUS` in the Nacha file.",
                      "Sent as `DEP` in the Nacha file.",
                      "Sent as `LOA` in the Nacha file.",
                      "Sent as `MIS` in the Nacha file.",
                      "Sent as `MOR` in the Nacha file.",
                      "Sent as `PEN` in the Nacha file.",
                      "Sent as `REM` in the Nacha file.",
                      "Sent as `RLS` in the Nacha file.",
                      "Sent as `SAL` in the Nacha file.",
                      "Sent as `TAX` in the Nacha file.",
                      "Sent as `ARC` in the Nacha file.",
                      "Sent as `BOC` in the Nacha file.",
                      "Sent as `MTE` in the Nacha file.",
                      "Sent as `POP` in the Nacha file.",
                      "Sent as `POS` in the Nacha file.",
                      "Sent as `RCK` in the Nacha file.",
                      "Sent as `SHR` in the Nacha file.",
                      "Sent as `TEL` in the Nacha file.",
                      "Sent as `WEB` in the Nacha file."
                    ]
                  },
                  "originating_currency_code": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                  },
                  "originating_depository_financial_institution_name": {
                    "type": "string",
                    "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                  },
                  "originating_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "enum": ["national_clearing_system_number", "bic_code", "iban"],
                    "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                    "x-enum-descriptions": [
                      "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                      "The SWIFT Bank Identifier Code (BIC) of the bank.",
                      "An International Bank Account Number."
                    ]
                  },
                  "originating_depository_financial_institution_id": {
                    "type": "string",
                    "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                  },
                  "originating_depository_financial_institution_branch_country": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": "A description field set by the originator."
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "Either the name of the originator or an intermediary money transmitter."
                  },
                  "originator_street_address": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete."
                  },
                  "originator_city": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete."
                  },
                  "originator_state_or_province": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete.",
                    "nullable": true
                  },
                  "originator_postal_code": {
                    "type": "string",
                    "description": "A portion of the originator address. This may be incomplete.",
                    "nullable": true
                  },
                  "originator_country": {
                    "type": "string",
                    "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                  },
                  "originator_identification": {
                    "type": "string",
                    "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                  },
                  "payment_related_information": {
                    "type": "string",
                    "description": "A description field set by the originator.",
                    "nullable": true
                  },
                  "payment_related_information2": {
                    "type": "string",
                    "description": "A description field set by the originator.",
                    "nullable": true
                  },
                  "receiver_identification_number": {
                    "type": "string",
                    "description": "An identification number the originator uses for the receiver.",
                    "nullable": true
                  },
                  "receiver_street_address": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete."
                  },
                  "receiver_city": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete."
                  },
                  "receiver_state_or_province": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete.",
                    "nullable": true
                  },
                  "receiver_country": {
                    "type": "string",
                    "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                  },
                  "receiver_postal_code": {
                    "type": "string",
                    "description": "A portion of the receiver address. This may be incomplete.",
                    "nullable": true
                  },
                  "receiving_company_or_individual_name": {
                    "type": "string",
                    "description": "The name of the receiver of the transfer. This is not verified by Increase."
                  },
                  "receiving_depository_financial_institution_name": {
                    "type": "string",
                    "description": "The name of the receiving bank, as set by the sending financial institution."
                  },
                  "receiving_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "enum": ["national_clearing_system_number", "bic_code", "iban"],
                    "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                    "x-enum-descriptions": [
                      "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                      "The SWIFT Bank Identifier Code (BIC) of the bank.",
                      "An International Bank Account Number."
                    ]
                  },
                  "receiving_depository_financial_institution_id": {
                    "type": "string",
                    "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                  },
                  "receiving_depository_financial_institution_country": {
                    "type": "string",
                    "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                  },
                  "trace_number": {
                    "type": "string",
                    "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                  }
                },
                "required": [
                  "amount",
                  "foreign_exchange_indicator",
                  "foreign_exchange_reference_indicator",
                  "foreign_exchange_reference",
                  "destination_country_code",
                  "destination_currency_code",
                  "foreign_payment_amount",
                  "foreign_trace_number",
                  "international_transaction_type_code",
                  "originating_currency_code",
                  "originating_depository_financial_institution_name",
                  "originating_depository_financial_institution_id_qualifier",
                  "originating_depository_financial_institution_id",
                  "originating_depository_financial_institution_branch_country",
                  "originator_company_entry_description",
                  "originator_name",
                  "originator_street_address",
                  "originator_city",
                  "originator_state_or_province",
                  "originator_postal_code",
                  "originator_country",
                  "originator_identification",
                  "payment_related_information",
                  "payment_related_information2",
                  "receiver_identification_number",
                  "receiver_street_address",
                  "receiver_city",
                  "receiver_state_or_province",
                  "receiver_country",
                  "receiver_postal_code",
                  "receiving_company_or_individual_name",
                  "receiving_depository_financial_institution_name",
                  "receiving_depository_financial_institution_id_qualifier",
                  "receiving_depository_financial_institution_id",
                  "receiving_depository_financial_institution_country",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "International ACH Declines"
              },
              "wire_decline": {
                "type": "object",
                "title": "Wire Decline",
                "description": "A Wire Decline object. This field will be present in the JSON response if and only if `category` is equal to `wire_decline`.",
                "example": {
                  "amount": 100,
                  "reason": "account_number_disabled",
                  "description": "Inbound wire transfer",
                  "beneficiary_address_line1": null,
                  "beneficiary_address_line2": null,
                  "beneficiary_address_line3": null,
                  "beneficiary_name": null,
                  "beneficiary_reference": null,
                  "input_message_accountability_data": null,
                  "originator_address_line1": null,
                  "originator_address_line2": null,
                  "originator_address_line3": null,
                  "originator_name": null,
                  "originator_routing_number": null,
                  "originator_to_beneficiary_information_line1": null,
                  "originator_to_beneficiary_information_line2": null,
                  "originator_to_beneficiary_information_line3": null,
                  "originator_to_beneficiary_information_line4": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "account_number_canceled",
                      "account_number_disabled",
                      "entity_not_active",
                      "group_locked",
                      "no_account_number",
                      "transaction_not_allowed"
                    ],
                    "description": "Why the wire transfer was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "The account's entity is not active.",
                      "Your account is inactive.",
                      "The beneficiary account number does not exist.",
                      "The transaction is not allowed per Increase's terms."
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "An Increase-constructed description of the declined transaction."
                  },
                  "beneficiary_address_line1": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line2": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_address_line3": {
                    "type": "string",
                    "description": "A free-form address field set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_name": {
                    "type": "string",
                    "description": "A name set by the sender.",
                    "nullable": true
                  },
                  "beneficiary_reference": {
                    "type": "string",
                    "description": "A free-form reference string set by the sender, to help identify the transfer.",
                    "nullable": true
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                    "nullable": true
                  },
                  "originator_address_line1": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line2": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_address_line3": {
                    "type": "string",
                    "description": "The address of the wire originator, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "The originator of the wire, set by the sending bank.",
                    "nullable": true
                  },
                  "originator_routing_number": {
                    "type": "string",
                    "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line1": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line2": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line3": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line4": {
                    "type": "string",
                    "description": "A free-form message set by the wire originator.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "reason",
                  "description",
                  "beneficiary_address_line1",
                  "beneficiary_address_line2",
                  "beneficiary_address_line3",
                  "beneficiary_name",
                  "beneficiary_reference",
                  "input_message_accountability_data",
                  "originator_address_line1",
                  "originator_address_line2",
                  "originator_address_line3",
                  "originator_name",
                  "originator_routing_number",
                  "originator_to_beneficiary_information_line1",
                  "originator_to_beneficiary_information_line2",
                  "originator_to_beneficiary_information_line3",
                  "originator_to_beneficiary_information_line4"
                ],
                "nullable": true,
                "x-title-plural": "Wire Declines"
              }
            },
            "required": [
              "category",
              "ach_decline",
              "card_decline",
              "check_decline",
              "inbound_real_time_payments_transfer_decline",
              "international_ach_decline",
              "wire_decline"
            ],
            "x-title-plural": "Declined Transaction Sources"
          },
          "type": {
            "type": "string",
            "enum": ["declined_transaction"],
            "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "type"
        ],
        "x-title-plural": "Declined Transactions",
        "x-tag": "Declined Transactions"
      },
      "account_transfer": {
        "type": "object",
        "title": "Account Transfer",
        "description": "Account transfers move funds between your own accounts at Increase.",
        "example": {
          "id": "account_transfer_7k9qe1ysdgqztnt63l7n",
          "amount": 100,
          "account_id": "account_in71c4amph0vgo2qllky",
          "currency": "USD",
          "destination_account_id": "account_uf16sut2ct5bevmq3eh",
          "destination_transaction_id": "transaction_j3itv8dtk5o8pw3p1xj4",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Move money into savings",
          "network": "account",
          "status": "complete",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "pending_transaction_id": null,
          "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
          "cancellation": null,
          "unique_identifier": null,
          "type": "account_transfer"
        },
        "properties": {
          "id": { "type": "string", "description": "The account transfer's identifier." },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
          },
          "account_id": { "type": "string", "description": "The Account to which the transfer belongs." },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "destination_account_id": {
            "type": "string",
            "description": "The destination account's identifier."
          },
          "destination_transaction_id": {
            "type": "string",
            "description": "The ID for the transaction receiving the transfer.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "description": {
            "type": "string",
            "description": "The description that will show on the transactions."
          },
          "network": { "type": "string", "enum": ["account"], "description": "The transfer's network." },
          "status": {
            "type": "string",
            "enum": ["pending_approval", "canceled", "complete"],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is pending approval.",
              "The transfer has been canceled.",
              "The transfer has been completed."
            ]
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID for the pending transaction representing the transfer. A pending transaction is created when the transfer [requires approval](https://increase.com/documentation/transfer-approvals#transfer-approvals) by someone else in your organization.",
            "nullable": true
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              },
              "approved_by": {
                "type": "string",
                "description": "If the Transfer was approved by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["approved_at", "approved_by"],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": { "canceled_at": "2020-01-31T23:59:59Z", "canceled_by": null },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              },
              "canceled_by": {
                "type": "string",
                "description": "If the Transfer was canceled by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["canceled_at", "canceled_by"],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "unique_identifier": {
            "type": "string",
            "description": "The unique identifier you chose for this transfer.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["account_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `account_transfer`."
          }
        },
        "required": [
          "id",
          "amount",
          "account_id",
          "currency",
          "destination_account_id",
          "destination_transaction_id",
          "created_at",
          "description",
          "network",
          "status",
          "transaction_id",
          "pending_transaction_id",
          "approval",
          "cancellation",
          "unique_identifier",
          "type"
        ],
        "x-title-plural": "Account Transfers",
        "x-tag": "Account Transfers"
      },
      "account_transfer_list": {
        "type": "object",
        "title": "Account Transfer List",
        "description": "A list of Account Transfer objects.",
        "example": {
          "data": [
            {
              "id": "account_transfer_7k9qe1ysdgqztnt63l7n",
              "amount": 100,
              "account_id": "account_in71c4amph0vgo2qllky",
              "currency": "USD",
              "destination_account_id": "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id": "transaction_j3itv8dtk5o8pw3p1xj4",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Move money into savings",
              "network": "account",
              "status": "complete",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "pending_transaction_id": null,
              "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
              "cancellation": null,
              "unique_identifier": null,
              "type": "account_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/account_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Account Transfer Lists"
      },
      "ach_transfer": {
        "type": "object",
        "title": "ACH Transfer",
        "description": "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "addendum": null,
          "amount": 100,
          "currency": "USD",
          "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
          "cancellation": null,
          "created_at": "2020-01-31T23:59:59Z",
          "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
          "id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
          "network": "ach",
          "notifications_of_change": [],
          "return": null,
          "routing_number": "101050001",
          "statement_descriptor": "Statement descriptor",
          "status": "returned",
          "submission": {
            "trace_number": "058349238292834",
            "submitted_at": "2020-01-31T23:59:59Z",
            "expected_funds_settlement_at": "2020-02-03T13:30:00Z",
            "effective_date": "2020-01-31"
          },
          "acknowledgement": { "acknowledged_at": "2020-01-31T23:59:59Z" },
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "pending_transaction_id": null,
          "company_descriptive_date": null,
          "company_discretionary_data": null,
          "company_entry_description": null,
          "company_name": "National Phonograph Company",
          "funding": "checking",
          "individual_id": null,
          "individual_name": "Ian Crease",
          "effective_date": null,
          "standard_entry_class_code": "corporate_credit_or_debit",
          "unique_identifier": null,
          "type": "ach_transfer"
        },
        "properties": {
          "account_id": { "type": "string", "description": "The Account to which the transfer belongs." },
          "account_number": { "type": "string", "description": "The destination account number." },
          "addendum": {
            "type": "string",
            "description": "Additional information that will be sent to the recipient.",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              },
              "approved_by": {
                "type": "string",
                "description": "If the Transfer was approved by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["approved_at", "approved_by"],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": { "canceled_at": "2020-01-31T23:59:59Z", "canceled_by": null },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              },
              "canceled_by": {
                "type": "string",
                "description": "If the Transfer was canceled by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["canceled_at", "canceled_by"],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "external_account_id": {
            "type": "string",
            "description": "The identifier of the External Account the transfer was made to, if any.",
            "nullable": true
          },
          "id": { "type": "string", "description": "The ACH transfer's identifier." },
          "network": { "type": "string", "enum": ["ach"], "description": "The transfer's network." },
          "notifications_of_change": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "ACH Notification of Change",
              "example": {
                "created_at": "2020-01-31T23:59:59Z",
                "change_code": "incorrect_transaction_code",
                "corrected_data": "32"
              },
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred."
                },
                "change_code": {
                  "type": "string",
                  "enum": [
                    "incorrect_account_number",
                    "incorrect_routing_number",
                    "incorrect_routing_number_and_account_number",
                    "incorrect_transaction_code",
                    "incorrect_account_number_and_transaction_code",
                    "incorrect_routing_number_account_number_and_transaction_code",
                    "incorrect_receiving_depository_financial_institution_identification",
                    "incorrect_individual_identification_number",
                    "addenda_format_error",
                    "incorrect_standard_entry_class_code_for_outbound_international_payment",
                    "misrouted_notification_of_change",
                    "incorrect_trace_number",
                    "incorrect_company_identification_number",
                    "incorrect_identification_number",
                    "incorrectly_formatted_corrected_data",
                    "incorrect_discretionary_data",
                    "routing_number_not_from_original_entry_detail_record",
                    "depository_financial_institution_account_number_not_from_original_entry_detail_record",
                    "incorrect_transaction_code_by_originating_depository_financial_institution"
                  ],
                  "description": "The required type of change that is being signaled by the receiving financial institution.",
                  "x-enum-descriptions": [
                    "The account number was incorrect.",
                    "The routing number was incorrect.",
                    "Both the routing number and the account number were incorrect.",
                    "The transaction code was incorrect.",
                    "The account number and the transaction code were incorrect.",
                    "The routing number, account number, and transaction code were incorrect.",
                    "The receiving depository financial institution identification was incorrect.",
                    "The individual identification number was incorrect.",
                    "The addenda had an incorrect format.",
                    "The standard entry class code was incorrect for an outbound international payment.",
                    "The notification of change was misrouted.",
                    "The trace number was incorrect.",
                    "The company identification number was incorrect.",
                    "The individual identification number or identification number was incorrect.",
                    "The corrected data was incorrectly formatted.",
                    "The discretionary data was incorrect.",
                    "The routing number was not from the original entry detail record.",
                    "The depository financial institution account number was not from the original entry detail record.",
                    "The transaction code was incorrect, initiated by the originating depository financial institution."
                  ]
                },
                "corrected_data": {
                  "type": "string",
                  "description": "The corrected data that should be used in future ACHs to this account."
                }
              },
              "required": ["created_at", "change_code", "corrected_data"],
              "x-title-plural": "ACH Notifications of change"
            },
            "description": "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details."
          },
          "return": {
            "type": "object",
            "title": "ACH Transfer Return",
            "description": "If your transfer is returned, this will contain details of the return.",
            "example": {
              "created_at": "2020-01-31T23:59:59Z",
              "return_reason_code": "insufficient_fund",
              "raw_return_reason_code": "R01",
              "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
            },
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
              },
              "return_reason_code": {
                "type": "string",
                "enum": [
                  "insufficient_fund",
                  "no_account",
                  "account_closed",
                  "invalid_account_number_structure",
                  "account_frozen_entry_returned_per_ofac_instruction",
                  "credit_entry_refused_by_receiver",
                  "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                  "corporate_customer_advised_not_authorized",
                  "payment_stopped",
                  "non_transaction_account",
                  "uncollected_funds",
                  "routing_number_check_digit_error",
                  "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                  "amount_field_error",
                  "authorization_revoked_by_customer",
                  "invalid_ach_routing_number",
                  "file_record_edit_criteria",
                  "enr_invalid_individual_name",
                  "returned_per_odfi_request",
                  "limited_participation_dfi",
                  "incorrectly_coded_outbound_international_payment",
                  "account_sold_to_another_dfi",
                  "addenda_error",
                  "beneficiary_or_account_holder_deceased",
                  "customer_advised_not_within_authorization_terms",
                  "corrected_return",
                  "duplicate_entry",
                  "duplicate_return",
                  "enr_duplicate_enrollment",
                  "enr_invalid_dfi_account_number",
                  "enr_invalid_individual_id_number",
                  "enr_invalid_representative_payee_indicator",
                  "enr_invalid_transaction_code",
                  "enr_return_of_enr_entry",
                  "enr_routing_number_check_digit_error",
                  "entry_not_processed_by_gateway",
                  "field_error",
                  "foreign_receiving_dfi_unable_to_settle",
                  "iat_entry_coding_error",
                  "improper_effective_entry_date",
                  "improper_source_document_source_document_presented",
                  "invalid_company_id",
                  "invalid_foreign_receiving_dfi_identification",
                  "invalid_individual_id_number",
                  "item_and_rck_entry_presented_for_payment",
                  "item_related_to_rck_entry_is_ineligible",
                  "mandatory_field_error",
                  "misrouted_dishonored_return",
                  "misrouted_return",
                  "no_errors_found",
                  "non_acceptance_of_r62_dishonored_return",
                  "non_participant_in_iat_program",
                  "permissible_return_entry",
                  "permissible_return_entry_not_accepted",
                  "rdfi_non_settlement",
                  "rdfi_participant_in_check_truncation_program",
                  "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                  "return_not_a_duplicate",
                  "return_of_erroneous_or_reversing_debit",
                  "return_of_improper_credit_entry",
                  "return_of_improper_debit_entry",
                  "return_of_xck_entry",
                  "source_document_presented_for_payment",
                  "state_law_affecting_rck_acceptance",
                  "stop_payment_on_item_related_to_rck_entry",
                  "stop_payment_on_source_document",
                  "timely_original_return",
                  "trace_number_error",
                  "untimely_dishonored_return",
                  "untimely_return"
                ],
                "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                "x-enum-descriptions": [
                  "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                  "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                  "Code R02. The account is closed at the receiving bank.",
                  "Code R04. The account number is invalid at the receiving bank.",
                  "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                  "Code R23. The receiving bank account refused a credit transfer.",
                  "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                  "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                  "Code R08. The receiving bank stopped payment on this transfer.",
                  "Code R20. The receiving bank account does not perform transfers.",
                  "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                  "Code R28. The routing number is incorrect.",
                  "Code R10. The customer at the receiving bank reversed the transfer.",
                  "Code R19. The amount field is incorrect or too large.",
                  "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                  "Code R13. The routing number is invalid.",
                  "Code R17. The receiving bank is unable to process a field in the transfer.",
                  "Code R45. The individual name field was invalid.",
                  "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                  "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                  "Code R85. The outbound international ACH transfer was incorrect.",
                  "Code R12. A rare return reason. The account was sold to another bank.",
                  "Code R25. The addenda record is incorrect or missing.",
                  "Code R15. A rare return reason. The account holder is deceased.",
                  "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                  "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                  "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                  "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                  "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                  "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                  "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                  "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                  "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                  "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                  "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                  "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                  "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                  "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                  "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                  "Code R26. A rare return reason. The ACH is missing a required field.",
                  "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                  "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                  "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                  "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                  "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                  "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                  "Code R70. A rare return reason. The receiving bank had not approved this return.",
                  "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                  "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                  "Code R14. A rare return reason. The payee is deceased.",
                  "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                  "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                  "Code R36. A rare return reason. Return of a malformed credit entry.",
                  "Code R35. A rare return reason. Return of a malformed debit entry.",
                  "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                  "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                  "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                  "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                  "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                  "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                  "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                  "Code R72. A rare return reason. The dishonored return was sent too late.",
                  "Code R68. A rare return reason. The return was sent too late."
                ]
              },
              "raw_return_reason_code": {
                "type": "string",
                "description": "The three character ACH return code, in the range R01 to R85."
              },
              "transfer_id": {
                "type": "string",
                "description": "The identifier of the ACH Transfer associated with this return."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the Transaction associated with this return."
              }
            },
            "required": [
              "created_at",
              "return_reason_code",
              "raw_return_reason_code",
              "transfer_id",
              "transaction_id"
            ],
            "nullable": true,
            "x-title-plural": "ACH Transfer Returns"
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "statement_descriptor": {
            "type": "string",
            "description": "The descriptor that will show on the recipient's bank statement."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_approval",
              "canceled",
              "pending_reviewing",
              "pending_submission",
              "submitted",
              "returned",
              "requires_attention",
              "rejected"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is pending approval.",
              "The transfer has been canceled.",
              "The transfer is pending review by Increase.",
              "The transfer is pending submission to the Federal Reserve.",
              "The transfer is complete.",
              "The transfer has been returned.",
              "The transfer requires attention from an Increase operator.",
              "The transfer has been rejected."
            ]
          },
          "submission": {
            "type": "object",
            "title": "ACH Transfer Submission",
            "description": "After the transfer is submitted to FedACH, this will contain supplemental details. Increase batches transfers and submits a file to the Federal Reserve roughly every 30 minutes. The Federal Reserve processes ACH transfers during weekdays according to their [posted schedule](https://www.frbservices.org/resources/resource-centers/same-day-ach/fedach-processing-schedule.html).",
            "example": {
              "trace_number": "058349238292834",
              "submitted_at": "2020-01-31T23:59:59Z",
              "expected_funds_settlement_at": "2020-02-03T13:30:00Z",
              "effective_date": "2020-01-31"
            },
            "properties": {
              "trace_number": {
                "type": "string",
                "description": "A 15 digit number recorded in the Nacha file and transmitted to the receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at the receiving bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the ACH transfer was sent to FedACH."
              },
              "expected_funds_settlement_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the funds transfer is expected to settle in the recipient's account. Credits may be available sooner, at the receiving banks discretion. The FedACH schedule is published [here](https://www.frbservices.org/resources/resource-centers/same-day-ach/fedach-processing-schedule.html)."
              },
              "effective_date": {
                "type": "string",
                "format": "date",
                "description": "The ACH's effective date sent to the receiving bank. If `effective_date` is configured in the ACH transfer, this will match the value there. Otherwise, it will the date that the ACH transfer was processed, which is usually the current or subsequent business day."
              }
            },
            "required": ["trace_number", "submitted_at", "expected_funds_settlement_at", "effective_date"],
            "nullable": true,
            "x-title-plural": "ACH Transfer Submissions"
          },
          "acknowledgement": {
            "type": "object",
            "title": "ACH Transfer Acknowledgement",
            "description": "After the transfer is acknowledged by FedACH, this will contain supplemental details. The Federal Reserve sends an acknowledgement message for each file that Increase submits.",
            "example": { "acknowledged_at": "2020-01-31T23:59:59Z" },
            "properties": {
              "acknowledged_at": {
                "type": "string",
                "description": "When the Federal Reserve acknowledged the submitted file containing this transfer."
              }
            },
            "required": ["acknowledged_at"],
            "nullable": true,
            "x-title-plural": "ACH Transfer Acknowledgements"
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID for the pending transaction representing the transfer. A pending transaction is created when the transfer [requires approval](https://increase.com/documentation/transfer-approvals#transfer-approvals) by someone else in your organization.",
            "nullable": true
          },
          "company_descriptive_date": {
            "type": "string",
            "description": "The description of the date of the transfer.",
            "nullable": true
          },
          "company_discretionary_data": {
            "type": "string",
            "description": "The data you chose to associate with the transfer.",
            "nullable": true
          },
          "company_entry_description": {
            "type": "string",
            "description": "The description of the transfer you set to be shown to the recipient.",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name by which the recipient knows you.",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "enum": ["checking", "savings"],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": ["A checking account.", "A savings account."]
          },
          "individual_id": {
            "type": "string",
            "description": "Your identifier for the transfer recipient.",
            "nullable": true
          },
          "individual_name": {
            "type": "string",
            "description": "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
            "nullable": true
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "description": "The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "nullable": true
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": ["corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated"],
            "description": "The Standard Entry Class (SEC) code to use for the transfer.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          },
          "unique_identifier": {
            "type": "string",
            "description": "The unique identifier you chose for this transfer.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["ach_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `ach_transfer`."
          }
        },
        "required": [
          "account_id",
          "account_number",
          "addendum",
          "amount",
          "currency",
          "approval",
          "cancellation",
          "created_at",
          "external_account_id",
          "id",
          "network",
          "notifications_of_change",
          "return",
          "routing_number",
          "statement_descriptor",
          "status",
          "submission",
          "acknowledgement",
          "transaction_id",
          "pending_transaction_id",
          "company_descriptive_date",
          "company_discretionary_data",
          "company_entry_description",
          "company_name",
          "funding",
          "individual_id",
          "individual_name",
          "effective_date",
          "standard_entry_class_code",
          "unique_identifier",
          "type"
        ],
        "x-title-plural": "ACH Transfers",
        "x-tag": "ACH Transfers"
      },
      "ach_transfer_list": {
        "type": "object",
        "title": "ACH Transfer List",
        "description": "A list of ACH Transfer objects.",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "account_number": "987654321",
              "addendum": null,
              "amount": 100,
              "currency": "USD",
              "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
              "cancellation": null,
              "created_at": "2020-01-31T23:59:59Z",
              "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
              "id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "network": "ach",
              "notifications_of_change": [],
              "return": null,
              "routing_number": "101050001",
              "statement_descriptor": "Statement descriptor",
              "status": "returned",
              "submission": {
                "trace_number": "058349238292834",
                "submitted_at": "2020-01-31T23:59:59Z",
                "expected_funds_settlement_at": "2020-02-03T13:30:00Z",
                "effective_date": "2020-01-31"
              },
              "acknowledgement": { "acknowledged_at": "2020-01-31T23:59:59Z" },
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "pending_transaction_id": null,
              "company_descriptive_date": null,
              "company_discretionary_data": null,
              "company_entry_description": null,
              "company_name": "National Phonograph Company",
              "funding": "checking",
              "individual_id": null,
              "individual_name": "Ian Crease",
              "effective_date": null,
              "standard_entry_class_code": "corporate_credit_or_debit",
              "unique_identifier": null,
              "type": "ach_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ach_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "ACH Transfer Lists"
      },
      "ach_prenotification": {
        "type": "object",
        "title": "ACH Prenotification",
        "description": "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH).",
        "properties": {
          "id": { "type": "string", "description": "The ACH Prenotification's identifier." },
          "account_number": { "type": "string", "description": "The destination account number." },
          "addendum": {
            "type": "string",
            "description": "Additional information for the recipient.",
            "nullable": true
          },
          "company_descriptive_date": {
            "type": "string",
            "description": "The description of the date of the notification.",
            "nullable": true
          },
          "company_discretionary_data": {
            "type": "string",
            "description": "Optional data associated with the notification.",
            "nullable": true
          },
          "company_entry_description": {
            "type": "string",
            "description": "The description of the notification.",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name by which you know the company.",
            "nullable": true
          },
          "credit_debit_indicator": {
            "type": "string",
            "enum": ["credit", "debit"],
            "description": "If the notification is for a future credit or debit.",
            "nullable": true,
            "x-enum-descriptions": [
              "The Prenotification is for an anticipated credit.",
              "The Prenotification is for an anticipated debit."
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date-time",
            "description": "The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "nullable": true
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "prenotification_return": {
            "type": "object",
            "title": "ACH Prenotification Return",
            "description": "If your prenotification is returned, this will contain details of the return.",
            "example": {
              "created_at": "2020-01-31T23:59:59Z",
              "return_reason_code": "corporate_customer_advised_not_authorized"
            },
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Prenotification was returned."
              },
              "return_reason_code": {
                "type": "string",
                "enum": [
                  "insufficient_fund",
                  "no_account",
                  "account_closed",
                  "invalid_account_number_structure",
                  "account_frozen_entry_returned_per_ofac_instruction",
                  "credit_entry_refused_by_receiver",
                  "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                  "corporate_customer_advised_not_authorized",
                  "payment_stopped",
                  "non_transaction_account",
                  "uncollected_funds",
                  "routing_number_check_digit_error",
                  "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                  "amount_field_error",
                  "authorization_revoked_by_customer",
                  "invalid_ach_routing_number",
                  "file_record_edit_criteria",
                  "enr_invalid_individual_name",
                  "returned_per_odfi_request",
                  "limited_participation_dfi",
                  "incorrectly_coded_outbound_international_payment",
                  "account_sold_to_another_dfi",
                  "addenda_error",
                  "beneficiary_or_account_holder_deceased",
                  "customer_advised_not_within_authorization_terms",
                  "corrected_return",
                  "duplicate_entry",
                  "duplicate_return",
                  "enr_duplicate_enrollment",
                  "enr_invalid_dfi_account_number",
                  "enr_invalid_individual_id_number",
                  "enr_invalid_representative_payee_indicator",
                  "enr_invalid_transaction_code",
                  "enr_return_of_enr_entry",
                  "enr_routing_number_check_digit_error",
                  "entry_not_processed_by_gateway",
                  "field_error",
                  "foreign_receiving_dfi_unable_to_settle",
                  "iat_entry_coding_error",
                  "improper_effective_entry_date",
                  "improper_source_document_source_document_presented",
                  "invalid_company_id",
                  "invalid_foreign_receiving_dfi_identification",
                  "invalid_individual_id_number",
                  "item_and_rck_entry_presented_for_payment",
                  "item_related_to_rck_entry_is_ineligible",
                  "mandatory_field_error",
                  "misrouted_dishonored_return",
                  "misrouted_return",
                  "no_errors_found",
                  "non_acceptance_of_r62_dishonored_return",
                  "non_participant_in_iat_program",
                  "permissible_return_entry",
                  "permissible_return_entry_not_accepted",
                  "rdfi_non_settlement",
                  "rdfi_participant_in_check_truncation_program",
                  "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                  "return_not_a_duplicate",
                  "return_of_erroneous_or_reversing_debit",
                  "return_of_improper_credit_entry",
                  "return_of_improper_debit_entry",
                  "return_of_xck_entry",
                  "source_document_presented_for_payment",
                  "state_law_affecting_rck_acceptance",
                  "stop_payment_on_item_related_to_rck_entry",
                  "stop_payment_on_source_document",
                  "timely_original_return",
                  "trace_number_error",
                  "untimely_dishonored_return",
                  "untimely_return"
                ],
                "description": "Why the Prenotification was returned.",
                "x-enum-descriptions": [
                  "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                  "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                  "Code R02. The account is closed at the receiving bank.",
                  "Code R04. The account number is invalid at the receiving bank.",
                  "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                  "Code R23. The receiving bank account refused a credit transfer.",
                  "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                  "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                  "Code R08. The receiving bank stopped payment on this transfer.",
                  "Code R20. The receiving bank account does not perform transfers.",
                  "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                  "Code R28. The routing number is incorrect.",
                  "Code R10. The customer at the receiving bank reversed the transfer.",
                  "Code R19. The amount field is incorrect or too large.",
                  "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                  "Code R13. The routing number is invalid.",
                  "Code R17. The receiving bank is unable to process a field in the transfer.",
                  "Code R45. The individual name field was invalid.",
                  "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                  "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                  "Code R85. The outbound international ACH transfer was incorrect.",
                  "Code R12. A rare return reason. The account was sold to another bank.",
                  "Code R25. The addenda record is incorrect or missing.",
                  "Code R15. A rare return reason. The account holder is deceased.",
                  "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                  "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                  "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                  "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                  "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                  "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                  "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                  "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                  "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                  "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                  "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                  "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                  "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                  "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                  "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                  "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                  "Code R26. A rare return reason. The ACH is missing a required field.",
                  "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                  "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                  "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                  "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                  "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                  "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                  "Code R70. A rare return reason. The receiving bank had not approved this return.",
                  "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                  "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                  "Code R14. A rare return reason. The payee is deceased.",
                  "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                  "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                  "Code R36. A rare return reason. Return of a malformed credit entry.",
                  "Code R35. A rare return reason. Return of a malformed debit entry.",
                  "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                  "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                  "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                  "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                  "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                  "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                  "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                  "Code R72. A rare return reason. The dishonored return was sent too late.",
                  "Code R68. A rare return reason. The return was sent too late."
                ]
              }
            },
            "required": ["created_at", "return_reason_code"],
            "nullable": true,
            "x-title-plural": "ACH Prenotification Returns"
          },
          "notifications_of_change": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "ACH Notification of Change",
              "example": {
                "created_at": "2020-01-31T23:59:59Z",
                "change_code": "incorrect_transaction_code",
                "corrected_data": "32"
              },
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred."
                },
                "change_code": {
                  "type": "string",
                  "enum": [
                    "incorrect_account_number",
                    "incorrect_routing_number",
                    "incorrect_routing_number_and_account_number",
                    "incorrect_transaction_code",
                    "incorrect_account_number_and_transaction_code",
                    "incorrect_routing_number_account_number_and_transaction_code",
                    "incorrect_receiving_depository_financial_institution_identification",
                    "incorrect_individual_identification_number",
                    "addenda_format_error",
                    "incorrect_standard_entry_class_code_for_outbound_international_payment",
                    "misrouted_notification_of_change",
                    "incorrect_trace_number",
                    "incorrect_company_identification_number",
                    "incorrect_identification_number",
                    "incorrectly_formatted_corrected_data",
                    "incorrect_discretionary_data",
                    "routing_number_not_from_original_entry_detail_record",
                    "depository_financial_institution_account_number_not_from_original_entry_detail_record",
                    "incorrect_transaction_code_by_originating_depository_financial_institution"
                  ],
                  "description": "The required type of change that is being signaled by the receiving financial institution.",
                  "x-enum-descriptions": [
                    "The account number was incorrect.",
                    "The routing number was incorrect.",
                    "Both the routing number and the account number were incorrect.",
                    "The transaction code was incorrect.",
                    "The account number and the transaction code were incorrect.",
                    "The routing number, account number, and transaction code were incorrect.",
                    "The receiving depository financial institution identification was incorrect.",
                    "The individual identification number was incorrect.",
                    "The addenda had an incorrect format.",
                    "The standard entry class code was incorrect for an outbound international payment.",
                    "The notification of change was misrouted.",
                    "The trace number was incorrect.",
                    "The company identification number was incorrect.",
                    "The individual identification number or identification number was incorrect.",
                    "The corrected data was incorrectly formatted.",
                    "The discretionary data was incorrect.",
                    "The routing number was not from the original entry detail record.",
                    "The depository financial institution account number was not from the original entry detail record.",
                    "The transaction code was incorrect, initiated by the originating depository financial institution."
                  ]
                },
                "corrected_data": {
                  "type": "string",
                  "description": "The corrected data that should be used in future ACHs to this account."
                }
              },
              "required": ["created_at", "change_code", "corrected_data"],
              "x-title-plural": "ACH Notifications of change"
            },
            "description": "If the receiving bank notifies that future transfers should use different details, this will contain those details."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created."
          },
          "status": {
            "type": "string",
            "enum": ["pending_submitting", "requires_attention", "returned", "submitted"],
            "description": "The lifecycle status of the ACH Prenotification.",
            "x-enum-descriptions": [
              "The Prenotification is pending submission.",
              "The Prenotification requires attention.",
              "The Prenotification has been returned.",
              "The Prenotification is complete."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["ach_prenotification"],
            "description": "A constant representing the object's type. For this resource it will always be `ach_prenotification`."
          }
        },
        "required": [
          "id",
          "account_number",
          "addendum",
          "company_descriptive_date",
          "company_discretionary_data",
          "company_entry_description",
          "company_name",
          "credit_debit_indicator",
          "effective_date",
          "routing_number",
          "prenotification_return",
          "notifications_of_change",
          "created_at",
          "status",
          "type"
        ],
        "x-title-plural": "ACH Prenotifications",
        "x-tag": "ACH Prenotifications"
      },
      "ach_prenotification_list": {
        "type": "object",
        "title": "ACH Prenotification List",
        "description": "A list of ACH Prenotification objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ach_prenotification" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "ACH Prenotification Lists"
      },
      "inbound_ach_transfer_list": {
        "type": "object",
        "title": "Inbound ACH Transfer List",
        "description": "A list of Inbound ACH Transfer objects.",
        "example": {
          "data": [
            {
              "id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev",
              "amount": 100,
              "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "direction": "credit",
              "status": "accepted",
              "originator_company_name": "BIG BANK",
              "originator_company_descriptive_date": null,
              "originator_company_discretionary_data": null,
              "originator_company_entry_description": "Frederick S. Holmes",
              "originator_company_id": "0987654321",
              "originator_routing_number": "101050001",
              "receiver_id_number": null,
              "receiver_name": "Ian Crease",
              "trace_number": "021000038461022",
              "automatically_resolves_at": "2020-01-31T23:59:59Z",
              "addenda": null,
              "acceptance": {
                "accepted_at": "2020-01-31T23:59:59Z",
                "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
              },
              "decline": null,
              "transfer_return": null,
              "notification_of_change": null,
              "type": "inbound_ach_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/inbound_ach_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Inbound ACH Transfer Lists"
      },
      "inbound_ach_transfer": {
        "type": "object",
        "title": "Inbound ACH Transfer",
        "description": "An Inbound ACH Transfer is an ACH transfer initiated outside of Increase to your account.",
        "example": {
          "id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev",
          "amount": 100,
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "direction": "credit",
          "status": "accepted",
          "originator_company_name": "BIG BANK",
          "originator_company_descriptive_date": null,
          "originator_company_discretionary_data": null,
          "originator_company_entry_description": "Frederick S. Holmes",
          "originator_company_id": "0987654321",
          "originator_routing_number": "101050001",
          "receiver_id_number": null,
          "receiver_name": "Ian Crease",
          "trace_number": "021000038461022",
          "automatically_resolves_at": "2020-01-31T23:59:59Z",
          "addenda": null,
          "acceptance": {
            "accepted_at": "2020-01-31T23:59:59Z",
            "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
          },
          "decline": null,
          "transfer_return": null,
          "notification_of_change": null,
          "type": "inbound_ach_transfer"
        },
        "properties": {
          "id": { "type": "string", "description": "The inbound ach transfer's identifier." },
          "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number to which this transfer was sent."
          },
          "direction": {
            "type": "string",
            "enum": ["credit", "debit"],
            "description": "The direction of the transfer.",
            "x-enum-descriptions": ["Credit", "Debit"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "declined", "accepted", "returned"],
            "description": "The status of the transfer.",
            "x-enum-descriptions": [
              "The Inbound ACH Transfer is awaiting action, will transition automatically if no action is taken.",
              "The Inbound ACH Transfer has been declined.",
              "The Inbound ACH Transfer is accepted.",
              "The Inbound ACH Transfer has been returned."
            ]
          },
          "originator_company_name": {
            "type": "string",
            "description": "The name of the company that initiated the transfer."
          },
          "originator_company_descriptive_date": {
            "type": "string",
            "description": "The descriptive date of the transfer.",
            "nullable": true
          },
          "originator_company_discretionary_data": {
            "type": "string",
            "description": "The additional information included with the transfer.",
            "nullable": true
          },
          "originator_company_entry_description": {
            "type": "string",
            "description": "The description of the transfer."
          },
          "originator_company_id": {
            "type": "string",
            "description": "The id of the company that initiated the transfer."
          },
          "originator_routing_number": {
            "type": "string",
            "description": "The American Banking Association (ABA) routing number of the bank originating the transfer."
          },
          "receiver_id_number": {
            "type": "string",
            "description": "The id of the receiver of the transfer.",
            "nullable": true
          },
          "receiver_name": {
            "type": "string",
            "description": "The name of the receiver of the transfer.",
            "nullable": true
          },
          "trace_number": { "type": "string", "description": "The trace number of the transfer." },
          "automatically_resolves_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the transfer will be automatically resolved."
          },
          "addenda": {
            "type": "object",
            "title": "Addenda",
            "description": "Additional information sent from the originator.",
            "properties": {
              "category": {
                "type": "string",
                "enum": ["freeform"],
                "description": "The type of addendum.",
                "x-enum-descriptions": ["Unstructured addendum."]
              },
              "freeform": {
                "type": "object",
                "title": "Freeform",
                "description": "Unstructured `payment_related_information` passed through by the originator.",
                "properties": {
                  "entries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "Entries Element",
                      "properties": {
                        "payment_related_information": {
                          "type": "string",
                          "description": "The payment related information passed in the addendum."
                        }
                      },
                      "required": ["payment_related_information"],
                      "x-title-plural": "Entries Elements"
                    },
                    "description": "Each entry represents an addendum received from the originator."
                  }
                },
                "required": ["entries"],
                "nullable": true,
                "x-title-plural": "Freeforms"
              }
            },
            "required": ["category", "freeform"],
            "nullable": true,
            "x-title-plural": "Addendas"
          },
          "acceptance": {
            "type": "object",
            "title": "Acceptance",
            "description": "If your transfer is accepted, this will contain details of the acceptance.",
            "properties": {
              "accepted_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the transfer was accepted."
              },
              "transaction_id": {
                "type": "string",
                "description": "The id of the transaction for the accepted transfer."
              }
            },
            "required": ["accepted_at", "transaction_id"],
            "nullable": true,
            "x-title-plural": "Acceptances"
          },
          "decline": {
            "type": "object",
            "title": "Decline",
            "description": "If your transfer is declined, this will contain details of the decline.",
            "properties": {
              "reason": {
                "type": "string",
                "enum": [
                  "ach_route_canceled",
                  "ach_route_disabled",
                  "breaches_limit",
                  "credit_entry_refused_by_receiver",
                  "duplicate_return",
                  "entity_not_active",
                  "group_locked",
                  "insufficient_funds",
                  "misrouted_return",
                  "return_of_erroneous_or_reversing_debit",
                  "no_ach_route",
                  "originator_request",
                  "transaction_not_allowed",
                  "user_initiated"
                ],
                "description": "The reason for the transfer decline.",
                "x-enum-descriptions": [
                  "The account number is canceled.",
                  "The account number is disabled.",
                  "The transaction would cause an Increase limit to be exceeded.",
                  "A credit was refused. This is a reasonable default reason for decline of credits.",
                  "A rare return reason. The return this message refers to was a duplicate.",
                  "The account's entity is not active.",
                  "Your account is inactive.",
                  "Your account contains insufficient funds.",
                  "A rare return reason. The return this message refers to was misrouted.",
                  "The originating financial institution made a mistake and this return corrects it.",
                  "The account number that was debited does not exist.",
                  "The originating financial institution asked for this transfer to be returned.",
                  "The transaction is not allowed per Increase's terms.",
                  "The user initiated the decline."
                ]
              },
              "declined_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the transfer was declined."
              },
              "declined_transaction_id": {
                "type": "string",
                "description": "The id of the transaction for the declined transfer."
              }
            },
            "required": ["reason", "declined_at", "declined_transaction_id"],
            "nullable": true,
            "x-title-plural": "Declines"
          },
          "transfer_return": {
            "type": "object",
            "title": "Transfer Return",
            "description": "If your transfer is returned, this will contain details of the return.",
            "properties": {
              "reason": {
                "type": "string",
                "enum": [
                  "returned_per_odfi_request",
                  "authorization_revoked_by_customer",
                  "payment_stopped",
                  "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                  "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                  "beneficiary_or_account_holder_deceased",
                  "credit_entry_refused_by_receiver",
                  "duplicate_entry",
                  "corporate_customer_advised_not_authorized"
                ],
                "description": "The reason for the transfer return.",
                "x-enum-descriptions": [
                  "The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request. The Nacha return code is R06.",
                  "The customer no longer authorizes this transaction. The Nacha return code is R07.",
                  "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.",
                  "The customer advises that the debit was unauthorized. The Nacha return code is R10.",
                  "The payee is deceased. The Nacha return code is R14.",
                  "The account holder is deceased. The Nacha return code is R15.",
                  "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.",
                  "The account holder identified this transaction as a duplicate. The Nacha return code is R24.",
                  "The corporate customer no longer authorizes this transaction. The Nacha return code is R29."
                ]
              },
              "returned_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the transfer was returned."
              },
              "transaction_id": {
                "type": "string",
                "description": "The id of the transaction for the returned transfer."
              }
            },
            "required": ["reason", "returned_at", "transaction_id"],
            "nullable": true,
            "x-title-plural": "Transfer Returns"
          },
          "notification_of_change": {
            "type": "object",
            "title": "Notification Of Change",
            "description": "If you initiate a notification of change in response to the transfer, this will contain its details.",
            "properties": {
              "updated_account_number": {
                "type": "string",
                "description": "The new account number provided in the notification of change.",
                "nullable": true
              },
              "updated_routing_number": {
                "type": "string",
                "description": "The new account number provided in the notification of change.",
                "nullable": true
              }
            },
            "required": ["updated_account_number", "updated_routing_number"],
            "nullable": true,
            "x-title-plural": "Notifications of change"
          },
          "type": {
            "type": "string",
            "enum": ["inbound_ach_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer`."
          }
        },
        "required": [
          "id",
          "amount",
          "account_number_id",
          "direction",
          "status",
          "originator_company_name",
          "originator_company_descriptive_date",
          "originator_company_discretionary_data",
          "originator_company_entry_description",
          "originator_company_id",
          "originator_routing_number",
          "receiver_id_number",
          "receiver_name",
          "trace_number",
          "automatically_resolves_at",
          "addenda",
          "acceptance",
          "decline",
          "transfer_return",
          "notification_of_change",
          "type"
        ],
        "x-title-plural": "Inbound ACH Transfers",
        "x-tag": "Inbound ACH Transfers"
      },
      "wire_transfer": {
        "type": "object",
        "title": "Wire Transfer",
        "description": "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
        "example": {
          "id": "wire_transfer_5akynk7dqsq25qwk9q2u",
          "message_to_recipient": "Message to recipient",
          "amount": 100,
          "currency": "USD",
          "account_number": "987654321",
          "beneficiary_name": null,
          "beneficiary_address_line1": null,
          "beneficiary_address_line2": null,
          "beneficiary_address_line3": null,
          "beneficiary_financial_institution_identifier_type": null,
          "beneficiary_financial_institution_identifier": null,
          "beneficiary_financial_institution_name": null,
          "beneficiary_financial_institution_address_line1": null,
          "beneficiary_financial_institution_address_line2": null,
          "beneficiary_financial_institution_address_line3": null,
          "account_id": "account_in71c4amph0vgo2qllky",
          "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
          "routing_number": "101050001",
          "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
          "cancellation": null,
          "reversal": null,
          "created_at": "2020-01-31T23:59:59Z",
          "network": "wire",
          "status": "complete",
          "submission": null,
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "pending_transaction_id": null,
          "unique_identifier": null,
          "type": "wire_transfer"
        },
        "properties": {
          "id": { "type": "string", "description": "The wire transfer's identifier." },
          "message_to_recipient": {
            "type": "string",
            "description": "The message that will show on the recipient's bank statement.",
            "nullable": true
          },
          "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "account_number": { "type": "string", "description": "The destination account number." },
          "beneficiary_name": {
            "type": "string",
            "description": "The beneficiary's name.",
            "nullable": true
          },
          "beneficiary_address_line1": {
            "type": "string",
            "description": "The beneficiary's address line 1.",
            "nullable": true
          },
          "beneficiary_address_line2": {
            "type": "string",
            "description": "The beneficiary's address line 2.",
            "nullable": true
          },
          "beneficiary_address_line3": {
            "type": "string",
            "description": "The beneficiary's address line 3.",
            "nullable": true
          },
          "account_id": { "type": "string", "description": "The Account to which the transfer belongs." },
          "external_account_id": {
            "type": "string",
            "description": "The identifier of the External Account the transfer was made to, if any.",
            "nullable": true
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              },
              "approved_by": {
                "type": "string",
                "description": "If the Transfer was approved by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["approved_at", "approved_by"],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": { "canceled_at": "2020-01-31T23:59:59Z", "canceled_by": null },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              },
              "canceled_by": {
                "type": "string",
                "description": "If the Transfer was canceled by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["canceled_at", "canceled_by"],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "reversal": {
            "type": "object",
            "title": "Inbound Wire Reversal",
            "description": "If your transfer is reversed, this will contain details of the reversal.",
            "example": {
              "amount": 12345,
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Inbound wire reversal 2022021100335128",
              "input_cycle_date": "2022-02-11",
              "input_sequence_number": "11023",
              "input_source": "B6B7HU2R",
              "input_message_accountability_data": "20220211B6B7HU2R011023",
              "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
              "previous_message_input_cycle_date": "2022-02-10",
              "previous_message_input_sequence_number": "3",
              "previous_message_input_source": "MMQFMP0P",
              "receiver_financial_institution_information": null,
              "financial_institution_to_financial_institution_information": null,
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
              "originator_routing_number": null
            },
            "properties": {
              "amount": { "type": "integer", "description": "The amount that was reversed in USD cents." },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
              },
              "description": {
                "type": "string",
                "description": "The description on the reversal message from Fedwire, set by the reversing bank."
              },
              "input_cycle_date": {
                "type": "string",
                "format": "date",
                "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
              },
              "input_sequence_number": { "type": "string", "description": "The Fedwire sequence number." },
              "input_source": { "type": "string", "description": "The Fedwire input source identifier." },
              "input_message_accountability_data": {
                "type": "string",
                "description": "The Fedwire transaction identifier."
              },
              "previous_message_input_message_accountability_data": {
                "type": "string",
                "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
              },
              "previous_message_input_cycle_date": {
                "type": "string",
                "format": "date",
                "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
              },
              "previous_message_input_sequence_number": {
                "type": "string",
                "description": "The Fedwire sequence number for the wire transfer that was reversed."
              },
              "previous_message_input_source": {
                "type": "string",
                "description": "The Fedwire input source identifier for the wire transfer that was reversed."
              },
              "receiver_financial_institution_information": {
                "type": "string",
                "description": "Information included in the wire reversal for the receiving financial institution.",
                "nullable": true
              },
              "financial_institution_to_financial_institution_information": {
                "type": "string",
                "description": "Additional financial institution information included in the wire reversal.",
                "nullable": true
              },
              "transaction_id": {
                "type": "string",
                "description": "The ID for the Transaction associated with the transfer reversal."
              },
              "wire_transfer_id": {
                "type": "string",
                "description": "The ID for the Wire Transfer that is being reversed."
              },
              "originator_routing_number": {
                "type": "string",
                "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                "nullable": true
              }
            },
            "required": [
              "amount",
              "created_at",
              "description",
              "input_cycle_date",
              "input_sequence_number",
              "input_source",
              "input_message_accountability_data",
              "previous_message_input_message_accountability_data",
              "previous_message_input_cycle_date",
              "previous_message_input_sequence_number",
              "previous_message_input_source",
              "receiver_financial_institution_information",
              "financial_institution_to_financial_institution_information",
              "transaction_id",
              "wire_transfer_id",
              "originator_routing_number"
            ],
            "nullable": true,
            "x-title-plural": "Inbound Wire Reversals"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "network": { "type": "string", "enum": ["wire"], "description": "The transfer's network." },
          "status": {
            "type": "string",
            "enum": [
              "canceled",
              "requires_attention",
              "pending_approval",
              "rejected",
              "reversed",
              "complete",
              "pending_creating"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer has been canceled.",
              "The transfer requires attention from an Increase operator.",
              "The transfer is pending approval.",
              "The transfer has been rejected.",
              "The transfer has been reversed.",
              "The transfer is complete.",
              "The transfer is pending creation."
            ]
          },
          "submission": {
            "type": "object",
            "title": "Wire Transfer Submission",
            "description": "After the transfer is submitted to Fedwire, this will contain supplemental details.",
            "example": {
              "input_message_accountability_data": "20220118MMQFMP0P000002",
              "submitted_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "input_message_accountability_data": {
                "type": "string",
                "description": "The accountability data for the submission."
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this wire transfer was submitted to Fedwire."
              }
            },
            "required": ["input_message_accountability_data", "submitted_at"],
            "nullable": true,
            "x-title-plural": "Wire Transfer Submissions"
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID for the pending transaction representing the transfer. A pending transaction is created when the transfer [requires approval](https://increase.com/documentation/transfer-approvals#transfer-approvals) by someone else in your organization.",
            "nullable": true
          },
          "unique_identifier": {
            "type": "string",
            "description": "The unique identifier you chose for this transfer.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["wire_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `wire_transfer`."
          }
        },
        "required": [
          "id",
          "message_to_recipient",
          "amount",
          "currency",
          "account_number",
          "beneficiary_name",
          "beneficiary_address_line1",
          "beneficiary_address_line2",
          "beneficiary_address_line3",
          "account_id",
          "external_account_id",
          "routing_number",
          "approval",
          "cancellation",
          "reversal",
          "created_at",
          "network",
          "status",
          "submission",
          "transaction_id",
          "pending_transaction_id",
          "unique_identifier",
          "type"
        ],
        "x-title-plural": "Wire Transfers",
        "x-tag": "Wire Transfers"
      },
      "wire_transfer_list": {
        "type": "object",
        "title": "Wire Transfer List",
        "description": "A list of Wire Transfer objects.",
        "example": {
          "data": [
            {
              "id": "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient": "Message to recipient",
              "amount": 100,
              "currency": "USD",
              "account_number": "987654321",
              "beneficiary_name": null,
              "beneficiary_address_line1": null,
              "beneficiary_address_line2": null,
              "beneficiary_address_line3": null,
              "beneficiary_financial_institution_identifier_type": null,
              "beneficiary_financial_institution_identifier": null,
              "beneficiary_financial_institution_name": null,
              "beneficiary_financial_institution_address_line1": null,
              "beneficiary_financial_institution_address_line2": null,
              "beneficiary_financial_institution_address_line3": null,
              "account_id": "account_in71c4amph0vgo2qllky",
              "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
              "routing_number": "101050001",
              "approval": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
              "cancellation": null,
              "reversal": null,
              "created_at": "2020-01-31T23:59:59Z",
              "network": "wire",
              "status": "complete",
              "submission": null,
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "pending_transaction_id": null,
              "unique_identifier": null,
              "type": "wire_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/wire_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Wire Transfer Lists"
      },
      "wire_drawdown_request": {
        "type": "object",
        "title": "Wire Drawdown Request",
        "description": "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
        "example": {
          "type": "wire_drawdown_request",
          "id": "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "recipient_account_number": "987654321",
          "recipient_routing_number": "101050001",
          "amount": 10000,
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "recipient_name": "Ian Crease",
          "recipient_address_line1": "33 Liberty Street",
          "recipient_address_line2": "New York, NY, 10045",
          "recipient_address_line3": null,
          "submission": { "input_message_accountability_data": "20220118MMQFMP0P000003" },
          "fulfillment_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "status": "fulfilled"
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": ["wire_drawdown_request"],
            "description": "A constant representing the object's type. For this resource it will always be `wire_drawdown_request`."
          },
          "id": { "type": "string", "description": "The Wire drawdown request identifier." },
          "account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient of this request is being requested to send funds."
          },
          "recipient_account_number": {
            "type": "string",
            "description": "The drawdown request's recipient's account number."
          },
          "recipient_routing_number": {
            "type": "string",
            "description": "The drawdown request's recipient's routing number."
          },
          "amount": { "type": "integer", "description": "The amount being requested in cents." },
          "currency": {
            "type": "string",
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "description": "The message the recipient will see as part of the drawdown request."
          },
          "recipient_name": {
            "type": "string",
            "description": "The drawdown request's recipient's name.",
            "nullable": true
          },
          "recipient_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "recipient_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "recipient_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "submission": {
            "type": "object",
            "title": "Wire Drawdown Request Submission",
            "description": "After the drawdown request is submitted to Fedwire, this will contain supplemental details.",
            "example": { "input_message_accountability_data": "20220118MMQFMP0P000003" },
            "properties": {
              "input_message_accountability_data": {
                "type": "string",
                "description": "The input message accountability data (IMAD) uniquely identifying the submission with Fedwire."
              }
            },
            "required": ["input_message_accountability_data"],
            "nullable": true,
            "x-title-plural": "Wire Drawdown Request Submissions"
          },
          "fulfillment_transaction_id": {
            "type": "string",
            "description": "If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["pending_submission", "pending_response", "fulfilled", "refused"],
            "description": "The lifecycle status of the drawdown request.",
            "x-enum-descriptions": [
              "The drawdown request is queued to be submitted to Fedwire.",
              "The drawdown request has been sent and the recipient should respond in some way.",
              "The drawdown request has been fulfilled by the recipient.",
              "The drawdown request has been refused by the recipient."
            ]
          }
        },
        "required": [
          "type",
          "id",
          "account_number_id",
          "recipient_account_number",
          "recipient_routing_number",
          "amount",
          "currency",
          "message_to_recipient",
          "recipient_name",
          "recipient_address_line1",
          "recipient_address_line2",
          "recipient_address_line3",
          "submission",
          "fulfillment_transaction_id",
          "status"
        ],
        "x-title-plural": "Wire Drawdown Requests",
        "x-tag": "Wire Drawdown Requests"
      },
      "wire_drawdown_request_list": {
        "type": "object",
        "title": "Wire Drawdown Request List",
        "description": "A list of Wire Drawdown Request objects.",
        "example": {
          "data": [
            {
              "type": "wire_drawdown_request",
              "id": "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
              "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "recipient_account_number": "987654321",
              "recipient_routing_number": "101050001",
              "amount": 10000,
              "currency": "USD",
              "message_to_recipient": "Invoice 29582",
              "recipient_name": "Ian Crease",
              "recipient_address_line1": "33 Liberty Street",
              "recipient_address_line2": "New York, NY, 10045",
              "recipient_address_line3": null,
              "submission": { "input_message_accountability_data": "20220118MMQFMP0P000003" },
              "fulfillment_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "status": "fulfilled"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/wire_drawdown_request" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Wire Drawdown Request Lists"
      },
      "inbound_wire_drawdown_request_list": {
        "type": "object",
        "title": "Inbound Wire Drawdown Request List",
        "description": "A list of Inbound Wire Drawdown Request objects.",
        "example": {
          "data": [
            {
              "type": "inbound_wire_drawdown_request",
              "id": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
              "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "originator_account_number": "987654321",
              "originator_routing_number": "101050001",
              "beneficiary_account_number": "987654321",
              "beneficiary_routing_number": "101050001",
              "amount": 10000,
              "currency": "USD",
              "message_to_recipient": "Invoice 29582",
              "originator_to_beneficiary_information_line1": null,
              "originator_to_beneficiary_information_line2": null,
              "originator_to_beneficiary_information_line3": null,
              "originator_to_beneficiary_information_line4": null,
              "originator_name": "Ian Crease",
              "originator_address_line1": "33 Liberty Street",
              "originator_address_line2": "New York, NY, 10045",
              "originator_address_line3": null,
              "beneficiary_name": "Ian Crease",
              "beneficiary_address_line1": "33 Liberty Street",
              "beneficiary_address_line2": "New York, NY, 10045",
              "beneficiary_address_line3": null
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/inbound_wire_drawdown_request" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Inbound Wire Drawdown Request Lists"
      },
      "inbound_wire_drawdown_request": {
        "type": "object",
        "title": "Inbound Wire Drawdown Request",
        "description": "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
        "example": {
          "type": "inbound_wire_drawdown_request",
          "id": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
          "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "originator_account_number": "987654321",
          "originator_routing_number": "101050001",
          "beneficiary_account_number": "987654321",
          "beneficiary_routing_number": "101050001",
          "amount": 10000,
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "originator_to_beneficiary_information_line1": null,
          "originator_to_beneficiary_information_line2": null,
          "originator_to_beneficiary_information_line3": null,
          "originator_to_beneficiary_information_line4": null,
          "originator_name": "Ian Crease",
          "originator_address_line1": "33 Liberty Street",
          "originator_address_line2": "New York, NY, 10045",
          "originator_address_line3": null,
          "beneficiary_name": "Ian Crease",
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York, NY, 10045",
          "beneficiary_address_line3": null
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": ["inbound_wire_drawdown_request"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_wire_drawdown_request`."
          },
          "id": { "type": "string", "description": "The Wire drawdown request identifier." },
          "recipient_account_number_id": {
            "type": "string",
            "description": "The Account Number from which the recipient of this request is being requested to send funds."
          },
          "originator_account_number": {
            "type": "string",
            "description": "The drawdown request's originator's account number."
          },
          "originator_routing_number": {
            "type": "string",
            "description": "The drawdown request's originator's routing number."
          },
          "beneficiary_account_number": {
            "type": "string",
            "description": "The drawdown request's beneficiary's account number."
          },
          "beneficiary_routing_number": {
            "type": "string",
            "description": "The drawdown request's beneficiary's routing number."
          },
          "amount": { "type": "integer", "description": "The amount being requested in cents." },
          "currency": {
            "type": "string",
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "description": "A message from the drawdown request's originator.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "description": "Line 1 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "description": "Line 2 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "description": "Line 3 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "description": "Line 4 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_name": {
            "type": "string",
            "description": "The drawdown request's originator's name.",
            "nullable": true
          },
          "originator_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's originator's address.",
            "nullable": true
          },
          "originator_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's originator's address.",
            "nullable": true
          },
          "originator_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's originator's address.",
            "nullable": true
          },
          "beneficiary_name": {
            "type": "string",
            "description": "The drawdown request's beneficiary's name.",
            "nullable": true
          },
          "beneficiary_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's beneficiary's address.",
            "nullable": true
          },
          "beneficiary_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's beneficiary's address.",
            "nullable": true
          },
          "beneficiary_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's beneficiary's address.",
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "recipient_account_number_id",
          "originator_account_number",
          "originator_routing_number",
          "beneficiary_account_number",
          "beneficiary_routing_number",
          "amount",
          "currency",
          "message_to_recipient",
          "originator_to_beneficiary_information_line1",
          "originator_to_beneficiary_information_line2",
          "originator_to_beneficiary_information_line3",
          "originator_to_beneficiary_information_line4",
          "originator_name",
          "originator_address_line1",
          "originator_address_line2",
          "originator_address_line3",
          "beneficiary_name",
          "beneficiary_address_line1",
          "beneficiary_address_line2",
          "beneficiary_address_line3"
        ],
        "x-title-plural": "Inbound Wire Drawdown Requests",
        "x-tag": "Inbound Wire Drawdown Requests"
      },
      "check_transfer": {
        "type": "object",
        "title": "Check Transfer",
        "description": "Check Transfers move funds from your Increase account by mailing a physical check.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "account_number": "987654321",
          "routing_number": "101050001",
          "check_number": "123",
          "fulfillment_method": "physical_check",
          "physical_check": {
            "memo": "Invoice 29582",
            "note": null,
            "recipient_name": "Ian Crease",
            "mailing_address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            },
            "return_address": {
              "name": "Ian Crease",
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            }
          },
          "amount": 1000,
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "approval": null,
          "cancellation": null,
          "id": "check_transfer_30b43acfu9vw8fyc4f5",
          "mailing": { "mailed_at": "2020-01-31T23:59:59Z", "image_id": null },
          "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
          "status": "mailed",
          "submission": { "submitted_at": "2020-01-31T23:59:59Z" },
          "stop_payment_request": null,
          "deposit": {
            "deposited_at": "2020-01-31T23:59:59Z",
            "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
            "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
            "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
            "bank_of_first_deposit_routing_number": null,
            "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
            "type": "check_transfer_deposit"
          },
          "unique_identifier": null,
          "type": "check_transfer"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account from which funds will be transferred."
          },
          "source_account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number from which to send the transfer and print on the check.",
            "nullable": true
          },
          "account_number": { "type": "string", "description": "The account number printed on the check." },
          "routing_number": { "type": "string", "description": "The routing number printed on the check." },
          "check_number": { "type": "string", "description": "The check number printed on the check." },
          "fulfillment_method": {
            "type": "string",
            "enum": ["physical_check", "third_party"],
            "description": "Whether Increase will print and mail the check or if you will do it yourself.",
            "x-enum-descriptions": [
              "Increase will print and mail a physical check.",
              "Increase will not print a check; you are responsible for printing and mailing a check with the provided account number, routing number, check number, and amount."
            ]
          },
          "physical_check": {
            "type": "object",
            "title": "Physical Check",
            "description": "Details relating to the physical check that Increase will print and mail. Will be present if and only if `fulfillment_method` is equal to `physical_check`.",
            "properties": {
              "memo": {
                "type": "string",
                "description": "The descriptor that will be printed on the memo field on the check.",
                "nullable": true
              },
              "note": {
                "type": "string",
                "description": "The descriptor that will be printed on the letter included with the check.",
                "nullable": true
              },
              "recipient_name": {
                "type": "string",
                "description": "The name that will be printed on the check."
              },
              "mailing_address": {
                "type": "object",
                "title": "Mailing Address",
                "description": "Details for where Increase will mail the check.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name component of the check's mailing address.",
                    "nullable": true
                  },
                  "line1": {
                    "type": "string",
                    "description": "The street address of the check's destination.",
                    "nullable": true
                  },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address of the check's destination.",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the check's destination.",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the check's destination.",
                    "nullable": true
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "The postal code of the check's destination.",
                    "nullable": true
                  }
                },
                "required": ["name", "line1", "line2", "city", "state", "postal_code"],
                "x-title-plural": "Mailing Addresses"
              },
              "return_address": {
                "type": "object",
                "title": "Return Address",
                "description": "The return address to be printed on the check.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name component of the check's return address.",
                    "nullable": true
                  },
                  "line1": {
                    "type": "string",
                    "description": "The street address of the check's destination.",
                    "nullable": true
                  },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address of the check's destination.",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the check's destination.",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the check's destination.",
                    "nullable": true
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "The postal code of the check's destination.",
                    "nullable": true
                  }
                },
                "required": ["name", "line1", "line2", "city", "state", "postal_code"],
                "nullable": true,
                "x-title-plural": "Return Addresses"
              }
            },
            "required": ["memo", "note", "recipient_name", "mailing_address", "return_address"],
            "nullable": true,
            "x-title-plural": "Physical Checks"
          },
          "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              },
              "approved_by": {
                "type": "string",
                "description": "If the Transfer was approved by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["approved_at", "approved_by"],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": { "canceled_at": "2020-01-31T23:59:59Z", "canceled_by": null },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              },
              "canceled_by": {
                "type": "string",
                "description": "If the Transfer was canceled by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["canceled_at", "canceled_by"],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "id": { "type": "string", "description": "The Check transfer's identifier." },
          "mailing": {
            "type": "object",
            "title": "Mailing",
            "description": "If the check has been mailed by Increase, this will contain details of the shipment.",
            "properties": {
              "mailed_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed."
              },
              "image_id": {
                "type": "string",
                "description": "The ID of the file corresponding to an image of the check that was mailed, if available.",
                "nullable": true
              }
            },
            "required": ["mailed_at", "image_id"],
            "nullable": true,
            "x-title-plural": "Mailings"
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID for the pending transaction representing the transfer. A pending transaction is created when the transfer [requires approval](https://increase.com/documentation/transfer-approvals#transfer-approvals) by someone else in your organization.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_approval",
              "pending_submission",
              "submitted",
              "pending_mailing",
              "mailed",
              "canceled",
              "deposited",
              "stopped",
              "rejected",
              "requires_attention"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is awaiting approval.",
              "The transfer is pending submission.",
              "The transfer is complete.",
              "The check is queued for mailing.",
              "The check has been mailed.",
              "The transfer has been canceled.",
              "The check has been deposited.",
              "A stop-payment was requested for this check.",
              "The transfer has been rejected.",
              "The transfer requires attention from an Increase operator."
            ]
          },
          "submission": {
            "type": "object",
            "title": "Check Transfer Submission",
            "description": "After the transfer is submitted, this will contain supplemental details.",
            "example": { "submitted_at": "2020-01-31T23:59:59Z" },
            "properties": {
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this check transfer was submitted to our check printer."
              }
            },
            "required": ["submitted_at"],
            "nullable": true,
            "x-title-plural": "Check Transfer Submissions"
          },
          "stop_payment_request": {
            "type": "object",
            "title": "Check Transfer Stop Payment Request",
            "description": "After a stop-payment is requested on the check, this will contain supplemental details.",
            "example": {
              "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
              "reason": "mail_delivery_failed",
              "requested_at": "2020-01-31T23:59:59Z",
              "type": "check_transfer_stop_payment_request"
            },
            "properties": {
              "transfer_id": {
                "type": "string",
                "description": "The ID of the check transfer that was stopped."
              },
              "reason": {
                "type": "string",
                "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                "description": "The reason why this transfer was stopped.",
                "x-enum-descriptions": [
                  "The check could not be delivered.",
                  "The check was canceled by an Increase operator who will provide details out-of-band.",
                  "The check was stopped for another reason."
                ]
              },
              "requested_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the stop-payment was requested."
              },
              "type": {
                "type": "string",
                "enum": ["check_transfer_stop_payment_request"],
                "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
              }
            },
            "required": ["transfer_id", "reason", "requested_at", "type"],
            "nullable": true,
            "x-title-plural": "Check Transfer Stop Payment Requests"
          },
          "deposit": {
            "type": "object",
            "title": "Check Transfer Deposit",
            "description": "After a check transfer is deposited, this will contain supplemental details.",
            "example": {
              "deposited_at": "2020-01-31T23:59:59Z",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "bank_of_first_deposit_routing_number": null,
              "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
              "type": "check_transfer_deposit"
            },
            "properties": {
              "deposited_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the check was deposited."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the Transaction object created when the check was deposited.",
                "nullable": true
              },
              "front_image_file_id": {
                "type": "string",
                "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                "nullable": true
              },
              "back_image_file_id": {
                "type": "string",
                "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                "nullable": true
              },
              "bank_of_first_deposit_routing_number": {
                "type": "string",
                "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                "nullable": true
              },
              "transfer_id": {
                "type": "string",
                "description": "The identifier of the Check Transfer object that was deposited."
              },
              "type": {
                "type": "string",
                "enum": ["check_transfer_deposit"],
                "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
              }
            },
            "required": [
              "deposited_at",
              "transaction_id",
              "front_image_file_id",
              "back_image_file_id",
              "bank_of_first_deposit_routing_number",
              "transfer_id",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Check Transfer Deposits"
          },
          "unique_identifier": {
            "type": "string",
            "description": "The unique identifier you chose for this transfer.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["check_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `check_transfer`."
          }
        },
        "required": [
          "account_id",
          "source_account_number_id",
          "account_number",
          "routing_number",
          "check_number",
          "fulfillment_method",
          "physical_check",
          "amount",
          "created_at",
          "currency",
          "approval",
          "cancellation",
          "id",
          "mailing",
          "pending_transaction_id",
          "status",
          "submission",
          "stop_payment_request",
          "deposit",
          "unique_identifier",
          "type"
        ],
        "x-title-plural": "Check Transfers",
        "x-tag": "Check Transfers"
      },
      "check_transfer_list": {
        "type": "object",
        "title": "Check Transfer List",
        "description": "A list of Check Transfer objects.",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "account_number": "987654321",
              "routing_number": "101050001",
              "check_number": "123",
              "fulfillment_method": "physical_check",
              "physical_check": {
                "memo": "Invoice 29582",
                "note": null,
                "recipient_name": "Ian Crease",
                "mailing_address": {
                  "name": "Ian Crease",
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "postal_code": "10045"
                },
                "return_address": {
                  "name": "Ian Crease",
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "postal_code": "10045"
                }
              },
              "amount": 1000,
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "approval": null,
              "cancellation": null,
              "id": "check_transfer_30b43acfu9vw8fyc4f5",
              "mailing": { "mailed_at": "2020-01-31T23:59:59Z", "image_id": null },
              "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
              "status": "mailed",
              "submission": { "submitted_at": "2020-01-31T23:59:59Z" },
              "stop_payment_request": null,
              "deposit": {
                "deposited_at": "2020-01-31T23:59:59Z",
                "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                "bank_of_first_deposit_routing_number": null,
                "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                "type": "check_transfer_deposit"
              },
              "unique_identifier": null,
              "type": "check_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/check_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Check Transfer Lists"
      },
      "check_deposit": {
        "type": "object",
        "title": "Check Deposit",
        "description": "Check Deposits allow you to deposit images of paper checks into your account.",
        "example": {
          "id": "check_deposit_f06n9gpg7sxn8t19lfc1",
          "amount": 1000,
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "status": "submitted",
          "account_id": "account_in71c4amph0vgo2qllky",
          "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
          "back_image_file_id": null,
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "deposit_acceptance": null,
          "deposit_rejection": null,
          "deposit_return": null,
          "type": "check_deposit"
        },
        "properties": {
          "id": { "type": "string", "description": "The deposit's identifier." },
          "amount": {
            "type": "integer",
            "description": "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "submitted", "rejected", "returned"],
            "description": "The status of the Check Deposit.",
            "x-enum-descriptions": [
              "The Check Deposit is pending review.",
              "The Check Deposit has been deposited.",
              "The Check Deposit has been rejected.",
              "The Check Deposit has been returned."
            ]
          },
          "account_id": { "type": "string", "description": "The Account the check was deposited into." },
          "front_image_file_id": {
            "type": "string",
            "description": "The ID for the File containing the image of the front of the check."
          },
          "back_image_file_id": {
            "type": "string",
            "description": "The ID for the File containing the image of the back of the check.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the Transaction created by the deposit.",
            "nullable": true
          },
          "deposit_acceptance": {
            "type": "object",
            "title": "Check Deposit Acceptance",
            "description": "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
            "example": {
              "amount": 100,
              "currency": "USD",
              "account_number": "987654321",
              "routing_number": "101050001",
              "auxiliary_on_us": "101",
              "serial_number": null,
              "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "account_number": {
                "type": "string",
                "description": "The account number printed on the check."
              },
              "routing_number": {
                "type": "string",
                "description": "The routing number printed on the check."
              },
              "auxiliary_on_us": {
                "type": "string",
                "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                "nullable": true
              },
              "serial_number": {
                "type": "string",
                "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                "nullable": true
              },
              "check_deposit_id": {
                "type": "string",
                "description": "The ID of the Check Deposit that was accepted."
              }
            },
            "required": [
              "amount",
              "currency",
              "account_number",
              "routing_number",
              "auxiliary_on_us",
              "serial_number",
              "check_deposit_id"
            ],
            "nullable": true,
            "x-title-plural": "Check Deposit Acceptances"
          },
          "deposit_rejection": {
            "type": "object",
            "title": "Check Deposit Rejection",
            "description": "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
            "example": {
              "amount": 1750,
              "currency": "USD",
              "reason": "incomplete_image",
              "rejected_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "reason": {
                "type": "string",
                "enum": [
                  "incomplete_image",
                  "duplicate",
                  "poor_image_quality",
                  "incorrect_amount",
                  "incorrect_recipient",
                  "not_eligible_for_mobile_deposit",
                  "missing_required_data_elements",
                  "unknown"
                ],
                "description": "Why the check deposit was rejected.",
                "x-enum-descriptions": [
                  "The check's image is incomplete.",
                  "This is a duplicate check submission.",
                  "This check has poor image quality.",
                  "The check was deposited with the incorrect amount.",
                  "The check is made out to someone other than the account holder.",
                  "This check was not eligible for mobile deposit.",
                  "This check is missing at least one required field",
                  "The check was rejected for an unknown reason."
                ]
              },
              "rejected_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected."
              }
            },
            "required": ["amount", "currency", "reason", "rejected_at"],
            "nullable": true,
            "x-title-plural": "Check Deposit Rejections"
          },
          "deposit_return": {
            "type": "object",
            "title": "Check Deposit Return",
            "description": "If your deposit is returned, this will contain details as to why it was returned.",
            "example": {
              "amount": 100,
              "returned_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "return_reason": "insufficient_funds"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "returned_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "check_deposit_id": {
                "type": "string",
                "description": "The identifier of the Check Deposit that was returned."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the transaction that reversed the original check deposit transaction."
              },
              "return_reason": {
                "type": "string",
                "enum": [
                  "ach_conversion_not_supported",
                  "closed_account",
                  "duplicate_submission",
                  "insufficient_funds",
                  "no_account",
                  "not_authorized",
                  "stale_dated",
                  "stop_payment",
                  "unknown_reason",
                  "unmatched_details",
                  "unreadable_image",
                  "endorsement_irregular",
                  "altered_or_fictitious_item",
                  "frozen_or_blocked_account",
                  "post_dated",
                  "endorsement_missing",
                  "signature_missing",
                  "stop_payment_suspect",
                  "unusable_image",
                  "image_fails_security_check",
                  "cannot_determine_amount",
                  "signature_irregular",
                  "non_cash_item",
                  "unable_to_process",
                  "item_exceeds_dollar_limit",
                  "branch_or_account_sold"
                ],
                "description": "Why this check was returned by the bank holding the account it was drawn against.",
                "x-enum-descriptions": [
                  "The check doesn't allow ACH conversion.",
                  "The account is closed.",
                  "The check has already been deposited.",
                  "Insufficient funds",
                  "No account was found matching the check details.",
                  "The check was not authorized.",
                  "The check is too old.",
                  "The payment has been stopped by the account holder.",
                  "The reason for the return is unknown.",
                  "The image doesn't match the details submitted.",
                  "The image could not be read.",
                  "The check endorsement was irregular.",
                  "The check present was either altered or fake.",
                  "The account this check is drawn on is frozen.",
                  "The check is post dated.",
                  "The endorsement was missing.",
                  "The check signature was missing.",
                  "The bank suspects a stop payment will be placed.",
                  "The bank cannot read the image.",
                  "The check image fails the bank's security check.",
                  "The bank cannot determine the amount.",
                  "The signature is inconsistent with prior signatures.",
                  "The check is a non-cash item and cannot be drawn against the account.",
                  "The bank is unable to process this check.",
                  "The check exceeds the bank or customer's limit.",
                  "The bank sold this account and no longer services this customer."
                ]
              }
            },
            "required": [
              "amount",
              "returned_at",
              "currency",
              "check_deposit_id",
              "transaction_id",
              "return_reason"
            ],
            "nullable": true,
            "x-title-plural": "Check Deposit Returns"
          },
          "type": {
            "type": "string",
            "enum": ["check_deposit"],
            "description": "A constant representing the object's type. For this resource it will always be `check_deposit`."
          }
        },
        "required": [
          "id",
          "amount",
          "created_at",
          "currency",
          "status",
          "account_id",
          "front_image_file_id",
          "back_image_file_id",
          "transaction_id",
          "deposit_acceptance",
          "deposit_rejection",
          "deposit_return",
          "type"
        ],
        "x-title-plural": "Check Deposits",
        "x-tag": "Check Deposits"
      },
      "check_deposit_list": {
        "type": "object",
        "title": "Check Deposit List",
        "description": "A list of Check Deposit objects.",
        "example": {
          "data": [
            {
              "id": "check_deposit_f06n9gpg7sxn8t19lfc1",
              "amount": 1000,
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "status": "submitted",
              "account_id": "account_in71c4amph0vgo2qllky",
              "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "back_image_file_id": null,
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "deposit_acceptance": null,
              "deposit_rejection": null,
              "deposit_return": null,
              "type": "check_deposit"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/check_deposit" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Check Deposit Lists"
      },
      "routing_number_list": {
        "type": "object",
        "title": "Routing Number List",
        "description": "A list of Routing Number objects.",
        "example": {
          "data": [
            {
              "name": "Chase",
              "routing_number": "021000021",
              "type": "routing_number",
              "ach_transfers": "supported",
              "real_time_payments_transfers": "supported",
              "wire_transfers": "supported"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/routing_number" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Routing Number Lists"
      },
      "external_account": {
        "type": "object",
        "title": "External Account",
        "description": "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse.",
        "example": {
          "id": "external_account_ukk55lr923a3ac0pp7iv",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Landlord",
          "status": "active",
          "routing_number": "101050001",
          "account_number": "987654321",
          "funding": "checking",
          "verification_status": "verified",
          "type": "external_account"
        },
        "properties": {
          "id": { "type": "string", "description": "The External Account's identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created."
          },
          "description": {
            "type": "string",
            "description": "The External Account's description for display purposes."
          },
          "status": {
            "type": "string",
            "enum": ["active", "archived"],
            "description": "The External Account's status.",
            "x-enum-descriptions": [
              "The External Account is active.",
              "The External Account is archived and won't appear in the dashboard."
            ]
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "account_number": { "type": "string", "description": "The destination account number." },
          "funding": {
            "type": "string",
            "enum": ["checking", "savings", "other"],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account.",
              "A different type of account."
            ]
          },
          "verification_status": {
            "type": "string",
            "enum": ["unverified", "pending", "verified"],
            "description": "If you have verified ownership of the External Account.",
            "x-enum-descriptions": [
              "The External Account has not been verified.",
              "The External Account is in the process of being verified.",
              "The External Account is verified."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["external_account"],
            "description": "A constant representing the object's type. For this resource it will always be `external_account`."
          }
        },
        "required": [
          "id",
          "created_at",
          "description",
          "status",
          "routing_number",
          "account_number",
          "funding",
          "verification_status",
          "type"
        ],
        "x-title-plural": "External Accounts",
        "x-tag": "External Accounts"
      },
      "external_account_list": {
        "type": "object",
        "title": "External Account List",
        "description": "A list of External Account objects.",
        "example": {
          "data": [
            {
              "id": "external_account_ukk55lr923a3ac0pp7iv",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Landlord",
              "status": "active",
              "routing_number": "101050001",
              "account_number": "987654321",
              "funding": "checking",
              "verification_status": "verified",
              "type": "external_account"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/external_account" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "External Account Lists"
      },
      "entity": {
        "type": "object",
        "title": "Entity",
        "description": "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.",
        "example": {
          "id": "entity_n8y8tnk2p9339ti393yi",
          "structure": "corporation",
          "corporation": {
            "name": "National Phonograph Company",
            "website": "https://example.com",
            "tax_identifier": "602214076",
            "incorporation_state": "NY",
            "address": {
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "zip": "10045"
            },
            "beneficial_owners": [
              {
                "individual": {
                  "name": "Ian Crease",
                  "date_of_birth": "1970-01-31",
                  "address": {
                    "line1": "33 Liberty Street",
                    "line2": null,
                    "city": "New York",
                    "state": "NY",
                    "zip": "10045"
                  },
                  "identification": {
                    "method": "social_security_number",
                    "number_last4": "1120",
                    "country": "US"
                  }
                },
                "company_title": "CEO",
                "prong": "control",
                "beneficial_owner_id": "entity_setup_beneficial_owner_submission_vgkyk7dj5eb4sfhdbkx7"
              }
            ]
          },
          "natural_person": null,
          "joint": null,
          "trust": null,
          "type": "entity",
          "description": null,
          "status": "active",
          "supplemental_documents": [
            {
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "created_at": "2020-01-31T23:59:59Z",
              "type": "entity_supplemental_document"
            }
          ]
        },
        "properties": {
          "id": { "type": "string", "description": "The entity's identifier." },
          "structure": {
            "type": "string",
            "enum": ["corporation", "natural_person", "joint", "trust"],
            "description": "The entity's legal structure.",
            "x-enum-descriptions": [
              "A corporation.",
              "An individual person.",
              "Multiple individual people.",
              "A trust."
            ]
          },
          "corporation": {
            "type": "object",
            "title": "Corporation",
            "description": "Details of the corporation entity. Will be present if `structure` is equal to `corporation`.",
            "properties": {
              "name": { "type": "string", "description": "The legal name of the corporation." },
              "website": {
                "type": "string",
                "description": "The website of the corporation.",
                "nullable": true
              },
              "tax_identifier": {
                "type": "string",
                "description": "The Employer Identification Number (EIN) for the corporation.",
                "nullable": true
              },
              "incorporation_state": {
                "type": "string",
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation.",
                "nullable": true
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The corporation's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": { "type": "string", "description": "The first line of the address." },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": { "type": "string", "description": "The city of the address." },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": { "type": "string", "description": "The ZIP code of the address." }
                },
                "required": ["line1", "line2", "city", "state", "zip"],
                "x-title-plural": "Addresses"
              },
              "beneficial_owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Beneficial Owners Element",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "title": "Individual",
                      "description": "Personal details for the beneficial owner.",
                      "properties": {
                        "name": { "type": "string", "description": "The person's legal name." },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The person's address.",
                          "example": {
                            "line1": "33 Liberty Street",
                            "line2": null,
                            "city": "New York",
                            "state": "NY",
                            "zip": "10045"
                          },
                          "properties": {
                            "line1": { "type": "string", "description": "The first line of the address." },
                            "line2": {
                              "type": "string",
                              "description": "The second line of the address.",
                              "nullable": true
                            },
                            "city": { "type": "string", "description": "The city of the address." },
                            "state": {
                              "type": "string",
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": { "type": "string", "description": "The ZIP code of the address." }
                          },
                          "required": ["line1", "line2", "city", "state", "zip"],
                          "x-title-plural": "Addresses"
                        },
                        "identification": {
                          "type": "object",
                          "title": "Identification",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number_last4": {
                              "type": "string",
                              "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                            }
                          },
                          "required": ["method", "number_last4"],
                          "x-title-plural": "Identifications"
                        }
                      },
                      "required": ["name", "date_of_birth", "address", "identification"],
                      "x-title-plural": "Individuals"
                    },
                    "company_title": {
                      "type": "string",
                      "description": "This person's role or title within the entity.",
                      "nullable": true
                    },
                    "prong": {
                      "type": "string",
                      "enum": ["ownership", "control"],
                      "description": "Why this person is considered a beneficial owner of the entity.",
                      "x-enum-descriptions": [
                        "A person with 25% or greater direct or indirect ownership of the entity.",
                        "A person who manages, directs, or has significant control of the entity."
                      ]
                    },
                    "beneficial_owner_id": {
                      "type": "string",
                      "description": "The identifier of this beneficial owner."
                    }
                  },
                  "required": ["individual", "company_title", "prong", "beneficial_owner_id"],
                  "x-title-plural": "Beneficial Owners Elements"
                },
                "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
              }
            },
            "required": [
              "name",
              "website",
              "tax_identifier",
              "incorporation_state",
              "address",
              "beneficial_owners"
            ],
            "nullable": true,
            "x-title-plural": "Corporations"
          },
          "natural_person": {
            "type": "object",
            "title": "Individual",
            "description": "Details of the natural person entity. Will be present if `structure` is equal to `natural_person`.",
            "properties": {
              "name": { "type": "string", "description": "The person's legal name." },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "The person's date of birth in YYYY-MM-DD format."
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The person's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": { "type": "string", "description": "The first line of the address." },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": { "type": "string", "description": "The city of the address." },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": { "type": "string", "description": "The ZIP code of the address." }
                },
                "required": ["line1", "line2", "city", "state", "zip"],
                "x-title-plural": "Addresses"
              },
              "identification": {
                "type": "object",
                "title": "Identification",
                "description": "A means of verifying the person's identity.",
                "properties": {
                  "method": {
                    "type": "string",
                    "enum": [
                      "social_security_number",
                      "individual_taxpayer_identification_number",
                      "passport",
                      "drivers_license",
                      "other"
                    ],
                    "description": "A method that can be used to verify the individual's identity.",
                    "x-enum-descriptions": [
                      "A social security number.",
                      "An individual taxpayer identification number (ITIN).",
                      "A passport number.",
                      "A driver's license number.",
                      "Another identifying document."
                    ]
                  },
                  "number_last4": {
                    "type": "string",
                    "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                  }
                },
                "required": ["method", "number_last4"],
                "x-title-plural": "Identifications"
              }
            },
            "required": ["name", "date_of_birth", "address", "identification"],
            "nullable": true,
            "x-title-plural": "Individuals"
          },
          "joint": {
            "type": "object",
            "title": "Joint",
            "description": "Details of the joint entity. Will be present if `structure` is equal to `joint`.",
            "properties": {
              "name": { "type": "string", "description": "The entity's name." },
              "individuals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Individual",
                  "properties": {
                    "name": { "type": "string", "description": "The person's legal name." },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "description": "The person's date of birth in YYYY-MM-DD format."
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The person's address.",
                      "example": {
                        "line1": "33 Liberty Street",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "zip": "10045"
                      },
                      "properties": {
                        "line1": { "type": "string", "description": "The first line of the address." },
                        "line2": {
                          "type": "string",
                          "description": "The second line of the address.",
                          "nullable": true
                        },
                        "city": { "type": "string", "description": "The city of the address." },
                        "state": {
                          "type": "string",
                          "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                        },
                        "zip": { "type": "string", "description": "The ZIP code of the address." }
                      },
                      "required": ["line1", "line2", "city", "state", "zip"],
                      "x-title-plural": "Addresses"
                    },
                    "identification": {
                      "type": "object",
                      "title": "Identification",
                      "description": "A means of verifying the person's identity.",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": [
                            "social_security_number",
                            "individual_taxpayer_identification_number",
                            "passport",
                            "drivers_license",
                            "other"
                          ],
                          "description": "A method that can be used to verify the individual's identity.",
                          "x-enum-descriptions": [
                            "A social security number.",
                            "An individual taxpayer identification number (ITIN).",
                            "A passport number.",
                            "A driver's license number.",
                            "Another identifying document."
                          ]
                        },
                        "number_last4": {
                          "type": "string",
                          "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                        }
                      },
                      "required": ["method", "number_last4"],
                      "x-title-plural": "Identifications"
                    }
                  },
                  "required": ["name", "date_of_birth", "address", "identification"],
                  "x-title-plural": "Individuals"
                },
                "description": "The two individuals that share control of the entity."
              }
            },
            "required": ["name", "individuals"],
            "nullable": true,
            "x-title-plural": "Joints"
          },
          "trust": {
            "type": "object",
            "title": "Trust",
            "description": "Details of the trust entity. Will be present if `structure` is equal to `trust`.",
            "properties": {
              "name": { "type": "string", "description": "The trust's name." },
              "category": {
                "type": "string",
                "enum": ["revocable", "irrevocable"],
                "description": "Whether the trust is `revocable` or `irrevocable`.",
                "x-enum-descriptions": [
                  "The trust is revocable by the grantor.",
                  "The trust cannot be revoked."
                ]
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The trust's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": { "type": "string", "description": "The first line of the address." },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": { "type": "string", "description": "The city of the address." },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": { "type": "string", "description": "The ZIP code of the address." }
                },
                "required": ["line1", "line2", "city", "state", "zip"],
                "x-title-plural": "Addresses"
              },
              "formation_state": {
                "type": "string",
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.",
                "nullable": true
              },
              "tax_identifier": {
                "type": "string",
                "description": "The Employer Identification Number (EIN) of the trust itself.",
                "nullable": true
              },
              "trustees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Trustees Element",
                  "properties": {
                    "structure": {
                      "type": "string",
                      "enum": ["individual"],
                      "description": "The structure of the trustee. Will always be equal to `individual`.",
                      "x-enum-descriptions": ["The trustee is an individual."]
                    },
                    "individual": {
                      "type": "object",
                      "title": "Individual",
                      "description": "The individual trustee of the trust. Will be present if the trustee's `structure` is equal to `individual`.",
                      "properties": {
                        "name": { "type": "string", "description": "The person's legal name." },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The person's address.",
                          "example": {
                            "line1": "33 Liberty Street",
                            "line2": null,
                            "city": "New York",
                            "state": "NY",
                            "zip": "10045"
                          },
                          "properties": {
                            "line1": { "type": "string", "description": "The first line of the address." },
                            "line2": {
                              "type": "string",
                              "description": "The second line of the address.",
                              "nullable": true
                            },
                            "city": { "type": "string", "description": "The city of the address." },
                            "state": {
                              "type": "string",
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": { "type": "string", "description": "The ZIP code of the address." }
                          },
                          "required": ["line1", "line2", "city", "state", "zip"],
                          "x-title-plural": "Addresses"
                        },
                        "identification": {
                          "type": "object",
                          "title": "Identification",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number_last4": {
                              "type": "string",
                              "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                            }
                          },
                          "required": ["method", "number_last4"],
                          "x-title-plural": "Identifications"
                        }
                      },
                      "required": ["name", "date_of_birth", "address", "identification"],
                      "nullable": true,
                      "x-title-plural": "Individuals"
                    }
                  },
                  "required": ["structure", "individual"],
                  "x-title-plural": "Trustees Elements"
                },
                "description": "The trustees of the trust."
              },
              "grantor": {
                "type": "object",
                "title": "Individual",
                "description": "The grantor of the trust. Will be present if the `category` is `revocable`.",
                "properties": {
                  "name": { "type": "string", "description": "The person's legal name." },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "The person's date of birth in YYYY-MM-DD format."
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The person's address.",
                    "example": {
                      "line1": "33 Liberty Street",
                      "line2": null,
                      "city": "New York",
                      "state": "NY",
                      "zip": "10045"
                    },
                    "properties": {
                      "line1": { "type": "string", "description": "The first line of the address." },
                      "line2": {
                        "type": "string",
                        "description": "The second line of the address.",
                        "nullable": true
                      },
                      "city": { "type": "string", "description": "The city of the address." },
                      "state": {
                        "type": "string",
                        "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                      },
                      "zip": { "type": "string", "description": "The ZIP code of the address." }
                    },
                    "required": ["line1", "line2", "city", "state", "zip"],
                    "x-title-plural": "Addresses"
                  },
                  "identification": {
                    "type": "object",
                    "title": "Identification",
                    "description": "A means of verifying the person's identity.",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "social_security_number",
                          "individual_taxpayer_identification_number",
                          "passport",
                          "drivers_license",
                          "other"
                        ],
                        "description": "A method that can be used to verify the individual's identity.",
                        "x-enum-descriptions": [
                          "A social security number.",
                          "An individual taxpayer identification number (ITIN).",
                          "A passport number.",
                          "A driver's license number.",
                          "Another identifying document."
                        ]
                      },
                      "number_last4": {
                        "type": "string",
                        "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                      }
                    },
                    "required": ["method", "number_last4"],
                    "x-title-plural": "Identifications"
                  }
                },
                "required": ["name", "date_of_birth", "address", "identification"],
                "nullable": true,
                "x-title-plural": "Individuals"
              },
              "formation_document_file_id": {
                "type": "string",
                "description": "The ID for the File containing the formation document of the trust.",
                "nullable": true
              }
            },
            "required": [
              "name",
              "category",
              "address",
              "formation_state",
              "tax_identifier",
              "trustees",
              "grantor",
              "formation_document_file_id"
            ],
            "nullable": true,
            "x-title-plural": "Trusts"
          },
          "type": {
            "type": "string",
            "enum": ["entity"],
            "description": "A constant representing the object's type. For this resource it will always be `entity`."
          },
          "description": {
            "type": "string",
            "description": "The entity's description for display purposes.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["active", "archived", "disabled"],
            "description": "The status of the entity.",
            "x-enum-descriptions": [
              "The entity is active.",
              "The entity is archived, and can no longer be used to create accounts.",
              "The entity is temporarily disabled and cannot be used for financial activity."
            ]
          },
          "supplemental_documents": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Supplemental Document",
              "description": "Supplemental Documents are uploaded files connected to an Entity during onboarding.",
              "example": {
                "file_id": "file_makxrc67oh9l6sg7w9yc",
                "created_at": "2020-01-31T23:59:59Z",
                "type": "entity_supplemental_document"
              },
              "properties": {
                "file_id": { "type": "string", "description": "The File containing the document." },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Supplemental Document was created."
                },
                "type": {
                  "type": "string",
                  "enum": ["entity_supplemental_document"],
                  "description": "A constant representing the object's type. For this resource it will always be `entity_supplemental_document`."
                }
              },
              "required": ["file_id", "created_at", "type"],
              "x-title-plural": "Supplemental Documents"
            },
            "description": "Additional documentation associated with the entity. This is limited to the first 10 documents for an entity. If an entity has more than 10 documents, use the GET /entity_supplemental_documents list endpoint to retrieve them."
          }
        },
        "required": [
          "id",
          "structure",
          "corporation",
          "natural_person",
          "joint",
          "trust",
          "type",
          "description",
          "status",
          "supplemental_documents"
        ],
        "x-title-plural": "Entities",
        "x-tag": "Entities"
      },
      "entity_list": {
        "type": "object",
        "title": "Entity List",
        "description": "A list of Entity objects.",
        "example": {
          "data": [
            {
              "id": "entity_n8y8tnk2p9339ti393yi",
              "structure": "corporation",
              "corporation": {
                "name": "National Phonograph Company",
                "website": "https://example.com",
                "tax_identifier": "602214076",
                "incorporation_state": "NY",
                "address": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "beneficial_owners": [
                  {
                    "individual": {
                      "name": "Ian Crease",
                      "date_of_birth": "1970-01-31",
                      "address": {
                        "line1": "33 Liberty Street",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "zip": "10045"
                      },
                      "identification": {
                        "method": "social_security_number",
                        "number_last4": "1120",
                        "country": "US"
                      }
                    },
                    "company_title": "CEO",
                    "prong": "control",
                    "beneficial_owner_id": "entity_setup_beneficial_owner_submission_vgkyk7dj5eb4sfhdbkx7"
                  }
                ]
              },
              "natural_person": null,
              "joint": null,
              "trust": null,
              "type": "entity",
              "description": null,
              "status": "active",
              "supplemental_documents": [
                {
                  "file_id": "file_makxrc67oh9l6sg7w9yc",
                  "created_at": "2020-01-31T23:59:59Z",
                  "type": "entity_supplemental_document"
                }
              ]
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/entity" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Entity Lists"
      },
      "supplemental_document_list": {
        "type": "object",
        "title": "Supplemental Document List",
        "description": "A list of Supplemental Document objects.",
        "example": {
          "data": [
            {
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "created_at": "2020-01-31T23:59:59Z",
              "type": "entity_supplemental_document"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/supplemental_document" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Supplemental Document Lists"
      },
      "account_statement_list": {
        "type": "object",
        "title": "Account Statement List",
        "description": "A list of Account Statement objects.",
        "example": {
          "data": [
            {
              "id": "account_statement_lkc03a4skm2k7f38vj15",
              "account_id": "account_in71c4amph0vgo2qllky",
              "created_at": "2020-01-31T23:59:59Z",
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "statement_period_start": "2020-01-31T23:59:59Z",
              "statement_period_end": "2020-01-31T23:59:59Z",
              "starting_balance": 0,
              "ending_balance": 100,
              "type": "account_statement"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/account_statement" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Account Statement Lists"
      },
      "account_statement": {
        "type": "object",
        "title": "Account Statement",
        "description": "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File.",
        "example": {
          "id": "account_statement_lkc03a4skm2k7f38vj15",
          "account_id": "account_in71c4amph0vgo2qllky",
          "created_at": "2020-01-31T23:59:59Z",
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "statement_period_start": "2020-01-31T23:59:59Z",
          "statement_period_end": "2020-01-31T23:59:59Z",
          "starting_balance": 0,
          "ending_balance": 100,
          "type": "account_statement"
        },
        "properties": {
          "id": { "type": "string", "description": "The Account Statement identifier." },
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account this Account Statement belongs to."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Statement was created."
          },
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing a PDF of the statement."
          },
          "statement_period_start": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the start of the period the Account Statement covers."
          },
          "statement_period_end": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the end of the period the Account Statement covers."
          },
          "starting_balance": {
            "type": "integer",
            "description": "The Account's balance at the start of its statement period."
          },
          "ending_balance": {
            "type": "integer",
            "description": "The Account's balance at the start of its statement period."
          },
          "type": {
            "type": "string",
            "enum": ["account_statement"],
            "description": "A constant representing the object's type. For this resource it will always be `account_statement`."
          }
        },
        "required": [
          "id",
          "account_id",
          "created_at",
          "file_id",
          "statement_period_start",
          "statement_period_end",
          "starting_balance",
          "ending_balance",
          "type"
        ],
        "x-title-plural": "Account Statements",
        "x-tag": "Account Statements"
      },
      "file": {
        "type": "object",
        "title": "File",
        "description": "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF).",
        "example": {
          "created_at": "2020-01-31T23:59:59Z",
          "id": "file_makxrc67oh9l6sg7w9yc",
          "purpose": "increase_statement",
          "description": "2022-05 statement for checking account",
          "direction": "from_increase",
          "mime_type": "application/pdf",
          "filename": "statement.pdf",
          "download_url": "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
          "type": "file"
        },
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the File was created."
          },
          "id": { "type": "string", "description": "The File's identifier." },
          "purpose": {
            "type": "string",
            "enum": [
              "check_image_front",
              "check_image_back",
              "mailed_check_image",
              "form_1099_int",
              "form_ss_4",
              "identity_document",
              "increase_statement",
              "other",
              "trust_formation_document",
              "digital_wallet_artwork",
              "digital_wallet_app_icon",
              "physical_card_front",
              "physical_card_back",
              "physical_card_carrier",
              "document_request",
              "entity_supplemental_document",
              "export"
            ],
            "description": "What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
            "x-enum-descriptions": [
              "An image of the front of a check, used for check deposits.",
              "An image of the back of a check, used for check deposits.",
              "An image of a check that was mailed to a recipient.",
              "IRS Form 1099-INT.",
              "IRS Form SS-4.",
              "An image of a government-issued ID.",
              "A statement generated by Increase.",
              "A file purpose not covered by any of the other cases.",
              "A legal document forming a trust.",
              "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
              "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
              "A card image to be printed on the front of a physical card. This must be a 2100x1340 pixel PNG with no other color but black.",
              "The image to be printed on the back of a physical card.",
              "An image representing the entirety of the carrier used for a physical card. This must be a 2550x3300 pixel PNG with no other color but black.",
              "A document requested by Increase.",
              "A supplemental document associated an an Entity.",
              "The results of an Export you requested via the dashboard or API."
            ]
          },
          "description": { "type": "string", "description": "A description of the File.", "nullable": true },
          "direction": {
            "type": "string",
            "enum": ["to_increase", "from_increase"],
            "description": "Whether the File was generated by Increase or by you and sent to Increase.",
            "x-enum-descriptions": [
              "This File was sent by you to Increase.",
              "This File was generated by Increase."
            ]
          },
          "mime_type": { "type": "string", "description": "The MIME type of the file." },
          "filename": {
            "type": "string",
            "description": "The filename that was provided upon upload or generated by Increase.",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "description": "A URL from where the File can be downloaded at this point in time. The location of this URL may change over time.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["file"],
            "description": "A constant representing the object's type. For this resource it will always be `file`."
          }
        },
        "required": [
          "created_at",
          "id",
          "purpose",
          "description",
          "direction",
          "mime_type",
          "filename",
          "download_url",
          "type"
        ],
        "x-title-plural": "Files",
        "x-tag": "Files"
      },
      "file_list": {
        "type": "object",
        "title": "File List",
        "description": "A list of File objects.",
        "example": {
          "data": [
            {
              "created_at": "2020-01-31T23:59:59Z",
              "id": "file_makxrc67oh9l6sg7w9yc",
              "purpose": "increase_statement",
              "description": "2022-05 statement for checking account",
              "direction": "from_increase",
              "mime_type": "application/pdf",
              "filename": "statement.pdf",
              "download_url": "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
              "type": "file"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/file" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "File Lists"
      },
      "document_list": {
        "type": "object",
        "title": "Document List",
        "description": "A list of Document objects.",
        "example": {
          "data": [
            {
              "id": "document_qjtqc6s4c14ve2q89izm",
              "category": "form_1099_int",
              "created_at": "2020-01-31T23:59:59Z",
              "entity_id": "entity_n8y8tnk2p9339ti393yi",
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "type": "document"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/document" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Document Lists"
      },
      "document": {
        "type": "object",
        "title": "Document",
        "description": "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT.",
        "example": {
          "id": "document_qjtqc6s4c14ve2q89izm",
          "category": "form_1099_int",
          "created_at": "2020-01-31T23:59:59Z",
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "type": "document"
        },
        "properties": {
          "id": { "type": "string", "description": "The Document identifier." },
          "category": {
            "type": "string",
            "enum": ["form_1099_int", "proof_of_authorization", "company_information"],
            "description": "The type of document.",
            "x-enum-descriptions": [
              "Internal Revenue Service Form 1099-INT.",
              "A document submitted in response to a proof of authorization request for an ACH transfer.",
              "Company information, such a policies or procedures, typically submitted during our due diligence process."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created."
          },
          "entity_id": {
            "type": "string",
            "description": "The identifier of the Entity the document was generated for.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing the Document's contents."
          },
          "type": {
            "type": "string",
            "enum": ["document"],
            "description": "A constant representing the object's type. For this resource it will always be `document`."
          }
        },
        "required": ["id", "category", "created_at", "entity_id", "file_id", "type"],
        "x-title-plural": "Documents",
        "x-tag": "Documents"
      },
      "event_list": {
        "type": "object",
        "title": "Event List",
        "description": "A list of Event objects.",
        "example": {
          "data": [
            {
              "associated_object_id": "account_in71c4amph0vgo2qllky",
              "associated_object_type": "account",
              "category": "account.created",
              "created_at": "2020-01-31T23:59:59Z",
              "id": "event_001dzz0r20rzr4zrhrr1364hy80",
              "type": "event"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/event" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Event Lists"
      },
      "event": {
        "type": "object",
        "title": "Event",
        "description": "Events are records of things that happened to objects at Increase. Events are accessible via the List Events endpoint and can be delivered to your application via webhooks. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
        "example": {
          "associated_object_id": "account_in71c4amph0vgo2qllky",
          "associated_object_type": "account",
          "category": "account.created",
          "created_at": "2020-01-31T23:59:59Z",
          "id": "event_001dzz0r20rzr4zrhrr1364hy80",
          "type": "event"
        },
        "properties": {
          "associated_object_id": {
            "type": "string",
            "description": "The identifier of the object that generated this Event."
          },
          "associated_object_type": {
            "type": "string",
            "description": "The type of the object that generated this Event."
          },
          "category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "bookkeeping_account.created",
              "bookkeeping_account.updated",
              "bookkeeping_entry_set.updated",
              "card.created",
              "card.updated",
              "card_payment.created",
              "card_payment.updated",
              "card_profile.created",
              "card_profile.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "event_subscription.created",
              "event_subscription.updated",
              "export.created",
              "export.updated",
              "external_account.created",
              "external_account.updated",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer.created",
              "inbound_ach_transfer.updated",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "intrafi_account_enrollment.created",
              "intrafi_account_enrollment.updated",
              "intrafi_exclusion.created",
              "intrafi_exclusion.updated",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "physical_card.created",
              "physical_card.updated",
              "proof_of_authorization_request.created",
              "proof_of_authorization_request.updated",
              "proof_of_authorization_request_submission.created",
              "proof_of_authorization_request_submission.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "The category of the Event. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Bookkeeping Account is created.",
              "Occurs whenever a Bookkeeping Account is updated.",
              "Occurs whenever a Bookkeeping Entry Set is created.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Payment is created.",
              "Occurs whenever a Card Payment is updated.",
              "Occurs whenever a Card Profile is created.",
              "Occurs whenever a Card Profile is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an Event Subscription is created.",
              "Occurs whenever an Event Subscription is updated.",
              "Occurs whenever an Export is created.",
              "Occurs whenever an Export is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever an External Account is updated.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer is created.",
              "Occurs whenever an Inbound ACH Transfer is updated.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an IntraFi Account Enrollment is created.",
              "Occurs whenever an IntraFi Account Enrollment is updated.",
              "Occurs whenever an IntraFi Exclusion is created.",
              "Occurs whenever an IntraFi Exclusion is updated.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Physical Card is created.",
              "Occurs whenever a Physical Card is updated.",
              "Occurs whenever a Proof of Authorization Request is created.",
              "Occurs whenever a Proof of Authorization Request is updated.",
              "Occurs whenever a Proof of Authorization Request Submission is created.",
              "Occurs whenever a Proof of Authorization Request Submission is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real-Time Payments Transfer is created.",
              "Occurs whenever a Real-Time Payments Transfer is updated.",
              "Occurs whenever a Real-Time Payments Request for Payment is created.",
              "Occurs whenever a Real-Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is created.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Event was created."
          },
          "id": { "type": "string", "description": "The Event identifier." },
          "type": {
            "type": "string",
            "enum": ["event"],
            "description": "A constant representing the object's type. For this resource it will always be `event`."
          }
        },
        "required": [
          "associated_object_id",
          "associated_object_type",
          "category",
          "created_at",
          "id",
          "type"
        ],
        "x-title-plural": "Events",
        "x-tag": "Events"
      },
      "event_subscription": {
        "type": "object",
        "title": "Event Subscription",
        "description": "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
        "properties": {
          "id": { "type": "string", "description": "The event subscription identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the event subscription was created."
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "deleted", "requires_attention"],
            "description": "This indicates if we'll send notifications to this subscription.",
            "x-enum-descriptions": [
              "The subscription is active and Events will be delivered normally.",
              "The subscription is temporarily disabled and Events will not be delivered.",
              "The subscription is permanently disabled and Events will not be delivered.",
              "The subscription is temporarily disabled due to delivery errors and Events will not be delivered."
            ]
          },
          "selected_event_category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "bookkeeping_account.created",
              "bookkeeping_account.updated",
              "bookkeeping_entry_set.updated",
              "card.created",
              "card.updated",
              "card_payment.created",
              "card_payment.updated",
              "card_profile.created",
              "card_profile.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "event_subscription.created",
              "event_subscription.updated",
              "export.created",
              "export.updated",
              "external_account.created",
              "external_account.updated",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer.created",
              "inbound_ach_transfer.updated",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "intrafi_account_enrollment.created",
              "intrafi_account_enrollment.updated",
              "intrafi_exclusion.created",
              "intrafi_exclusion.updated",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "physical_card.created",
              "physical_card.updated",
              "proof_of_authorization_request.created",
              "proof_of_authorization_request.updated",
              "proof_of_authorization_request_submission.created",
              "proof_of_authorization_request_submission.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
            "nullable": true,
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Bookkeeping Account is created.",
              "Occurs whenever a Bookkeeping Account is updated.",
              "Occurs whenever a Bookkeeping Entry Set is created.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Payment is created.",
              "Occurs whenever a Card Payment is updated.",
              "Occurs whenever a Card Profile is created.",
              "Occurs whenever a Card Profile is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an Event Subscription is created.",
              "Occurs whenever an Event Subscription is updated.",
              "Occurs whenever an Export is created.",
              "Occurs whenever an Export is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever an External Account is updated.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer is created.",
              "Occurs whenever an Inbound ACH Transfer is updated.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an IntraFi Account Enrollment is created.",
              "Occurs whenever an IntraFi Account Enrollment is updated.",
              "Occurs whenever an IntraFi Exclusion is created.",
              "Occurs whenever an IntraFi Exclusion is updated.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Physical Card is created.",
              "Occurs whenever a Physical Card is updated.",
              "Occurs whenever a Proof of Authorization Request is created.",
              "Occurs whenever a Proof of Authorization Request is updated.",
              "Occurs whenever a Proof of Authorization Request Submission is created.",
              "Occurs whenever a Proof of Authorization Request Submission is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real-Time Payments Transfer is created.",
              "Occurs whenever a Real-Time Payments Transfer is updated.",
              "Occurs whenever a Real-Time Payments Request for Payment is created.",
              "Occurs whenever a Real-Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is created.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          },
          "url": { "type": "string", "description": "The webhook url where we'll send notifications." },
          "type": {
            "type": "string",
            "enum": ["event_subscription"],
            "description": "A constant representing the object's type. For this resource it will always be `event_subscription`."
          }
        },
        "required": ["id", "created_at", "status", "selected_event_category", "url", "type"],
        "x-title-plural": "Event Subscriptions",
        "x-tag": "Event Subscriptions"
      },
      "event_subscription_list": {
        "type": "object",
        "title": "Event Subscription List",
        "description": "A list of Event Subscription objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/event_subscription" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Event Subscription Lists"
      },
      "real_time_decision": {
        "type": "object",
        "title": "Real-Time Decision",
        "description": "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!",
        "example": {
          "id": "real_time_decision_j76n2e810ezcg3zh5qtn",
          "created_at": "2020-01-31T23:59:59Z",
          "timeout_at": "2020-01-31T23:59:59Z",
          "status": "pending",
          "category": "card_authorization_requested",
          "card_authorization": {
            "merchant_acceptor_id": "5665270011000168",
            "merchant_descriptor": "AMAZON.COM",
            "merchant_category_code": "5734",
            "merchant_city": "New York",
            "merchant_country": "US",
            "digital_wallet_token_id": null,
            "physical_card_id": null,
            "verification": {
              "cardholder_address": {
                "provided_postal_code": "94132",
                "provided_line1": "33 Liberty Street",
                "actual_postal_code": "94131",
                "actual_line1": "33 Liberty Street",
                "result": "postal_code_no_match_address_match"
              },
              "card_verification_code": { "result": "match" }
            },
            "network_identifiers": {
              "transaction_id": "627199945183184",
              "trace_number": "487941",
              "retrieval_reference_number": "785867080153"
            },
            "network_details": {
              "category": "visa",
              "visa": {
                "electronic_commerce_indicator": "secure_electronic_commerce",
                "point_of_service_entry_mode": "manual"
              }
            },
            "decision": "approve",
            "card_id": "card_oubs0hwk5rn6knuecxg2",
            "account_id": "account_in71c4amph0vgo2qllky",
            "presentment_amount": 100,
            "presentment_currency": "USD",
            "settlement_amount": 100,
            "settlement_currency": "USD",
            "processing_category": "purchase",
            "request_details": {
              "category": "initial_authorization",
              "initial_authorization": {},
              "incremental_authorization": null
            }
          },
          "digital_wallet_token": null,
          "digital_wallet_authentication": null,
          "type": "real_time_decision"
        },
        "properties": {
          "id": { "type": "string", "description": "The Real-Time Decision identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Real-Time Decision was created."
          },
          "timeout_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which your application can no longer respond to the Real-Time Decision."
          },
          "status": {
            "type": "string",
            "enum": ["pending", "responded", "timed_out"],
            "description": "The status of the Real-Time Decision.",
            "x-enum-descriptions": [
              "The decision is pending action via real-time webhook.",
              "Your webhook actioned the real-time decision.",
              "Your webhook failed to respond to the authorization in time."
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "card_authorization_requested",
              "digital_wallet_token_requested",
              "digital_wallet_authentication_requested"
            ],
            "description": "The category of the Real-Time Decision.",
            "x-enum-descriptions": [
              "A card is being authorized.",
              "A card is being loaded into a digital wallet.",
              "A card is being loaded into a digital wallet and requires cardholder authentication."
            ]
          },
          "card_authorization": {
            "type": "object",
            "title": "Card Authorization",
            "description": "Fields related to a card authorization.",
            "properties": {
              "merchant_acceptor_id": {
                "type": "string",
                "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
              },
              "merchant_descriptor": {
                "type": "string",
                "description": "The merchant descriptor of the merchant the card is transacting with."
              },
              "merchant_category_code": {
                "type": "string",
                "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                "nullable": true
              },
              "merchant_city": {
                "type": "string",
                "description": "The city the merchant resides in.",
                "nullable": true
              },
              "merchant_country": {
                "type": "string",
                "description": "The country the merchant resides in.",
                "nullable": true
              },
              "digital_wallet_token_id": {
                "type": "string",
                "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                "nullable": true
              },
              "physical_card_id": {
                "type": "string",
                "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                "nullable": true
              },
              "verification": {
                "type": "object",
                "description": "Fields related to verification of cardholder-provided values.",
                "properties": {
                  "cardholder_address": {
                    "type": "object",
                    "title": "Cardholder Address",
                    "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                    "properties": {
                      "provided_postal_code": {
                        "type": "string",
                        "description": "The postal code provided for verification in the authorization request.",
                        "nullable": true
                      },
                      "provided_line1": {
                        "type": "string",
                        "description": "The cardholder address line 1 provided for verification in the authorization request.",
                        "nullable": true
                      },
                      "actual_postal_code": {
                        "type": "string",
                        "description": "The postal code of the address on file for the cardholder.",
                        "nullable": true
                      },
                      "actual_line1": {
                        "type": "string",
                        "description": "Line 1 of the address on file for the cardholder.",
                        "nullable": true
                      },
                      "result": {
                        "type": "string",
                        "enum": [
                          "not_checked",
                          "postal_code_match_address_not_checked",
                          "postal_code_match_address_no_match",
                          "postal_code_no_match_address_match",
                          "match",
                          "no_match"
                        ],
                        "description": "The address verification result returned to the card network.",
                        "x-enum-descriptions": [
                          "No adress was provided in the authorization request.",
                          "Postal code matches, but the street address was not verified.",
                          "Postal code matches, but the street address does not match.",
                          "Postal code does not match, but the street address matches.",
                          "Postal code and street address match.",
                          "Postal code and street address do not match."
                        ]
                      }
                    },
                    "required": [
                      "provided_postal_code",
                      "provided_line1",
                      "actual_postal_code",
                      "actual_line1",
                      "result"
                    ],
                    "x-title-plural": "Cardholder Addresses"
                  },
                  "card_verification_code": {
                    "type": "object",
                    "title": "Card Verification Code",
                    "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                    "properties": {
                      "result": {
                        "type": "string",
                        "enum": ["not_checked", "match", "no_match"],
                        "description": "The result of verifying the Card Verification Code.",
                        "x-enum-descriptions": [
                          "No card verification code was provided in the authorization request.",
                          "The card verification code matched the one on file.",
                          "The card verification code did not match the one on file."
                        ]
                      }
                    },
                    "required": ["result"],
                    "x-title-plural": "Card Verification Codes"
                  }
                },
                "required": ["cardholder_address", "card_verification_code"],
                "x-title-plural": "s"
              },
              "network_identifiers": {
                "type": "object",
                "description": "Network-specific identifiers for a specific request or transaction.",
                "example": {
                  "transaction_id": "627199945183184",
                  "trace_number": "487941",
                  "retrieval_reference_number": "785867080153"
                },
                "properties": {
                  "transaction_id": {
                    "type": "string",
                    "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                    "nullable": true
                  },
                  "trace_number": {
                    "type": "string",
                    "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                    "nullable": true
                  },
                  "retrieval_reference_number": {
                    "type": "string",
                    "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                    "nullable": true
                  }
                },
                "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                "x-title-plural": "s"
              },
              "network_details": {
                "type": "object",
                "description": "Fields specific to the `network`.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["visa"],
                    "description": "The payment network used to process this card authorization.",
                    "x-enum-descriptions": ["Visa"]
                  },
                  "visa": {
                    "type": "object",
                    "title": "Visa",
                    "description": "Fields specific to the `visa` network.",
                    "properties": {
                      "electronic_commerce_indicator": {
                        "type": "string",
                        "enum": [
                          "mail_phone_order",
                          "recurring",
                          "installment",
                          "unknown_mail_phone_order",
                          "secure_electronic_commerce",
                          "non_authenticated_security_transaction_at_3ds_capable_merchant",
                          "non_authenticated_security_transaction",
                          "non_secure_transaction"
                        ],
                        "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                        "nullable": true,
                        "x-enum-descriptions": [
                          "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                          "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                          "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                          "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                          "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                          "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                          "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                          "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                        ]
                      },
                      "point_of_service_entry_mode": {
                        "$ref": "#/components/schemas/point_of_service_entry_mode"
                      }
                    },
                    "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                    "nullable": true,
                    "x-title-plural": "Visas"
                  }
                },
                "required": ["category", "visa"],
                "x-title-plural": "s"
              },
              "decision": {
                "type": "string",
                "enum": ["approve", "decline"],
                "description": "Whether or not the authorization was approved.",
                "nullable": true,
                "x-enum-descriptions": ["Approve the authorization.", "Decline the authorization."]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being authorized."
              },
              "account_id": {
                "type": "string",
                "description": "The identifier of the Account the authorization will debit."
              },
              "presentment_amount": {
                "type": "integer",
                "description": "The amount of the attempted authorization in the currency the card user sees at the time of purchase, in the minor unit of that currency. For dollars, for example, this is cents."
              },
              "presentment_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the user sees at the time of purchase."
              },
              "settlement_amount": {
                "type": "integer",
                "description": "The amount of the attempted authorization in the currency it will be settled in. This currency is the same as that of the Account the card belongs to."
              },
              "settlement_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the transaction will be settled in."
              },
              "processing_category": {
                "type": "string",
                "enum": [
                  "account_funding",
                  "automatic_fuel_dispenser",
                  "bill_payment",
                  "purchase",
                  "quasi_cash",
                  "refund"
                ],
                "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                "x-enum-descriptions": [
                  "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                  "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                  "A transaction used to pay a bill.",
                  "A regular purchase.",
                  "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                  "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                ]
              },
              "request_details": {
                "type": "object",
                "title": "Request Details",
                "description": "Fields specific to the type of request, such as an incremental authorization.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["initial_authorization", "incremental_authorization"],
                    "description": "The type of this request (e.g., an initial authorization or an incremental authorization).",
                    "x-enum-descriptions": [
                      "A regular, standalone authorization.",
                      "An incremental request to increase the amount of an existing authorization."
                    ]
                  },
                  "initial_authorization": {
                    "type": "object",
                    "title": "Initial Authorization",
                    "description": "Fields specific to the category `initial_authorization`.",
                    "properties": {},
                    "nullable": true,
                    "x-title-plural": "Initial Authorizations"
                  },
                  "incremental_authorization": {
                    "type": "object",
                    "title": "Incremental Authorization",
                    "description": "Fields specific to the category `incremental_authorization`.",
                    "properties": {
                      "card_payment_id": {
                        "type": "string",
                        "description": "The card payment for this authorization and increment."
                      },
                      "original_card_authorization_id": {
                        "type": "string",
                        "description": "The identifier of the card authorization this request is attempting to increment."
                      }
                    },
                    "required": ["card_payment_id", "original_card_authorization_id"],
                    "nullable": true,
                    "x-title-plural": "Incremental Authorizations"
                  }
                },
                "required": ["category", "initial_authorization", "incremental_authorization"],
                "x-title-plural": "Request Details"
              }
            },
            "required": [
              "merchant_acceptor_id",
              "merchant_descriptor",
              "merchant_category_code",
              "merchant_city",
              "merchant_country",
              "digital_wallet_token_id",
              "physical_card_id",
              "verification",
              "network_identifiers",
              "network_details",
              "decision",
              "card_id",
              "account_id",
              "presentment_amount",
              "presentment_currency",
              "settlement_amount",
              "settlement_currency",
              "processing_category",
              "request_details"
            ],
            "nullable": true,
            "x-title-plural": "Card Authorizations"
          },
          "digital_wallet_token": {
            "type": "object",
            "title": "Digital Wallet Token",
            "description": "Fields related to a digital wallet token provisioning attempt.",
            "properties": {
              "decision": {
                "type": "string",
                "enum": ["approve", "decline"],
                "description": "Whether or not the provisioning request was approved. This will be null until the real time decision is responded to.",
                "nullable": true,
                "x-enum-descriptions": [
                  "Approve the provisioning request.",
                  "Decline the provisioning request."
                ]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being tokenized."
              },
              "digital_wallet": {
                "type": "string",
                "enum": ["apple_pay", "google_pay", "unknown"],
                "description": "The digital wallet app being used.",
                "x-enum-descriptions": ["Apple Pay", "Google Pay", "Unknown"]
              },
              "card_profile_id": {
                "type": "string",
                "description": "The identifier of the Card Profile that was set via the real time decision. This will be null until the real time decision is responded to or if the real time decision did not set a card profile.",
                "nullable": true
              }
            },
            "required": ["decision", "card_id", "digital_wallet", "card_profile_id"],
            "nullable": true,
            "x-title-plural": "Digital Wallet Tokens"
          },
          "digital_wallet_authentication": {
            "type": "object",
            "title": "Digital Wallet Authentication",
            "description": "Fields related to a digital wallet authentication attempt.",
            "properties": {
              "result": {
                "type": "string",
                "enum": ["success", "failure"],
                "description": "Whether your application successfully delivered the one-time passcode.",
                "nullable": true,
                "x-enum-descriptions": [
                  "Your application successfully delivered the one-time passcode to the cardholder.",
                  "Your application failed to deliver the one-time passcode to the cardholder."
                ]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being tokenized."
              },
              "digital_wallet": {
                "type": "string",
                "enum": ["apple_pay", "google_pay", "unknown"],
                "description": "The digital wallet app being used.",
                "x-enum-descriptions": ["Apple Pay", "Google Pay", "Unknown"]
              },
              "channel": {
                "type": "string",
                "enum": ["sms", "email"],
                "description": "The channel to send the card user their one-time passcode.",
                "x-enum-descriptions": [
                  "Send one-time passcodes over SMS.",
                  "Send one-time passcodes over email."
                ]
              },
              "one_time_passcode": {
                "type": "string",
                "description": "The one-time passcode to send the card user."
              },
              "phone": {
                "type": "string",
                "description": "The phone number to send the one-time passcode to if `channel` is equal to `sms`.",
                "nullable": true
              },
              "email": {
                "type": "string",
                "description": "The email to send the one-time passcode to if `channel` is equal to `email`.",
                "nullable": true
              }
            },
            "required": [
              "result",
              "card_id",
              "digital_wallet",
              "channel",
              "one_time_passcode",
              "phone",
              "email"
            ],
            "nullable": true,
            "x-title-plural": "Digital Wallet Authentications"
          },
          "type": {
            "type": "string",
            "enum": ["real_time_decision"],
            "description": "A constant representing the object's type. For this resource it will always be `real_time_decision`."
          }
        },
        "required": [
          "id",
          "created_at",
          "timeout_at",
          "status",
          "category",
          "card_authorization",
          "digital_wallet_token",
          "digital_wallet_authentication",
          "type"
        ],
        "x-title-plural": "Real-Time Decisions",
        "x-tag": "Real-Time Decisions"
      },
      "export": {
        "type": "object",
        "title": "Export",
        "description": "Exports are batch summaries of your Increase data. You can make them from the API or dashboard. Since they can take a while, they are generated asynchronously. We send a webhook when they are ready. For more information, please read our [Exports documentation](https://increase.com/documentation/exports).",
        "example": {
          "id": "export_8s4m48qz3bclzje0zwh9",
          "created_at": "2020-01-31T23:59:59Z",
          "category": "transaction_csv",
          "status": "complete",
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "file_download_url": "https://example.com/file",
          "type": "export"
        },
        "properties": {
          "id": { "type": "string", "description": "The Export identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Export was created."
          },
          "category": {
            "type": "string",
            "enum": [
              "account_statement_ofx",
              "transaction_csv",
              "balance_csv",
              "bookkeeping_account_balance_csv",
              "entity_csv"
            ],
            "description": "The category of the Export. We may add additional possible values for this enum over time; your application should be able to handle that gracefully.",
            "x-enum-descriptions": [
              "Export an Open Financial Exchange (OFX) file of transactions and balances for a given time range and Account.",
              "Export a CSV of all transactions for a given time range.",
              "Export a CSV of account balances for the dates in a given range.",
              "Export a CSV of bookkeeping account balances for the dates in a given range.",
              "Export a CSV of entities with a given status."
            ]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "complete", "failed"],
            "description": "The status of the Export.",
            "x-enum-descriptions": [
              "Increase is generating the export.",
              "The export has been successfully generated.",
              "The export failed to generate. Increase will reach out to you to resolve the issue."
            ]
          },
          "file_id": {
            "type": "string",
            "description": "The File containing the contents of the Export. This will be present when the Export's status transitions to `complete`.",
            "nullable": true
          },
          "file_download_url": {
            "type": "string",
            "description": "A URL at which the Export's file can be downloaded. This will be present when the Export's status transitions to `complete`.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["export"],
            "description": "A constant representing the object's type. For this resource it will always be `export`."
          }
        },
        "required": ["id", "created_at", "category", "status", "file_id", "file_download_url", "type"],
        "x-title-plural": "Exports",
        "x-tag": "Exports"
      },
      "export_list": {
        "type": "object",
        "title": "Export List",
        "description": "A list of Export objects.",
        "example": {
          "data": [
            {
              "id": "export_8s4m48qz3bclzje0zwh9",
              "created_at": "2020-01-31T23:59:59Z",
              "category": "transaction_csv",
              "status": "complete",
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "file_download_url": "https://example.com/file",
              "type": "export"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/export" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Export Lists"
      },
      "group": {
        "type": "object",
        "title": "Group",
        "description": "Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.",
        "example": {
          "activation_status": "activated",
          "ach_debit_status": "disabled",
          "created_at": "2020-01-31T23:59:59Z",
          "id": "group_1g4mhziu6kvrs3vz35um",
          "type": "group"
        },
        "properties": {
          "activation_status": {
            "type": "string",
            "enum": ["unactivated", "activated"],
            "description": "If the Group is activated or not.",
            "x-enum-descriptions": ["The Group is not activated.", "The Group is activated."]
          },
          "ach_debit_status": {
            "type": "string",
            "enum": ["disabled", "enabled"],
            "description": "If the Group is allowed to create ACH debits.",
            "x-enum-descriptions": ["The Group cannot make ACH debits.", "The Group can make ACH debits."]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created."
          },
          "id": { "type": "string", "description": "The Group identifier." },
          "type": {
            "type": "string",
            "enum": ["group"],
            "description": "A constant representing the object's type. For this resource it will always be `group`."
          }
        },
        "required": ["activation_status", "ach_debit_status", "created_at", "id", "type"],
        "x-title-plural": "Groups",
        "x-tag": "Groups"
      },
      "program_list": {
        "type": "object",
        "title": "Program List",
        "description": "A list of Program objects.",
        "example": {
          "data": [
            {
              "name": "Commercial Banking",
              "created_at": "2020-01-31T23:59:59Z",
              "updated_at": "2020-01-31T23:59:59Z",
              "id": "program_i2v2os4mwza1oetokh9i",
              "type": "program"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/program" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Program Lists"
      },
      "program": {
        "type": "object",
        "title": "Program",
        "description": "Programs determine the compliance and commercial terms of Accounts. By default, you have a Commercial Banking program for managing your own funds. If you are lending or managing funds on behalf of your customers, or otherwise engaged in regulated activity, we will work together to create additional Programs for you.",
        "example": {
          "name": "Commercial Banking",
          "created_at": "2020-01-31T23:59:59Z",
          "updated_at": "2020-01-31T23:59:59Z",
          "id": "program_i2v2os4mwza1oetokh9i",
          "type": "program"
        },
        "properties": {
          "name": { "type": "string", "description": "The name of the Program." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Program was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Program was last updated."
          },
          "id": { "type": "string", "description": "The Program identifier." },
          "type": {
            "type": "string",
            "enum": ["program"],
            "description": "A constant representing the object's type. For this resource it will always be `program`."
          }
        },
        "required": ["name", "created_at", "updated_at", "id", "type"],
        "x-title-plural": "Programs",
        "x-tag": "Programs"
      },
      "bookkeeping_account": {
        "type": "object",
        "title": "Bookkeeping Account",
        "description": "Accounts are T-accounts. They can store accounting entries. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping).",
        "example": {
          "id": "bookkeeping_account_e37p1f1iuocw5intf35v",
          "compliance_category": "customer_balance",
          "account_id": null,
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "name": "John Doe Balance",
          "type": "bookkeeping_account"
        },
        "properties": {
          "id": { "type": "string", "description": "The account identifier." },
          "compliance_category": {
            "type": "string",
            "enum": ["commingled_cash", "customer_balance"],
            "description": "The compliance category of the account.",
            "nullable": true,
            "x-enum-descriptions": ["A cash in an commingled Increase Account.", "A customer balance."]
          },
          "account_id": {
            "type": "string",
            "description": "The API Account associated with this bookkeeping account.",
            "nullable": true
          },
          "entity_id": {
            "type": "string",
            "description": "The Entity associated with this bookkeeping account.",
            "nullable": true
          },
          "name": { "type": "string", "description": "The name you choose for the account." },
          "type": {
            "type": "string",
            "enum": ["bookkeeping_account"],
            "description": "A constant representing the object's type. For this resource it will always be `bookkeeping_account`."
          }
        },
        "required": ["id", "compliance_category", "account_id", "entity_id", "name", "type"],
        "x-title-plural": "Bookkeeping Accounts",
        "x-tag": "Bookkeeping Accounts"
      },
      "bookkeeping_account_list": {
        "type": "object",
        "title": "Bookkeeping Account List",
        "description": "A list of Bookkeeping Account objects.",
        "example": {
          "data": [
            {
              "id": "bookkeeping_account_e37p1f1iuocw5intf35v",
              "compliance_category": "customer_balance",
              "account_id": null,
              "entity_id": "entity_n8y8tnk2p9339ti393yi",
              "name": "John Doe Balance",
              "type": "bookkeeping_account"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/bookkeeping_account" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Bookkeeping Account Lists"
      },
      "bookkeeping_balance_lookup": {
        "type": "object",
        "title": "Bookkeeping Balance Lookup",
        "description": "Represents a request to lookup the balance of an Bookkeeping Account at a given point in time.",
        "example": {
          "bookkeeping_account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
          "balance": 100,
          "type": "bookkeeping_balance_lookup"
        },
        "properties": {
          "bookkeeping_account_id": {
            "type": "string",
            "description": "The identifier for the account for which the balance was queried."
          },
          "balance": {
            "type": "integer",
            "description": "The Bookkeeping Account's current balance, representing the sum of all Bookkeeping Entries on the Bookkeeping Account."
          },
          "type": {
            "type": "string",
            "enum": ["bookkeeping_balance_lookup"],
            "description": "A constant representing the object's type. For this resource it will always be `bookkeeping_balance_lookup`."
          }
        },
        "required": ["bookkeeping_account_id", "balance", "type"],
        "x-title-plural": "Bookkeeping Balance Lookups"
      },
      "bookkeeping_entry_set": {
        "type": "object",
        "title": "Bookkeeping Entry Set",
        "description": "Entry Sets are accounting entries that are transactionally applied. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping).",
        "example": {
          "id": "bookkeeping_entry_set_n80c6wr2p8gtc6p4ingf",
          "transaction_id": null,
          "date": "2020-01-31T23:59:59Z",
          "entries": [
            {
              "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
              "amount": 1750,
              "id": "bookkeeping_entry_ctjpajsj3ks2blx10375"
            },
            {
              "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
              "amount": -1750,
              "id": "bookkeeping_entry_ctjpajsj3ks2blx10375"
            }
          ],
          "created_at": "2023-02-11T02:11:59Z",
          "type": "bookkeeping_entry_set"
        },
        "properties": {
          "id": { "type": "string", "description": "The entry set identifier." },
          "transaction_id": {
            "type": "string",
            "description": "The transaction identifier, if any.",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of the entry set."
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Entries Element",
              "properties": {
                "account_id": {
                  "type": "string",
                  "description": "The bookkeeping account impacted by the entry."
                },
                "amount": { "type": "integer", "description": "The amount of the entry in minor units." },
                "id": { "type": "string", "description": "The entry identifier." }
              },
              "required": ["account_id", "amount", "id"],
              "x-title-plural": "Entries Elements"
            },
            "description": "The entries."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the entry set was created."
          },
          "type": {
            "type": "string",
            "enum": ["bookkeeping_entry_set"],
            "description": "A constant representing the object's type. For this resource it will always be `bookkeeping_entry_set`."
          }
        },
        "required": ["id", "transaction_id", "date", "entries", "created_at", "type"],
        "x-title-plural": "Bookkeeping Entry Sets",
        "x-tag": "Bookkeeping Entry Sets"
      },
      "bookkeeping_entry_set_list": {
        "type": "object",
        "title": "Bookkeeping Entry Set List",
        "description": "A list of Bookkeeping Entry Set objects.",
        "example": {
          "data": [
            {
              "id": "bookkeeping_entry_set_n80c6wr2p8gtc6p4ingf",
              "transaction_id": null,
              "date": "2020-01-31T23:59:59Z",
              "entries": [
                {
                  "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
                  "amount": 1750,
                  "id": "bookkeeping_entry_ctjpajsj3ks2blx10375"
                },
                {
                  "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
                  "amount": -1750,
                  "id": "bookkeeping_entry_ctjpajsj3ks2blx10375"
                }
              ],
              "created_at": "2023-02-11T02:11:59Z",
              "type": "bookkeeping_entry_set"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/bookkeeping_entry_set" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Bookkeeping Entry Set Lists"
      },
      "bookkeeping_entry_list": {
        "type": "object",
        "title": "Bookkeeping Entry List",
        "description": "A list of Bookkeeping Entry objects.",
        "example": {
          "data": [
            {
              "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
              "amount": 1750,
              "entry_set_id": "bookkeeping_entry_set_n80c6wr2p8gtc6p4ingf",
              "id": "bookkeeping_entry_ctjpajsj3ks2blx10375",
              "created_at": "2020-01-31T23:59:59Z",
              "type": "bookkeeping_entry"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/bookkeeping_entry" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Bookkeeping Entry Lists"
      },
      "bookkeeping_entry": {
        "type": "object",
        "title": "Bookkeeping Entry",
        "description": "Entries are T-account entries recording debits and credits. Your compliance setup might require annotating money movements using this API. Learn more in our [guide to Bookkeeping](https://increase.com/documentation/bookkeeping#bookkeeping).",
        "example": {
          "account_id": "bookkeeping_account_e37p1f1iuocw5intf35v",
          "amount": 1750,
          "entry_set_id": "bookkeeping_entry_set_n80c6wr2p8gtc6p4ingf",
          "id": "bookkeeping_entry_ctjpajsj3ks2blx10375",
          "created_at": "2020-01-31T23:59:59Z",
          "type": "bookkeeping_entry"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Entry belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Entry amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "entry_set_id": {
            "type": "string",
            "description": "The identifier for the Account the Entry belongs to."
          },
          "id": { "type": "string", "description": "The entry identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the entry set was created."
          },
          "type": {
            "type": "string",
            "enum": ["bookkeeping_entry"],
            "description": "A constant representing the object's type. For this resource it will always be `bookkeeping_entry`."
          }
        },
        "required": ["account_id", "amount", "entry_set_id", "id", "created_at", "type"],
        "x-title-plural": "Bookkeeping Entries",
        "x-tag": "Bookkeeping Entries"
      },
      "oauth_connection_list": {
        "type": "object",
        "title": "OAuth Connection List",
        "description": "A list of OAuth Connection objects.",
        "example": {
          "data": [
            {
              "id": "connection_dauknoksyr4wilz4e6my",
              "created_at": "2020-01-31T23:59:59Z",
              "group_id": "group_1g4mhziu6kvrs3vz35um",
              "status": "active",
              "type": "oauth_connection"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/oauth_connection" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "OAuth Connection Lists"
      },
      "oauth_connection": {
        "type": "object",
        "title": "OAuth Connection",
        "description": "When a user authorizes your OAuth application, an OAuth Connection object is created.",
        "example": {
          "id": "connection_dauknoksyr4wilz4e6my",
          "created_at": "2020-01-31T23:59:59Z",
          "group_id": "group_1g4mhziu6kvrs3vz35um",
          "status": "active",
          "type": "oauth_connection"
        },
        "properties": {
          "id": { "type": "string", "description": "The OAuth Connection's identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created."
          },
          "group_id": {
            "type": "string",
            "description": "The identifier of the Group that has authorized your OAuth application."
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive"],
            "description": "Whether the connection is active.",
            "x-enum-descriptions": [
              "The OAuth connection is active.",
              "The OAuth connection is permanently deactivated."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["oauth_connection"],
            "description": "A constant representing the object's type. For this resource it will always be `oauth_connection`."
          }
        },
        "required": ["id", "created_at", "group_id", "status", "type"],
        "x-title-plural": "OAuth Connections",
        "x-tag": "OAuth Connections"
      },
      "card_purchase_supplement_list": {
        "type": "object",
        "title": "Card Purchase Supplement List",
        "description": "A list of Card Purchase Supplement objects.",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/card_purchase_supplement" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Card Purchase Supplement Lists"
      },
      "card_purchase_supplement": {
        "type": "object",
        "title": "Card Purchase Supplement",
        "description": "Additional information about a card purchase (e.g., settlement or refund), such as level 3 line item data.",
        "properties": {
          "id": { "type": "string", "description": "The Card Purchase Supplement identifier." },
          "transaction_id": { "type": "string", "description": "The ID of the transaction." },
          "card_payment_id": {
            "type": "string",
            "description": "The ID of the Card Payment this transaction belongs to.",
            "nullable": true
          },
          "invoice": {
            "type": "object",
            "title": "Invoice",
            "description": "Invoice-level information about the payment.",
            "properties": {
              "discount_amount": {
                "type": "integer",
                "description": "Discount given to cardholder.",
                "nullable": true
              },
              "discount_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the discount.",
                "nullable": true
              },
              "shipping_amount": { "type": "integer", "description": "The shipping cost.", "nullable": true },
              "shipping_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the shipping cost.",
                "nullable": true
              },
              "duty_tax_amount": {
                "type": "integer",
                "description": "Amount of duty taxes.",
                "nullable": true
              },
              "duty_tax_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the duty tax.",
                "nullable": true
              },
              "shipping_tax_amount": {
                "type": "integer",
                "description": "Taxes paid for freight and shipping.",
                "nullable": true
              },
              "shipping_tax_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the shipping tax.",
                "nullable": true
              },
              "shipping_tax_rate": {
                "type": "string",
                "pattern": "^-?\\d+(\\.\\d+)?$",
                "description": "Tax rate for freight and shipping.",
                "nullable": true
              },
              "shipping_destination_postal_code": {
                "type": "string",
                "description": "Postal code of the shipping destination.",
                "nullable": true
              },
              "shipping_destination_country_code": {
                "type": "string",
                "description": "Country code of the shipping destination.",
                "nullable": true
              },
              "shipping_source_postal_code": {
                "type": "string",
                "description": "Postal code of the location being shipped from.",
                "nullable": true
              },
              "unique_value_added_tax_invoice_reference": {
                "type": "string",
                "description": "Value added tax invoice reference number.",
                "nullable": true
              },
              "order_date": {
                "type": "string",
                "format": "date",
                "description": "Date the order was taken.",
                "nullable": true
              },
              "discount_treatment_code": {
                "type": "string",
                "enum": [
                  "no_invoice_level_discount_provided",
                  "tax_calculated_on_post_discount_invoice_total",
                  "tax_calculated_on_pre_discount_invoice_total"
                ],
                "description": "Indicates how the merchant applied the discount.",
                "nullable": true,
                "x-enum-descriptions": [
                  "No invoice level discount provided",
                  "Tax calculated on post discount invoice total",
                  "Tax calculated on pre discount invoice total"
                ]
              },
              "tax_treatments": {
                "type": "string",
                "enum": [
                  "no_tax_applies",
                  "net_price_line_item_level",
                  "net_price_invoice_level",
                  "gross_price_line_item_level",
                  "gross_price_invoice_level"
                ],
                "description": "Indicates how the merchant applied taxes.",
                "nullable": true,
                "x-enum-descriptions": [
                  "No tax applies",
                  "Net price line item level",
                  "Net price invoice level",
                  "Gross price line item level",
                  "Gross price invoice level"
                ]
              }
            },
            "required": [
              "discount_amount",
              "discount_currency",
              "shipping_amount",
              "shipping_currency",
              "duty_tax_amount",
              "duty_tax_currency",
              "shipping_tax_amount",
              "shipping_tax_currency",
              "shipping_tax_rate",
              "shipping_destination_postal_code",
              "shipping_destination_country_code",
              "shipping_source_postal_code",
              "unique_value_added_tax_invoice_reference",
              "order_date",
              "discount_treatment_code",
              "tax_treatments"
            ],
            "nullable": true,
            "x-title-plural": "Invoices"
          },
          "line_items": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Line Items Element",
              "properties": {
                "item_commodity_code": {
                  "type": "string",
                  "description": "Code used to categorize the purchase item.",
                  "nullable": true
                },
                "item_descriptor": {
                  "type": "string",
                  "description": "Description of the purchase item.",
                  "nullable": true
                },
                "product_code": {
                  "type": "string",
                  "description": "Code used to categorize the product being purchased.",
                  "nullable": true
                },
                "item_quantity": {
                  "type": "string",
                  "pattern": "^-?\\d+(\\.\\d+)?$",
                  "description": "The number of units of the product being purchased.",
                  "nullable": true
                },
                "unit_of_measure_code": {
                  "type": "string",
                  "description": "Code indicating unit of measure (gallons, etc.).",
                  "nullable": true
                },
                "unit_cost": {
                  "type": "string",
                  "pattern": "^-?\\d+(\\.\\d+)?$",
                  "description": "Cost of line item per unit of measure, in major units.",
                  "nullable": true
                },
                "unit_cost_currency": {
                  "type": "string",
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the unit cost.",
                  "nullable": true
                },
                "sales_tax_amount": {
                  "type": "integer",
                  "description": "Sales tax amount for this line item.",
                  "nullable": true
                },
                "sales_tax_currency": {
                  "type": "string",
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the sales tax assessed.",
                  "nullable": true
                },
                "sales_tax_rate": {
                  "type": "string",
                  "pattern": "^-?\\d+(\\.\\d+)?$",
                  "description": "Sales tax rate for this line item.",
                  "nullable": true
                },
                "discount_amount": {
                  "type": "integer",
                  "description": "Discount amount for this specific line item.",
                  "nullable": true
                },
                "discount_currency": {
                  "type": "string",
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the discount.",
                  "nullable": true
                },
                "discount_treatment_code": {
                  "type": "string",
                  "enum": [
                    "no_line_item_level_discount_provided",
                    "tax_calculated_on_post_discount_line_item_total",
                    "tax_calculated_on_pre_discount_line_item_total"
                  ],
                  "description": "Indicates how the merchant applied the discount for this specific line item.",
                  "nullable": true,
                  "x-enum-descriptions": [
                    "No line item level discount provided",
                    "Tax calculated on post discount line item total",
                    "Tax calculated on pre discount line item total"
                  ]
                },
                "total_amount": {
                  "type": "integer",
                  "description": "Total amount of all line items.",
                  "nullable": true
                },
                "total_amount_currency": {
                  "type": "string",
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total amount.",
                  "nullable": true
                },
                "detail_indicator": {
                  "type": "string",
                  "enum": ["normal", "credit", "payment"],
                  "description": "Indicates the type of line item.",
                  "nullable": true,
                  "x-enum-descriptions": ["Normal", "Credit", "Purchase"]
                }
              },
              "required": [
                "item_commodity_code",
                "item_descriptor",
                "product_code",
                "item_quantity",
                "unit_of_measure_code",
                "unit_cost",
                "unit_cost_currency",
                "sales_tax_amount",
                "sales_tax_currency",
                "sales_tax_rate",
                "discount_amount",
                "discount_currency",
                "discount_treatment_code",
                "total_amount",
                "total_amount_currency",
                "detail_indicator"
              ],
              "x-title-plural": "Line Items Elements"
            },
            "description": "Line item information, such as individual products purchased.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["card_purchase_supplement"],
            "description": "A constant representing the object's type. For this resource it will always be `card_purchase_supplement`."
          }
        },
        "required": ["id", "transaction_id", "card_payment_id", "invoice", "line_items", "type"],
        "x-title-plural": "Card Purchase Supplements",
        "x-tag": "Card Purchase Supplements"
      },
      "real_time_payments_transfer": {
        "type": "object",
        "title": "Real-Time Payments Transfer",
        "description": "Real-Time Payments transfers move funds, within seconds, between your Increase account and any other account on the Real-Time Payments network.",
        "example": {
          "type": "real_time_payments_transfer",
          "id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq",
          "approval": null,
          "cancellation": null,
          "status": "complete",
          "created_at": "2020-01-31T23:59:59Z",
          "account_id": "account_in71c4amph0vgo2qllky",
          "external_account_id": null,
          "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "creditor_name": "Ian Crease",
          "remittance_information": "Invoice 29582",
          "amount": 100,
          "currency": "USD",
          "destination_account_number": "987654321",
          "destination_routing_number": "101050001",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "pending_transaction_id": null,
          "submission": {
            "submitted_at": "2020-01-31T23:59:59Z",
            "transaction_identification": "20220501234567891T1BSLZO01745013025"
          },
          "rejection": null,
          "unique_identifier": null
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": ["real_time_payments_transfer"],
            "description": "A constant representing the object's type. For this resource it will always be `real_time_payments_transfer`."
          },
          "id": { "type": "string", "description": "The Real-Time Payments Transfer's identifier." },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": { "approved_at": "2020-01-31T23:59:59Z", "approved_by": null },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              },
              "approved_by": {
                "type": "string",
                "description": "If the Transfer was approved by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["approved_at", "approved_by"],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": { "canceled_at": "2020-01-31T23:59:59Z", "canceled_by": null },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              },
              "canceled_by": {
                "type": "string",
                "description": "If the Transfer was canceled by a user in the dashboard, the email address of that user.",
                "nullable": true
              }
            },
            "required": ["canceled_at", "canceled_by"],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_approval",
              "canceled",
              "pending_submission",
              "submitted",
              "complete",
              "rejected",
              "requires_attention"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is pending approval.",
              "The transfer has been canceled.",
              "The transfer is queued to be submitted to Real-Time Payments.",
              "The transfer has been submitted and is pending a response from Real-Time Payments.",
              "The transfer has been sent successfully and is complete.",
              "The transfer was rejected by the network or the recipient's bank.",
              "The transfer requires attention from an Increase operator."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "account_id": { "type": "string", "description": "The Account from which the transfer was sent." },
          "external_account_id": {
            "type": "string",
            "description": "The identifier of the External Account the transfer was made to, if any.",
            "nullable": true
          },
          "source_account_number_id": {
            "type": "string",
            "description": "The Account Number the recipient will see as having sent the transfer."
          },
          "creditor_name": {
            "type": "string",
            "description": "The name of the transfer's recipient as provided by the sender."
          },
          "remittance_information": {
            "type": "string",
            "description": "Unstructured information that will show on the recipient's bank statement."
          },
          "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For real-time payments transfers this is always equal to `USD`.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "destination_account_number": {
            "type": "string",
            "description": "The destination account number."
          },
          "destination_routing_number": {
            "type": "string",
            "description": "The destination American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "transaction_id": {
            "type": "string",
            "description": "The Transaction funding the transfer once it is complete.",
            "nullable": true
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID for the pending transaction representing the transfer. A pending transaction is created when the transfer [requires approval](https://increase.com/documentation/transfer-approvals#transfer-approvals) by someone else in your organization.",
            "nullable": true
          },
          "submission": {
            "type": "object",
            "title": "Real-Time Payments Transfer Submission",
            "description": "After the transfer is submitted to Real-Time Payments, this will contain supplemental details.",
            "example": {
              "submitted_at": "2020-01-31T23:59:59Z",
              "transaction_identification": "20220501234567891T1BSLZO01745013025"
            },
            "properties": {
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was submitted to The Clearing House.",
                "nullable": true
              },
              "transaction_identification": {
                "type": "string",
                "description": "The Real-Time Payments network identification of the transfer."
              }
            },
            "required": ["submitted_at", "transaction_identification"],
            "nullable": true,
            "x-title-plural": "Real-Time Payments Transfer Submissions"
          },
          "rejection": {
            "type": "object",
            "title": "Real-Time Payments Transfer Rejection",
            "description": "If the transfer is rejected by Real-Time Payments or the destination financial institution, this will contain supplemental details.",
            "example": {
              "rejected_at": "2020-01-31T23:59:59Z",
              "reject_reason_code": "account_closed",
              "reject_reason_additional_information": null
            },
            "properties": {
              "rejected_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was rejected.",
                "nullable": true
              },
              "reject_reason_code": {
                "type": "string",
                "enum": [
                  "account_closed",
                  "account_blocked",
                  "invalid_creditor_account_type",
                  "invalid_creditor_account_number",
                  "invalid_creditor_financial_institution_identifier",
                  "end_customer_deceased",
                  "narrative",
                  "transaction_forbidden",
                  "transaction_type_not_supported",
                  "unexpected_amount",
                  "amount_exceeds_bank_limits",
                  "invalid_creditor_address",
                  "unknown_end_customer",
                  "invalid_debtor_address",
                  "timeout",
                  "unsupported_message_for_recipient",
                  "recipient_connection_not_available",
                  "real_time_payments_suspended",
                  "instructed_agent_signed_off",
                  "processing_error",
                  "other"
                ],
                "description": "The reason the transfer was rejected as provided by the recipient bank or the Real-Time Payments network.",
                "x-enum-descriptions": [
                  "The destination account is closed. Corresponds to the Real-Time Payments reason code `AC04`.",
                  "The destination account is currently blocked from receiving transactions. Corresponds to the Real-Time Payments reason code `AC06`.",
                  "The destination account is ineligible to receive Real-Time Payments transfers. Corresponds to the Real-Time Payments reason code `AC14`.",
                  "The destination account does not exist. Corresponds to the Real-Time Payments reason code `AC03`.",
                  "The destination routing number is invalid. Corresponds to the Real-Time Payments reason code `RC04`.",
                  "The destination account holder is deceased. Corresponds to the Real-Time Payments reason code `MD07`.",
                  "The reason is provided as narrative information in the additional information field.",
                  "Real-Time Payments transfers are not allowed to the destination account. Corresponds to the Real-Time Payments reason code `AG01`.",
                  "Real-Time Payments transfers are not enabled for the destination account. Corresponds to the Real-Time Payments reason code `AG03`.",
                  "The amount of the transfer is different than expected by the recipient. Corresponds to the Real-Time Payments reason code `AM09`.",
                  "The amount is higher than the recipient is authorized to send or receive. Corresponds to the Real-Time Payments reason code `AM14`.",
                  "The creditor's address is required, but missing or invalid. Corresponds to the Real-Time Payments reason code `BE04`.",
                  "The specified creditor is unknown. Corresponds to the Real-Time Payments reason code `BE06`.",
                  "The debtor's address is required, but missing or invalid. Corresponds to the Real-Time Payments reason code `BE07`.",
                  "There was a timeout processing the transfer. Corresponds to the Real-Time Payments reason code `DS24`.",
                  "Real-Time Payments transfers are not enabled for the destination account. Corresponds to the Real-Time Payments reason code `NOAT`.",
                  "The destination financial institution is currently not connected to Real-Time Payments. Corresponds to the Real-Time Payments reason code `9912`.",
                  "Real-Time Payments is currently unavailable. Corresponds to the Real-Time Payments reason code `9948`.",
                  "The destination financial institution is currently signed off of Real-Time Payments. Corresponds to the Real-Time Payments reason code `9910`.",
                  "The transfer was rejected due to an internal Increase issue. We have been notified.",
                  "Some other error or issue has occurred."
                ]
              },
              "reject_reason_additional_information": {
                "type": "string",
                "description": "Additional information about the rejection provided by the recipient bank when the `reject_reason_code` is `NARRATIVE`.",
                "nullable": true
              }
            },
            "required": ["rejected_at", "reject_reason_code", "reject_reason_additional_information"],
            "nullable": true,
            "x-title-plural": "Real-Time Payments Transfer Rejections"
          },
          "unique_identifier": {
            "type": "string",
            "description": "The unique identifier you chose for this transfer.",
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "approval",
          "cancellation",
          "status",
          "created_at",
          "account_id",
          "external_account_id",
          "source_account_number_id",
          "creditor_name",
          "remittance_information",
          "amount",
          "currency",
          "destination_account_number",
          "destination_routing_number",
          "transaction_id",
          "pending_transaction_id",
          "submission",
          "rejection",
          "unique_identifier"
        ],
        "x-title-plural": "Real-Time Payments Transfers",
        "x-tag": "Real-Time Payments Transfers"
      },
      "real_time_payments_transfer_list": {
        "type": "object",
        "title": "Real-Time Payments Transfer List",
        "description": "A list of Real-Time Payments Transfer objects.",
        "example": {
          "data": [
            {
              "type": "real_time_payments_transfer",
              "id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq",
              "approval": null,
              "cancellation": null,
              "status": "complete",
              "created_at": "2020-01-31T23:59:59Z",
              "account_id": "account_in71c4amph0vgo2qllky",
              "external_account_id": null,
              "source_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "creditor_name": "Ian Crease",
              "remittance_information": "Invoice 29582",
              "amount": 100,
              "currency": "USD",
              "destination_account_number": "987654321",
              "destination_routing_number": "101050001",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "pending_transaction_id": null,
              "submission": {
                "submitted_at": "2020-01-31T23:59:59Z",
                "transaction_identification": "20220501234567891T1BSLZO01745013025"
              },
              "rejection": null,
              "unique_identifier": null
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/real_time_payments_transfer" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Real-Time Payments Transfer Lists"
      },
      "proof_of_authorization_request_list": {
        "type": "object",
        "title": "Proof of Authorization Request List",
        "description": "A list of Proof of Authorization Request objects.",
        "example": {
          "data": [
            {
              "id": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b",
              "created_at": "2020-01-31T23:59:59Z",
              "updated_at": "2020-01-31T23:59:59Z",
              "ach_transfers": [{ "id": "ach_transfer_uoxatyh3lt5evrsdvo7q" }],
              "type": "proof_of_authorization_request"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/proof_of_authorization_request" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Proof of Authorization Request Lists"
      },
      "proof_of_authorization_request": {
        "type": "object",
        "title": "Proof of Authorization Request",
        "description": "A request for proof of authorization for one or more ACH debit transfers.",
        "example": {
          "id": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b",
          "created_at": "2020-01-31T23:59:59Z",
          "updated_at": "2020-01-31T23:59:59Z",
          "ach_transfers": [{ "id": "ach_transfer_uoxatyh3lt5evrsdvo7q" }],
          "type": "proof_of_authorization_request"
        },
        "properties": {
          "id": { "type": "string", "description": "The Proof of Authorization Request identifier." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Proof of Authorization Request was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Proof of Authorization Request was last updated."
          },
          "ach_transfers": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "ACH Transfers Element",
              "properties": { "id": { "type": "string", "description": "The ACH Transfer identifier." } },
              "required": ["id"],
              "x-title-plural": "ACH Transfers Elements"
            },
            "description": "The ACH Transfers associated with the request."
          },
          "type": {
            "type": "string",
            "enum": ["proof_of_authorization_request"],
            "description": "A constant representing the object's type. For this resource it will always be `proof_of_authorization_request`."
          }
        },
        "required": ["id", "created_at", "updated_at", "ach_transfers", "type"],
        "x-title-plural": "Proof of Authorization Requests",
        "x-tag": "Proof of Authorization Requests"
      },
      "proof_of_authorization_request_submission": {
        "type": "object",
        "title": "Proof of Authorization Request Submission",
        "description": "Information submitted in response to a proof of authorization request. Per Nacha's guidance on proof of authorization, the originator must ensure that the authorization complies with applicable legal requirements, is readily identifiable as an authorization, and has clear and readily understandable terms.",
        "example": {
          "id": "proof_of_authorization_request_submission_uqhqroiley7n0097vizn",
          "created_at": "2020-01-31T23:59:59Z",
          "updated_at": "2020-01-31T23:59:59Z",
          "authorizer_name": "Ian Crease",
          "authorizer_email": "user@example.com",
          "authorizer_company": "National Phonograph Company",
          "authorizer_ip_address": "123.45.67.89",
          "authorized_at": "2020-01-31T23:59:59Z",
          "authorization_terms": "I agree to the terms.",
          "proof_of_authorization_request_id": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b",
          "status": "pending_review",
          "type": "proof_of_authorization_request_submission"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Proof of Authorization Request Submission identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Proof of Authorization Request Submission was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Proof of Authorization Request Submission was last updated."
          },
          "authorizer_name": { "type": "string", "description": "Name of the authorizer.", "nullable": true },
          "authorizer_email": {
            "type": "string",
            "description": "Email of the authorizer.",
            "nullable": true
          },
          "authorizer_company": {
            "type": "string",
            "description": "Company of the authorizer.",
            "nullable": true
          },
          "authorizer_ip_address": {
            "type": "string",
            "description": "IP address of the authorizer.",
            "nullable": true
          },
          "authorized_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time of authorization."
          },
          "authorization_terms": { "type": "string", "description": "Terms of authorization." },
          "proof_of_authorization_request_id": {
            "type": "string",
            "description": "ID of the proof of authorization request."
          },
          "status": {
            "type": "string",
            "enum": ["pending_review", "rejected", "pending_sending", "sent"],
            "description": "Status of the proof of authorization request submission.",
            "x-enum-descriptions": [
              "The proof of authorization request submission is pending review.",
              "The proof of authorization request submission was rejected.",
              "The proof of authorization request submission is pending sending.",
              "The proof of authorization request submission was sent."
            ]
          },
          "type": {
            "type": "string",
            "enum": ["proof_of_authorization_request_submission"],
            "description": "A constant representing the object's type. For this resource it will always be `proof_of_authorization_request_submission`."
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "authorizer_name",
          "authorizer_email",
          "authorizer_company",
          "authorizer_ip_address",
          "authorized_at",
          "authorization_terms",
          "proof_of_authorization_request_id",
          "status",
          "type"
        ],
        "x-title-plural": "Proof of Authorization Request Submissions",
        "x-tag": "Proof of Authorization Request Submissions"
      },
      "proof_of_authorization_request_submission_list": {
        "type": "object",
        "title": "Proof of Authorization Request Submission List",
        "description": "A list of Proof of Authorization Request Submission objects.",
        "example": {
          "data": [
            {
              "id": "proof_of_authorization_request_submission_uqhqroiley7n0097vizn",
              "created_at": "2020-01-31T23:59:59Z",
              "updated_at": "2020-01-31T23:59:59Z",
              "authorizer_name": "Ian Crease",
              "authorizer_email": "user@example.com",
              "authorizer_company": "National Phonograph Company",
              "authorizer_ip_address": "123.45.67.89",
              "authorized_at": "2020-01-31T23:59:59Z",
              "authorization_terms": "I agree to the terms.",
              "proof_of_authorization_request_id": "proof_of_authorization_request_iwp8no25h3rjvil6ad3b",
              "status": "pending_review",
              "type": "proof_of_authorization_request_submission"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/proof_of_authorization_request_submission" },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": ["data", "next_cursor"],
        "x-title-plural": "Proof of Authorization Request Submission Lists"
      },
      "inbound_ach_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound ACH Transfer Simulation Result",
        "description": "The results of an inbound ACH Transfer simulation.",
        "properties": {
          "transfer": {
            "type": "object",
            "title": "Inbound ACH Transfer",
            "description": "The Inbound ACH Transfer.",
            "example": {
              "id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev",
              "amount": 100,
              "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "direction": "credit",
              "status": "accepted",
              "originator_company_name": "BIG BANK",
              "originator_company_descriptive_date": null,
              "originator_company_discretionary_data": null,
              "originator_company_entry_description": "Frederick S. Holmes",
              "originator_company_id": "0987654321",
              "originator_routing_number": "101050001",
              "receiver_id_number": null,
              "receiver_name": "Ian Crease",
              "trace_number": "021000038461022",
              "automatically_resolves_at": "2020-01-31T23:59:59Z",
              "addenda": null,
              "acceptance": {
                "accepted_at": "2020-01-31T23:59:59Z",
                "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
              },
              "decline": null,
              "transfer_return": null,
              "notification_of_change": null,
              "type": "inbound_ach_transfer"
            },
            "properties": {
              "id": { "type": "string", "description": "The inbound ach transfer's identifier." },
              "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
              "account_number_id": {
                "type": "string",
                "description": "The identifier of the Account Number to which this transfer was sent."
              },
              "direction": {
                "type": "string",
                "enum": ["credit", "debit"],
                "description": "The direction of the transfer.",
                "x-enum-descriptions": ["Credit", "Debit"]
              },
              "status": {
                "type": "string",
                "enum": ["pending", "declined", "accepted", "returned"],
                "description": "The status of the transfer.",
                "x-enum-descriptions": [
                  "The Inbound ACH Transfer is awaiting action, will transition automatically if no action is taken.",
                  "The Inbound ACH Transfer has been declined.",
                  "The Inbound ACH Transfer is accepted.",
                  "The Inbound ACH Transfer has been returned."
                ]
              },
              "originator_company_name": {
                "type": "string",
                "description": "The name of the company that initiated the transfer."
              },
              "originator_company_descriptive_date": {
                "type": "string",
                "description": "The descriptive date of the transfer.",
                "nullable": true
              },
              "originator_company_discretionary_data": {
                "type": "string",
                "description": "The additional information included with the transfer.",
                "nullable": true
              },
              "originator_company_entry_description": {
                "type": "string",
                "description": "The description of the transfer."
              },
              "originator_company_id": {
                "type": "string",
                "description": "The id of the company that initiated the transfer."
              },
              "originator_routing_number": {
                "type": "string",
                "description": "The American Banking Association (ABA) routing number of the bank originating the transfer."
              },
              "receiver_id_number": {
                "type": "string",
                "description": "The id of the receiver of the transfer.",
                "nullable": true
              },
              "receiver_name": {
                "type": "string",
                "description": "The name of the receiver of the transfer.",
                "nullable": true
              },
              "trace_number": { "type": "string", "description": "The trace number of the transfer." },
              "automatically_resolves_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which the transfer will be automatically resolved."
              },
              "addenda": {
                "type": "object",
                "title": "Addenda",
                "description": "Additional information sent from the originator.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["freeform"],
                    "description": "The type of addendum.",
                    "x-enum-descriptions": ["Unstructured addendum."]
                  },
                  "freeform": {
                    "type": "object",
                    "title": "Freeform",
                    "description": "Unstructured `payment_related_information` passed through by the originator.",
                    "properties": {
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Entries Element",
                          "properties": {
                            "payment_related_information": {
                              "type": "string",
                              "description": "The payment related information passed in the addendum."
                            }
                          },
                          "required": ["payment_related_information"],
                          "x-title-plural": "Entries Elements"
                        },
                        "description": "Each entry represents an addendum received from the originator."
                      }
                    },
                    "required": ["entries"],
                    "nullable": true,
                    "x-title-plural": "Freeforms"
                  }
                },
                "required": ["category", "freeform"],
                "nullable": true,
                "x-title-plural": "Addendas"
              },
              "acceptance": {
                "type": "object",
                "title": "Acceptance",
                "description": "If your transfer is accepted, this will contain details of the acceptance.",
                "properties": {
                  "accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the transfer was accepted."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The id of the transaction for the accepted transfer."
                  }
                },
                "required": ["accepted_at", "transaction_id"],
                "nullable": true,
                "x-title-plural": "Acceptances"
              },
              "decline": {
                "type": "object",
                "title": "Decline",
                "description": "If your transfer is declined, this will contain details of the decline.",
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "ach_route_canceled",
                      "ach_route_disabled",
                      "breaches_limit",
                      "credit_entry_refused_by_receiver",
                      "duplicate_return",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "misrouted_return",
                      "return_of_erroneous_or_reversing_debit",
                      "no_ach_route",
                      "originator_request",
                      "transaction_not_allowed",
                      "user_initiated"
                    ],
                    "description": "The reason for the transfer decline.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "The transaction would cause an Increase limit to be exceeded.",
                      "A credit was refused. This is a reasonable default reason for decline of credits.",
                      "A rare return reason. The return this message refers to was a duplicate.",
                      "The account's entity is not active.",
                      "Your account is inactive.",
                      "Your account contains insufficient funds.",
                      "A rare return reason. The return this message refers to was misrouted.",
                      "The originating financial institution made a mistake and this return corrects it.",
                      "The account number that was debited does not exist.",
                      "The originating financial institution asked for this transfer to be returned.",
                      "The transaction is not allowed per Increase's terms.",
                      "The user initiated the decline."
                    ]
                  },
                  "declined_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the transfer was declined."
                  },
                  "declined_transaction_id": {
                    "type": "string",
                    "description": "The id of the transaction for the declined transfer."
                  }
                },
                "required": ["reason", "declined_at", "declined_transaction_id"],
                "nullable": true,
                "x-title-plural": "Declines"
              },
              "transfer_return": {
                "type": "object",
                "title": "Transfer Return",
                "description": "If your transfer is returned, this will contain details of the return.",
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "returned_per_odfi_request",
                      "authorization_revoked_by_customer",
                      "payment_stopped",
                      "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                      "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                      "beneficiary_or_account_holder_deceased",
                      "credit_entry_refused_by_receiver",
                      "duplicate_entry",
                      "corporate_customer_advised_not_authorized"
                    ],
                    "description": "The reason for the transfer return.",
                    "x-enum-descriptions": [
                      "The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request. The Nacha return code is R06.",
                      "The customer no longer authorizes this transaction. The Nacha return code is R07.",
                      "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.",
                      "The customer advises that the debit was unauthorized. The Nacha return code is R10.",
                      "The payee is deceased. The Nacha return code is R14.",
                      "The account holder is deceased. The Nacha return code is R15.",
                      "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.",
                      "The account holder identified this transaction as a duplicate. The Nacha return code is R24.",
                      "The corporate customer no longer authorizes this transaction. The Nacha return code is R29."
                    ]
                  },
                  "returned_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the transfer was returned."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The id of the transaction for the returned transfer."
                  }
                },
                "required": ["reason", "returned_at", "transaction_id"],
                "nullable": true,
                "x-title-plural": "Transfer Returns"
              },
              "notification_of_change": {
                "type": "object",
                "title": "Notification Of Change",
                "description": "If you initiate a notification of change in response to the transfer, this will contain its details.",
                "properties": {
                  "updated_account_number": {
                    "type": "string",
                    "description": "The new account number provided in the notification of change.",
                    "nullable": true
                  },
                  "updated_routing_number": {
                    "type": "string",
                    "description": "The new account number provided in the notification of change.",
                    "nullable": true
                  }
                },
                "required": ["updated_account_number", "updated_routing_number"],
                "nullable": true,
                "x-title-plural": "Notifications of change"
              },
              "type": {
                "type": "string",
                "enum": ["inbound_ach_transfer"],
                "description": "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer`."
              }
            },
            "required": [
              "id",
              "amount",
              "account_number_id",
              "direction",
              "status",
              "originator_company_name",
              "originator_company_descriptive_date",
              "originator_company_discretionary_data",
              "originator_company_entry_description",
              "originator_company_id",
              "originator_routing_number",
              "receiver_id_number",
              "receiver_name",
              "trace_number",
              "automatically_resolves_at",
              "addenda",
              "acceptance",
              "decline",
              "transfer_return",
              "notification_of_change",
              "type"
            ],
            "x-title-plural": "Inbound ACH Transfers"
          },
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the ACH Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_ach_transfer`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "An informational message describing this transaction. Use the fields in `source` to get more detailed information. This field appears as the line-item on the statement."
              },
              "id": { "type": "string", "description": "The Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "card_revenue_payment",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_deposit",
                      "check_transfer_intention",
                      "check_transfer_stop_payment_request",
                      "fee_payment",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_source",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                      "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                      "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                      "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                      "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                      "Card Refund: details will be under the `card_refund` object.",
                      "Card Settlement: details will be under the `card_settlement` object.",
                      "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                      "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                      "Check Deposit Return: details will be under the `check_deposit_return` object.",
                      "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                      "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                      "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                      "Fee Payment: details will be under the `fee_payment` object.",
                      "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                      "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                      "Inbound Check: details will be under the `inbound_check` object.",
                      "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                      "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                      "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                      "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                      "Interest Payment: details will be under the `interest_payment` object.",
                      "Internal Source: details will be under the `internal_source` object.",
                      "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "Sample Funds: details will be under the `sample_funds` object.",
                      "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                      "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "An Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "An ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number for the destination account."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": "A description set when the ACH Transfer was created."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "An ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": { "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "An ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "raw_return_reason_code": "R01",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "account_sold_to_another_dfi",
                          "addenda_error",
                          "beneficiary_or_account_holder_deceased",
                          "customer_advised_not_within_authorization_terms",
                          "corrected_return",
                          "duplicate_entry",
                          "duplicate_return",
                          "enr_duplicate_enrollment",
                          "enr_invalid_dfi_account_number",
                          "enr_invalid_individual_id_number",
                          "enr_invalid_representative_payee_indicator",
                          "enr_invalid_transaction_code",
                          "enr_return_of_enr_entry",
                          "enr_routing_number_check_digit_error",
                          "entry_not_processed_by_gateway",
                          "field_error",
                          "foreign_receiving_dfi_unable_to_settle",
                          "iat_entry_coding_error",
                          "improper_effective_entry_date",
                          "improper_source_document_source_document_presented",
                          "invalid_company_id",
                          "invalid_foreign_receiving_dfi_identification",
                          "invalid_individual_id_number",
                          "item_and_rck_entry_presented_for_payment",
                          "item_related_to_rck_entry_is_ineligible",
                          "mandatory_field_error",
                          "misrouted_dishonored_return",
                          "misrouted_return",
                          "no_errors_found",
                          "non_acceptance_of_r62_dishonored_return",
                          "non_participant_in_iat_program",
                          "permissible_return_entry",
                          "permissible_return_entry_not_accepted",
                          "rdfi_non_settlement",
                          "rdfi_participant_in_check_truncation_program",
                          "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                          "return_not_a_duplicate",
                          "return_of_erroneous_or_reversing_debit",
                          "return_of_improper_credit_entry",
                          "return_of_improper_debit_entry",
                          "return_of_xck_entry",
                          "source_document_presented_for_payment",
                          "state_law_affecting_rck_acceptance",
                          "stop_payment_on_item_related_to_rck_entry",
                          "stop_payment_on_source_document",
                          "timely_original_return",
                          "trace_number_error",
                          "untimely_dishonored_return",
                          "untimely_return"
                        ],
                        "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                        "x-enum-descriptions": [
                          "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                          "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                          "Code R02. The account is closed at the receiving bank.",
                          "Code R04. The account number is invalid at the receiving bank.",
                          "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                          "Code R23. The receiving bank account refused a credit transfer.",
                          "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                          "Code R08. The receiving bank stopped payment on this transfer.",
                          "Code R20. The receiving bank account does not perform transfers.",
                          "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                          "Code R28. The routing number is incorrect.",
                          "Code R10. The customer at the receiving bank reversed the transfer.",
                          "Code R19. The amount field is incorrect or too large.",
                          "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                          "Code R13. The routing number is invalid.",
                          "Code R17. The receiving bank is unable to process a field in the transfer.",
                          "Code R45. The individual name field was invalid.",
                          "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                          "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                          "Code R85. The outbound international ACH transfer was incorrect.",
                          "Code R12. A rare return reason. The account was sold to another bank.",
                          "Code R25. The addenda record is incorrect or missing.",
                          "Code R15. A rare return reason. The account holder is deceased.",
                          "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                          "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                          "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                          "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                          "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                          "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                          "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                          "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                          "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                          "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                          "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                          "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                          "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                          "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                          "Code R26. A rare return reason. The ACH is missing a required field.",
                          "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                          "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                          "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                          "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                          "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                          "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                          "Code R70. A rare return reason. The receiving bank had not approved this return.",
                          "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                          "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                          "Code R14. A rare return reason. The payee is deceased.",
                          "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                          "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                          "Code R36. A rare return reason. Return of a malformed credit entry.",
                          "Code R35. A rare return reason. Return of a malformed debit entry.",
                          "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                          "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                          "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                          "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                          "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                          "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                          "Code R72. A rare return reason. The dishonored return was sent too late.",
                          "Code R68. A rare return reason. The return was sent too late."
                        ]
                      },
                      "raw_return_reason_code": {
                        "type": "string",
                        "description": "The three character ACH return code, in the range R01 to R85."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "raw_return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
                      }
                    },
                    "required": ["accepted_at", "card_dispute_id", "transaction_id"],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "id": "card_refund_imgc2xwplh6t4r3gn16e",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": 100,
                      "currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_refund"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Refund identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_refund"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "purchase_details",
                      "transaction_id",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "id": "card_settlement_khv5kfeu0vndj291omg6",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "card_authorization": null,
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "pending_transaction_id": null,
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_settlement"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Settlement identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "card_authorization": {
                        "type": "string",
                        "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_settlement"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "card_authorization",
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "transaction_id",
                      "pending_transaction_id",
                      "purchase_details",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "card_revenue_payment": {
                    "type": "object",
                    "title": "Card Revenue Payment",
                    "description": "A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "transacted_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "transacted_on_account_id": {
                        "type": "string",
                        "description": "The account the card belonged to.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "transacted_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Revenue Payments"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image",
                          "endorsement_irregular",
                          "altered_or_fictitious_item",
                          "frozen_or_blocked_account",
                          "post_dated",
                          "endorsement_missing",
                          "signature_missing",
                          "stop_payment_suspect",
                          "unusable_image",
                          "image_fails_security_check",
                          "cannot_determine_amount",
                          "signature_irregular",
                          "non_cash_item",
                          "unable_to_process",
                          "item_exceeds_dollar_limit",
                          "branch_or_account_sold"
                        ],
                        "description": "Why this check was returned by the bank holding the account it was drawn against.",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read.",
                          "The check endorsement was irregular.",
                          "The check present was either altered or fake.",
                          "The account this check is drawn on is frozen.",
                          "The check is post dated.",
                          "The endorsement was missing.",
                          "The check signature was missing.",
                          "The bank suspects a stop payment will be placed.",
                          "The bank cannot read the image.",
                          "The check image fails the bank's security check.",
                          "The bank cannot determine the amount.",
                          "The signature is inconsistent with prior signatures.",
                          "The check is a non-cash item and cannot be drawn against the account.",
                          "The bank is unable to process this check.",
                          "The check exceeds the bank or customer's limit.",
                          "The bank sold this account and no longer services this customer."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_deposit": {
                    "type": "object",
                    "title": "Check Transfer Deposit",
                    "description": "A Check Transfer Deposit object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_deposit`.",
                    "example": {
                      "deposited_at": "2020-01-31T23:59:59Z",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": null,
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "type": "check_transfer_deposit"
                    },
                    "properties": {
                      "deposited_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the check was deposited."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction object created when the check was deposited.",
                        "nullable": true
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer object that was deposited."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_deposit"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
                      }
                    },
                    "required": [
                      "deposited_at",
                      "transaction_id",
                      "front_image_file_id",
                      "back_image_file_id",
                      "bank_of_first_deposit_routing_number",
                      "transfer_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Deposits"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination.",
                        "nullable": true
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination.",
                        "nullable": true
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination.",
                        "nullable": true
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination.",
                        "nullable": true
                      },
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "reason": "mail_delivery_failed",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "reason": {
                        "type": "string",
                        "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                        "description": "The reason why this transfer was stopped.",
                        "x-enum-descriptions": [
                          "The check could not be delivered.",
                          "The check was canceled by an Increase operator who will provide details out-of-band.",
                          "The check was stopped for another reason."
                        ]
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_stop_payment_request"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": ["transfer_id", "reason", "requested_at", "type"],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "fee_payment": {
                    "type": "object",
                    "title": "Fee Payment",
                    "description": "A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "fee_statement_id": "fee_statement_lz33v0d7pnxwkptrdwq4",
                      "fee_period_start": "2023-05-01"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "fee_period_start": {
                        "type": "string",
                        "format": "date",
                        "description": "The start of this payment's fee period, usually the first day of a month."
                      }
                    },
                    "required": ["amount", "currency", "fee_period_start"],
                    "nullable": true,
                    "x-title-plural": "Fee Payments"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer Intention",
                    "description": "An Inbound ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "transfer_id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "A name set by the originator to identify themselves."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The description of the date of the transfer, usually in the format `YYMMDD`.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "Data set by the originator.",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "An informational description of the transfer."
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally, but not always, a stable identifier across multiple transfers."
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The originator's identifier for the transfer receipient.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the transfer recipient. This value is informational and not verified by Increase.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The inbound ach transfer's identifier."
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfer Intentions"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "An Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": "101050001"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "The number of the check. This field is set by the depositing bank and can be unreliable.",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "The front image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "The rear image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id",
                      "bank_of_first_deposit_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "An Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Confirmation",
                    "description": "An Inbound Real-Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "An Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount that was reversed." },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "An Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the receiving bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "An Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "created_at": "2020-01-31T23:59:59Z",
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null,
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed in USD cents."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire, set by the reversing bank."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The ID for the Transaction associated with the transfer reversal."
                      },
                      "wire_transfer_id": {
                        "type": "string",
                        "description": "The ID for the Wire Transfer that is being reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "created_at",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information",
                      "transaction_id",
                      "wire_transfer_id",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "An Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount in USD cents." },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "An Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": ["amount", "currency", "period_start", "period_end", "accrued_on_account_id"],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "An Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": { "amount": 100, "currency": "USD", "reason": "sample_funds" },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_closure",
                          "bank_migration",
                          "cashback",
                          "check_adjustment",
                          "collection_receivable",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "negative_balance_forgiveness",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "An Internal Source is a transaction between you and Increase. This describes the reason for the transaction.",
                        "x-enum-descriptions": [
                          "Account closure",
                          "Bank migration",
                          "Cashback",
                          "Check adjustment",
                          "Collection receivable",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Negative balance forgiveness",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": ["amount", "currency", "reason"],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "real_time_payments_transfer_acknowledgement": {
                    "type": "object",
                    "title": "Real-Time Payments Transfer Acknowledgement",
                    "description": "A Real-Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.",
                    "example": {
                      "amount": 100,
                      "destination_account_number": "987654321",
                      "destination_routing_number": "101050001",
                      "remittance_information": "Invoice 29582",
                      "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "destination_account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "destination_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Unstructured information that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Payments Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "destination_account_number",
                      "destination_routing_number",
                      "remittance_information",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Real-Time Payments Transfer Acknowledgements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": { "originator": "dashboard" },
                    "properties": {
                      "originator": { "type": "string", "description": "Where the sample funds came from." }
                    },
                    "required": ["originator"],
                    "nullable": true,
                    "x-title-plural": "Sample Funds"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": { "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the ACH Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_ach_transfer`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": { "type": "string", "description": "The Declined Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "wire_decline",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "ACH Decline: details will be under the `ach_decline` object.",
                      "Card Decline: details will be under the `card_decline` object.",
                      "Check Decline: details will be under the `check_decline` object.",
                      "Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "International ACH Decline: details will be under the `international_ach_decline` object.",
                      "Wire Decline: details will be under the `wire_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "An ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "id": "ach_decline_72v1mcwxudctq56efipa",
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "type": "ach_decline"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The ACH Decline's identifier." },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "The name of the company that initiated the transfer."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The descriptive date of the transfer.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "The additional information included with the transfer.",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "The identifier of the company that initiated the transfer."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "misrouted_return",
                          "return_of_erroneous_or_reversing_debit",
                          "no_ach_route",
                          "originator_request",
                          "transaction_not_allowed",
                          "user_initiated"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause an Increase limit to be exceeded.",
                          "A credit was refused. This is a reasonable default reason for decline of credits.",
                          "A rare return reason. The return this message refers to was a duplicate.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "A rare return reason. The return this message refers to was misrouted.",
                          "The originating financial institution made a mistake and this return corrects it.",
                          "The account number that was debited does not exist.",
                          "The originating financial institution asked for this transfer to be returned.",
                          "The transaction is not allowed per Increase's terms.",
                          "The user initiated the decline."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The id of the receiver of the transfer.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "The trace number of the transfer."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["ach_decline"],
                        "description": "A constant representing the object's type. For this resource it will always be `ach_decline`."
                      }
                    },
                    "required": [
                      "id",
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_descriptor": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "digital_wallet_token_id": null,
                      "physical_card_id": null,
                      "verification": {
                        "cardholder_address": {
                          "provided_postal_code": "94132",
                          "provided_line1": "33 Liberty Street",
                          "actual_postal_code": "94131",
                          "actual_line1": "33 Liberty Street",
                          "result": "postal_code_no_match_address_match"
                        },
                        "card_verification_code": { "result": "match" }
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "network_details": {
                        "category": "visa",
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "id": "card_decline_bx3o8zd7glq8yvtwg25v",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": -1000,
                      "currency": "USD",
                      "processing_category": "purchase",
                      "reason": "insufficient_funds",
                      "merchant_state": null,
                      "real_time_decision_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      },
                      "physical_card_id": {
                        "type": "string",
                        "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                        "nullable": true
                      },
                      "verification": {
                        "type": "object",
                        "description": "Fields related to verification of cardholder-provided values.",
                        "properties": {
                          "cardholder_address": {
                            "type": "object",
                            "title": "Cardholder Address",
                            "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                            "properties": {
                              "provided_postal_code": {
                                "type": "string",
                                "description": "The postal code provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "provided_line1": {
                                "type": "string",
                                "description": "The cardholder address line 1 provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "actual_postal_code": {
                                "type": "string",
                                "description": "The postal code of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "actual_line1": {
                                "type": "string",
                                "description": "Line 1 of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "result": {
                                "type": "string",
                                "enum": [
                                  "not_checked",
                                  "postal_code_match_address_not_checked",
                                  "postal_code_match_address_no_match",
                                  "postal_code_no_match_address_match",
                                  "match",
                                  "no_match"
                                ],
                                "description": "The address verification result returned to the card network.",
                                "x-enum-descriptions": [
                                  "No adress was provided in the authorization request.",
                                  "Postal code matches, but the street address was not verified.",
                                  "Postal code matches, but the street address does not match.",
                                  "Postal code does not match, but the street address matches.",
                                  "Postal code and street address match.",
                                  "Postal code and street address do not match."
                                ]
                              }
                            },
                            "required": [
                              "provided_postal_code",
                              "provided_line1",
                              "actual_postal_code",
                              "actual_line1",
                              "result"
                            ],
                            "x-title-plural": "Cardholder Addresses"
                          },
                          "card_verification_code": {
                            "type": "object",
                            "title": "Card Verification Code",
                            "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                            "properties": {
                              "result": {
                                "type": "string",
                                "enum": ["not_checked", "match", "no_match"],
                                "description": "The result of verifying the Card Verification Code.",
                                "x-enum-descriptions": [
                                  "No card verification code was provided in the authorization request.",
                                  "The card verification code matched the one on file.",
                                  "The card verification code did not match the one on file."
                                ]
                              }
                            },
                            "required": ["result"],
                            "x-title-plural": "Card Verification Codes"
                          }
                        },
                        "required": ["cardholder_address", "card_verification_code"],
                        "x-title-plural": "s"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "description": "Network-specific identifiers for a specific request or transaction.",
                        "example": {
                          "transaction_id": "627199945183184",
                          "trace_number": "487941",
                          "retrieval_reference_number": "785867080153"
                        },
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "trace_number": {
                            "type": "string",
                            "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                            "nullable": true
                          },
                          "retrieval_reference_number": {
                            "type": "string",
                            "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                            "nullable": true
                          }
                        },
                        "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                        "x-title-plural": "s"
                      },
                      "network_details": {
                        "type": "object",
                        "description": "Fields specific to the `network`.",
                        "properties": {
                          "category": {
                            "type": "string",
                            "enum": ["visa"],
                            "description": "The payment network used to process this card authorization.",
                            "x-enum-descriptions": ["Visa"]
                          },
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network.",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "$ref": "#/components/schemas/point_of_service_entry_mode"
                              }
                            },
                            "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                            "nullable": true,
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": ["category", "visa"],
                        "x-title-plural": "s"
                      },
                      "id": { "type": "string", "description": "The Card Decline identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "processing_category": {
                        "type": "string",
                        "enum": [
                          "account_funding",
                          "automatic_fuel_dispenser",
                          "bill_payment",
                          "purchase",
                          "quasi_cash",
                          "refund"
                        ],
                        "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                        "x-enum-descriptions": [
                          "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                          "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                          "A transaction used to pay a bill.",
                          "A regular purchase.",
                          "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                          "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "physical_card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing",
                          "invalid_physical_card",
                          "missing_original_authorization",
                          "suspected_fraud"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The Physical Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing.",
                          "The card read had an invalid CVV, dCVV, or authorization request cryptogram.",
                          "The original card authorization for this incremental authorization does not exist.",
                          "The transaction was suspected to be fraudulent. Please reach out to support@increase.com for more information."
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "digital_wallet_token_id",
                      "physical_card_id",
                      "verification",
                      "network_identifiers",
                      "network_details",
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "processing_category",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds",
                      "front_image_file_id": null,
                      "back_image_file_id": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "A computer-readable number printed on the MICR line of business checks, usually the check number. This is useful for positive pay checks, but can be unreliably transmitted by the bank of first deposit.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_disabled",
                          "ach_route_canceled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "stop_payment_requested",
                          "duplicate_presentment",
                          "not_authorized",
                          "amount_mismatch",
                          "not_our_item",
                          "no_account_number_found"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is disabled.",
                          "The account number is canceled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Stop payment requested for this check.",
                          "The check was a duplicate deposit.",
                          "The check was not authorized.",
                          "The amount the receiving bank is attempting to deposit does not match the amount on the check.",
                          "The check attempting to be deposited does not belong to Increase.",
                          "The account number on the check does not exist at Increase."
                        ]
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the declined check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the declined check.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason",
                      "front_image_file_id",
                      "back_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Decline",
                    "description": "An Inbound Real-Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "account_restricted",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is restricted.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real-Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "An International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "wire_decline": {
                    "type": "object",
                    "title": "Wire Decline",
                    "description": "A Wire Decline object. This field will be present in the JSON response if and only if `category` is equal to `wire_decline`.",
                    "example": {
                      "amount": 100,
                      "reason": "account_number_disabled",
                      "description": "Inbound wire transfer",
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "entity_not_active",
                          "group_locked",
                          "no_account_number",
                          "transaction_not_allowed"
                        ],
                        "description": "Why the wire transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "The beneficiary account number does not exist.",
                          "The transaction is not allowed per Increase's terms."
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the declined transaction."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "reason",
                      "description",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "wire_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["declined_transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": ["inbound_ach_transfer_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_simulation_result`."
          }
        },
        "required": ["transfer", "transaction", "declined_transaction", "type"],
        "x-title-plural": "Inbound ACH Transfer Simulation Results"
      },
      "inbound_wire_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound Wire Transfer Simulation Result",
        "description": "The results of an inbound Wire Transfer simulation.",
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the Wire Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_wire_transfer`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "An informational message describing this transaction. Use the fields in `source` to get more detailed information. This field appears as the line-item on the statement."
              },
              "id": { "type": "string", "description": "The Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "card_revenue_payment",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_deposit",
                      "check_transfer_intention",
                      "check_transfer_stop_payment_request",
                      "fee_payment",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_source",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                      "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                      "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                      "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                      "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                      "Card Refund: details will be under the `card_refund` object.",
                      "Card Settlement: details will be under the `card_settlement` object.",
                      "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                      "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                      "Check Deposit Return: details will be under the `check_deposit_return` object.",
                      "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                      "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                      "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                      "Fee Payment: details will be under the `fee_payment` object.",
                      "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                      "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                      "Inbound Check: details will be under the `inbound_check` object.",
                      "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                      "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                      "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                      "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                      "Interest Payment: details will be under the `interest_payment` object.",
                      "Internal Source: details will be under the `internal_source` object.",
                      "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "Sample Funds: details will be under the `sample_funds` object.",
                      "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                      "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "An Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "An ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number for the destination account."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": "A description set when the ACH Transfer was created."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "An ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": { "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "An ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "raw_return_reason_code": "R01",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "account_sold_to_another_dfi",
                          "addenda_error",
                          "beneficiary_or_account_holder_deceased",
                          "customer_advised_not_within_authorization_terms",
                          "corrected_return",
                          "duplicate_entry",
                          "duplicate_return",
                          "enr_duplicate_enrollment",
                          "enr_invalid_dfi_account_number",
                          "enr_invalid_individual_id_number",
                          "enr_invalid_representative_payee_indicator",
                          "enr_invalid_transaction_code",
                          "enr_return_of_enr_entry",
                          "enr_routing_number_check_digit_error",
                          "entry_not_processed_by_gateway",
                          "field_error",
                          "foreign_receiving_dfi_unable_to_settle",
                          "iat_entry_coding_error",
                          "improper_effective_entry_date",
                          "improper_source_document_source_document_presented",
                          "invalid_company_id",
                          "invalid_foreign_receiving_dfi_identification",
                          "invalid_individual_id_number",
                          "item_and_rck_entry_presented_for_payment",
                          "item_related_to_rck_entry_is_ineligible",
                          "mandatory_field_error",
                          "misrouted_dishonored_return",
                          "misrouted_return",
                          "no_errors_found",
                          "non_acceptance_of_r62_dishonored_return",
                          "non_participant_in_iat_program",
                          "permissible_return_entry",
                          "permissible_return_entry_not_accepted",
                          "rdfi_non_settlement",
                          "rdfi_participant_in_check_truncation_program",
                          "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                          "return_not_a_duplicate",
                          "return_of_erroneous_or_reversing_debit",
                          "return_of_improper_credit_entry",
                          "return_of_improper_debit_entry",
                          "return_of_xck_entry",
                          "source_document_presented_for_payment",
                          "state_law_affecting_rck_acceptance",
                          "stop_payment_on_item_related_to_rck_entry",
                          "stop_payment_on_source_document",
                          "timely_original_return",
                          "trace_number_error",
                          "untimely_dishonored_return",
                          "untimely_return"
                        ],
                        "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                        "x-enum-descriptions": [
                          "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                          "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                          "Code R02. The account is closed at the receiving bank.",
                          "Code R04. The account number is invalid at the receiving bank.",
                          "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                          "Code R23. The receiving bank account refused a credit transfer.",
                          "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                          "Code R08. The receiving bank stopped payment on this transfer.",
                          "Code R20. The receiving bank account does not perform transfers.",
                          "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                          "Code R28. The routing number is incorrect.",
                          "Code R10. The customer at the receiving bank reversed the transfer.",
                          "Code R19. The amount field is incorrect or too large.",
                          "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                          "Code R13. The routing number is invalid.",
                          "Code R17. The receiving bank is unable to process a field in the transfer.",
                          "Code R45. The individual name field was invalid.",
                          "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                          "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                          "Code R85. The outbound international ACH transfer was incorrect.",
                          "Code R12. A rare return reason. The account was sold to another bank.",
                          "Code R25. The addenda record is incorrect or missing.",
                          "Code R15. A rare return reason. The account holder is deceased.",
                          "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                          "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                          "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                          "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                          "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                          "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                          "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                          "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                          "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                          "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                          "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                          "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                          "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                          "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                          "Code R26. A rare return reason. The ACH is missing a required field.",
                          "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                          "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                          "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                          "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                          "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                          "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                          "Code R70. A rare return reason. The receiving bank had not approved this return.",
                          "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                          "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                          "Code R14. A rare return reason. The payee is deceased.",
                          "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                          "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                          "Code R36. A rare return reason. Return of a malformed credit entry.",
                          "Code R35. A rare return reason. Return of a malformed debit entry.",
                          "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                          "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                          "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                          "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                          "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                          "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                          "Code R72. A rare return reason. The dishonored return was sent too late.",
                          "Code R68. A rare return reason. The return was sent too late."
                        ]
                      },
                      "raw_return_reason_code": {
                        "type": "string",
                        "description": "The three character ACH return code, in the range R01 to R85."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "raw_return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
                      }
                    },
                    "required": ["accepted_at", "card_dispute_id", "transaction_id"],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "id": "card_refund_imgc2xwplh6t4r3gn16e",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": 100,
                      "currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_refund"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Refund identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_refund"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "purchase_details",
                      "transaction_id",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "id": "card_settlement_khv5kfeu0vndj291omg6",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "card_authorization": null,
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "pending_transaction_id": null,
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_settlement"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Settlement identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "card_authorization": {
                        "type": "string",
                        "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_settlement"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "card_authorization",
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "transaction_id",
                      "pending_transaction_id",
                      "purchase_details",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "card_revenue_payment": {
                    "type": "object",
                    "title": "Card Revenue Payment",
                    "description": "A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "transacted_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "transacted_on_account_id": {
                        "type": "string",
                        "description": "The account the card belonged to.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "transacted_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Revenue Payments"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image",
                          "endorsement_irregular",
                          "altered_or_fictitious_item",
                          "frozen_or_blocked_account",
                          "post_dated",
                          "endorsement_missing",
                          "signature_missing",
                          "stop_payment_suspect",
                          "unusable_image",
                          "image_fails_security_check",
                          "cannot_determine_amount",
                          "signature_irregular",
                          "non_cash_item",
                          "unable_to_process",
                          "item_exceeds_dollar_limit",
                          "branch_or_account_sold"
                        ],
                        "description": "Why this check was returned by the bank holding the account it was drawn against.",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read.",
                          "The check endorsement was irregular.",
                          "The check present was either altered or fake.",
                          "The account this check is drawn on is frozen.",
                          "The check is post dated.",
                          "The endorsement was missing.",
                          "The check signature was missing.",
                          "The bank suspects a stop payment will be placed.",
                          "The bank cannot read the image.",
                          "The check image fails the bank's security check.",
                          "The bank cannot determine the amount.",
                          "The signature is inconsistent with prior signatures.",
                          "The check is a non-cash item and cannot be drawn against the account.",
                          "The bank is unable to process this check.",
                          "The check exceeds the bank or customer's limit.",
                          "The bank sold this account and no longer services this customer."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_deposit": {
                    "type": "object",
                    "title": "Check Transfer Deposit",
                    "description": "A Check Transfer Deposit object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_deposit`.",
                    "example": {
                      "deposited_at": "2020-01-31T23:59:59Z",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": null,
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "type": "check_transfer_deposit"
                    },
                    "properties": {
                      "deposited_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the check was deposited."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction object created when the check was deposited.",
                        "nullable": true
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer object that was deposited."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_deposit"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
                      }
                    },
                    "required": [
                      "deposited_at",
                      "transaction_id",
                      "front_image_file_id",
                      "back_image_file_id",
                      "bank_of_first_deposit_routing_number",
                      "transfer_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Deposits"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination.",
                        "nullable": true
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination.",
                        "nullable": true
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination.",
                        "nullable": true
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination.",
                        "nullable": true
                      },
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "reason": "mail_delivery_failed",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "reason": {
                        "type": "string",
                        "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                        "description": "The reason why this transfer was stopped.",
                        "x-enum-descriptions": [
                          "The check could not be delivered.",
                          "The check was canceled by an Increase operator who will provide details out-of-band.",
                          "The check was stopped for another reason."
                        ]
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_stop_payment_request"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": ["transfer_id", "reason", "requested_at", "type"],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "fee_payment": {
                    "type": "object",
                    "title": "Fee Payment",
                    "description": "A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "fee_statement_id": "fee_statement_lz33v0d7pnxwkptrdwq4",
                      "fee_period_start": "2023-05-01"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "fee_period_start": {
                        "type": "string",
                        "format": "date",
                        "description": "The start of this payment's fee period, usually the first day of a month."
                      }
                    },
                    "required": ["amount", "currency", "fee_period_start"],
                    "nullable": true,
                    "x-title-plural": "Fee Payments"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer Intention",
                    "description": "An Inbound ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "transfer_id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "A name set by the originator to identify themselves."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The description of the date of the transfer, usually in the format `YYMMDD`.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "Data set by the originator.",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "An informational description of the transfer."
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally, but not always, a stable identifier across multiple transfers."
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The originator's identifier for the transfer receipient.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the transfer recipient. This value is informational and not verified by Increase.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The inbound ach transfer's identifier."
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfer Intentions"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "An Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": "101050001"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "The number of the check. This field is set by the depositing bank and can be unreliable.",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "The front image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "The rear image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id",
                      "bank_of_first_deposit_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "An Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Confirmation",
                    "description": "An Inbound Real-Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "An Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount that was reversed." },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "An Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the receiving bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "An Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "created_at": "2020-01-31T23:59:59Z",
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null,
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed in USD cents."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire, set by the reversing bank."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The ID for the Transaction associated with the transfer reversal."
                      },
                      "wire_transfer_id": {
                        "type": "string",
                        "description": "The ID for the Wire Transfer that is being reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "created_at",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information",
                      "transaction_id",
                      "wire_transfer_id",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "An Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount in USD cents." },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "An Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": ["amount", "currency", "period_start", "period_end", "accrued_on_account_id"],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "An Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": { "amount": 100, "currency": "USD", "reason": "sample_funds" },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_closure",
                          "bank_migration",
                          "cashback",
                          "check_adjustment",
                          "collection_receivable",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "negative_balance_forgiveness",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "An Internal Source is a transaction between you and Increase. This describes the reason for the transaction.",
                        "x-enum-descriptions": [
                          "Account closure",
                          "Bank migration",
                          "Cashback",
                          "Check adjustment",
                          "Collection receivable",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Negative balance forgiveness",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": ["amount", "currency", "reason"],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "real_time_payments_transfer_acknowledgement": {
                    "type": "object",
                    "title": "Real-Time Payments Transfer Acknowledgement",
                    "description": "A Real-Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.",
                    "example": {
                      "amount": 100,
                      "destination_account_number": "987654321",
                      "destination_routing_number": "101050001",
                      "remittance_information": "Invoice 29582",
                      "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "destination_account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "destination_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Unstructured information that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Payments Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "destination_account_number",
                      "destination_routing_number",
                      "remittance_information",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Real-Time Payments Transfer Acknowledgements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": { "originator": "dashboard" },
                    "properties": {
                      "originator": { "type": "string", "description": "Where the sample funds came from." }
                    },
                    "required": ["originator"],
                    "nullable": true,
                    "x-title-plural": "Sample Funds"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": { "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "x-title-plural": "Transactions"
          },
          "type": {
            "type": "string",
            "enum": ["inbound_wire_transfer_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_wire_transfer_simulation_result`."
          }
        },
        "required": ["transaction", "type"],
        "x-title-plural": "Inbound Wire Transfer Simulation Results"
      },
      "inbound_card_authorization_simulation_result": {
        "type": "object",
        "title": "Inbound Card Authorization Simulation Result",
        "description": "The results of a Card Authorization simulation.",
        "properties": {
          "pending_transaction": {
            "type": "object",
            "title": "Pending Transaction",
            "description": "If the authorization attempt succeeds, this will contain the resulting Pending Transaction object. The Pending Transaction's `source` will be of `category: card_authorization`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the account this Pending Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction was completed.",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides."
              },
              "id": { "type": "string", "description": "The Pending Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Pending Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Pending Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_instruction",
                      "ach_transfer_instruction",
                      "card_authorization",
                      "check_deposit_instruction",
                      "check_transfer_instruction",
                      "inbound_funds_hold",
                      "real_time_payments_transfer_instruction",
                      "wire_transfer_instruction",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "Account Transfer Instruction: details will be under the `account_transfer_instruction` object.",
                      "ACH Transfer Instruction: details will be under the `ach_transfer_instruction` object.",
                      "Card Authorization: details will be under the `card_authorization` object.",
                      "Check Deposit Instruction: details will be under the `check_deposit_instruction` object.",
                      "Check Transfer Instruction: details will be under the `check_transfer_instruction` object.",
                      "Inbound Funds Hold: details will be under the `inbound_funds_hold` object.",
                      "Real-Time Payments Transfer Instruction: details will be under the `real_time_payments_transfer_instruction` object.",
                      "Wire Transfer Instruction: details will be under the `wire_transfer_instruction` object.",
                      "The Pending Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_instruction": {
                    "type": "object",
                    "title": "Account Transfer Instruction",
                    "description": "An Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": ["amount", "currency", "transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Instructions"
                  },
                  "ach_transfer_instruction": {
                    "type": "object",
                    "title": "ACH Transfer Instruction",
                    "description": "An ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                    "example": { "amount": 100, "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q" },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": ["amount", "transfer_id"],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Instructions"
                  },
                  "card_authorization": {
                    "type": "object",
                    "title": "Card Authorization",
                    "description": "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                    "example": {
                      "id": "card_authorization_6iqxap6ivd0fo5eu3i8x",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_descriptor": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "digital_wallet_token_id": null,
                      "physical_card_id": null,
                      "verification": {
                        "cardholder_address": {
                          "provided_postal_code": "94132",
                          "provided_line1": "33 Liberty Street",
                          "actual_postal_code": "94131",
                          "actual_line1": "33 Liberty Street",
                          "result": "postal_code_no_match_address_match"
                        },
                        "card_verification_code": { "result": "match" }
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "network_details": {
                        "category": "visa",
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "amount": 100,
                      "currency": "USD",
                      "direction": "settlement",
                      "processing_category": "purchase",
                      "expires_at": "2020-01-31T23:59:59Z",
                      "real_time_decision_id": null,
                      "pending_transaction_id": null,
                      "type": "card_authorization"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Authorization identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      },
                      "physical_card_id": {
                        "type": "string",
                        "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                        "nullable": true
                      },
                      "verification": {
                        "type": "object",
                        "description": "Fields related to verification of cardholder-provided values.",
                        "properties": {
                          "cardholder_address": {
                            "type": "object",
                            "title": "Cardholder Address",
                            "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                            "properties": {
                              "provided_postal_code": {
                                "type": "string",
                                "description": "The postal code provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "provided_line1": {
                                "type": "string",
                                "description": "The cardholder address line 1 provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "actual_postal_code": {
                                "type": "string",
                                "description": "The postal code of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "actual_line1": {
                                "type": "string",
                                "description": "Line 1 of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "result": {
                                "type": "string",
                                "enum": [
                                  "not_checked",
                                  "postal_code_match_address_not_checked",
                                  "postal_code_match_address_no_match",
                                  "postal_code_no_match_address_match",
                                  "match",
                                  "no_match"
                                ],
                                "description": "The address verification result returned to the card network.",
                                "x-enum-descriptions": [
                                  "No adress was provided in the authorization request.",
                                  "Postal code matches, but the street address was not verified.",
                                  "Postal code matches, but the street address does not match.",
                                  "Postal code does not match, but the street address matches.",
                                  "Postal code and street address match.",
                                  "Postal code and street address do not match."
                                ]
                              }
                            },
                            "required": [
                              "provided_postal_code",
                              "provided_line1",
                              "actual_postal_code",
                              "actual_line1",
                              "result"
                            ],
                            "x-title-plural": "Cardholder Addresses"
                          },
                          "card_verification_code": {
                            "type": "object",
                            "title": "Card Verification Code",
                            "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                            "properties": {
                              "result": {
                                "type": "string",
                                "enum": ["not_checked", "match", "no_match"],
                                "description": "The result of verifying the Card Verification Code.",
                                "x-enum-descriptions": [
                                  "No card verification code was provided in the authorization request.",
                                  "The card verification code matched the one on file.",
                                  "The card verification code did not match the one on file."
                                ]
                              }
                            },
                            "required": ["result"],
                            "x-title-plural": "Card Verification Codes"
                          }
                        },
                        "required": ["cardholder_address", "card_verification_code"],
                        "x-title-plural": "s"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "description": "Network-specific identifiers for a specific request or transaction.",
                        "example": {
                          "transaction_id": "627199945183184",
                          "trace_number": "487941",
                          "retrieval_reference_number": "785867080153"
                        },
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "trace_number": {
                            "type": "string",
                            "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                            "nullable": true
                          },
                          "retrieval_reference_number": {
                            "type": "string",
                            "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                            "nullable": true
                          }
                        },
                        "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                        "x-title-plural": "s"
                      },
                      "network_details": {
                        "type": "object",
                        "description": "Fields specific to the `network`.",
                        "properties": {
                          "category": {
                            "type": "string",
                            "enum": ["visa"],
                            "description": "The payment network used to process this card authorization.",
                            "x-enum-descriptions": ["Visa"]
                          },
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network.",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "$ref": "#/components/schemas/point_of_service_entry_mode"
                              }
                            },
                            "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                            "nullable": true,
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": ["category", "visa"],
                        "x-title-plural": "s"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "direction": {
                        "type": "string",
                        "enum": ["settlement", "refund"],
                        "description": "The direction descibes the direction the funds will move, either from the cardholder to the merchant or from the merchant to the cardholder.",
                        "x-enum-descriptions": [
                          "A regular card authorization where funds are debited from the cardholder.",
                          "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                        ]
                      },
                      "processing_category": {
                        "type": "string",
                        "enum": [
                          "account_funding",
                          "automatic_fuel_dispenser",
                          "bill_payment",
                          "purchase",
                          "quasi_cash",
                          "refund"
                        ],
                        "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                        "x-enum-descriptions": [
                          "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                          "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                          "A transaction used to pay a bill.",
                          "A regular purchase.",
                          "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                          "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                        ]
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) when this authorization will expire and the pending transaction will be released."
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_authorization"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_authorization`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "digital_wallet_token_id",
                      "physical_card_id",
                      "verification",
                      "network_identifiers",
                      "network_details",
                      "amount",
                      "currency",
                      "direction",
                      "processing_category",
                      "expires_at",
                      "real_time_decision_id",
                      "pending_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Authorizations"
                  },
                  "check_deposit_instruction": {
                    "type": "object",
                    "title": "Check Deposit Instruction",
                    "description": "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_26khfk98mzfz90a11oqx",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the image of the front of the check that was deposited."
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the image of the back of the check that was deposited.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "front_image_file_id",
                      "back_image_file_id",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Instructions"
                  },
                  "check_transfer_instruction": {
                    "type": "object",
                    "title": "Check Transfer Instruction",
                    "description": "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": ["amount", "currency", "transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Instructions"
                  },
                  "inbound_funds_hold": {
                    "type": "object",
                    "title": "Inbound Funds Hold",
                    "description": "An Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                    "example": {
                      "id": "inbound_funds_hold_9vuasmywdo7xb3zt4071",
                      "amount": 100,
                      "created_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "automatically_releases_at": "2020-01-31T23:59:59Z",
                      "released_at": null,
                      "status": "held",
                      "held_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
                      "type": "inbound_funds_hold"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Inbound Funds Hold identifier." },
                      "amount": {
                        "type": "integer",
                        "description": "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the hold was created."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "automatically_releases_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the hold will be released automatically. Certain conditions may cause it to be released before this time."
                      },
                      "released_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the hold was released (if it has been released).",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "enum": ["held", "complete"],
                        "description": "The status of the hold.",
                        "x-enum-descriptions": ["Funds are still being held.", "Funds have been released."]
                      },
                      "held_transaction_id": {
                        "type": "string",
                        "description": "The ID of the Transaction for which funds were held.",
                        "nullable": true
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The ID of the Pending Transaction representing the held funds.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": ["inbound_funds_hold"],
                        "description": "A constant representing the object's type. For this resource it will always be `inbound_funds_hold`."
                      }
                    },
                    "required": [
                      "id",
                      "amount",
                      "created_at",
                      "currency",
                      "automatically_releases_at",
                      "released_at",
                      "status",
                      "held_transaction_id",
                      "pending_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Funds Holds"
                  },
                  "real_time_payments_transfer_instruction": {
                    "type": "object",
                    "title": "Real-Time Payments Transfer Instruction",
                    "description": "A Real-Time Payments Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Payments Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": ["amount", "transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Real-Time Payments Transfer Instructions"
                  },
                  "wire_transfer_instruction": {
                    "type": "object",
                    "title": "Wire Transfer Instruction",
                    "description": "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number for the destination account."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Instructions"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_instruction",
                  "ach_transfer_instruction",
                  "card_authorization",
                  "check_deposit_instruction",
                  "check_transfer_instruction",
                  "inbound_funds_hold",
                  "real_time_payments_transfer_instruction",
                  "wire_transfer_instruction"
                ],
                "x-title-plural": "Pending Transaction Sources"
              },
              "status": {
                "type": "string",
                "enum": ["pending", "complete"],
                "description": "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
                "x-enum-descriptions": [
                  "The Pending Transaction is still awaiting confirmation.",
                  "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
                ]
              },
              "type": {
                "type": "string",
                "enum": ["pending_transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `pending_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "completed_at",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "status",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Pending Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the authorization attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: card_decline`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": { "type": "string", "description": "The Declined Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "wire_decline",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "ACH Decline: details will be under the `ach_decline` object.",
                      "Card Decline: details will be under the `card_decline` object.",
                      "Check Decline: details will be under the `check_decline` object.",
                      "Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "International ACH Decline: details will be under the `international_ach_decline` object.",
                      "Wire Decline: details will be under the `wire_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "An ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "id": "ach_decline_72v1mcwxudctq56efipa",
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "type": "ach_decline"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The ACH Decline's identifier." },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "The name of the company that initiated the transfer."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The descriptive date of the transfer.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "The additional information included with the transfer.",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "The identifier of the company that initiated the transfer."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "misrouted_return",
                          "return_of_erroneous_or_reversing_debit",
                          "no_ach_route",
                          "originator_request",
                          "transaction_not_allowed",
                          "user_initiated"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause an Increase limit to be exceeded.",
                          "A credit was refused. This is a reasonable default reason for decline of credits.",
                          "A rare return reason. The return this message refers to was a duplicate.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "A rare return reason. The return this message refers to was misrouted.",
                          "The originating financial institution made a mistake and this return corrects it.",
                          "The account number that was debited does not exist.",
                          "The originating financial institution asked for this transfer to be returned.",
                          "The transaction is not allowed per Increase's terms.",
                          "The user initiated the decline."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The id of the receiver of the transfer.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "The trace number of the transfer."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["ach_decline"],
                        "description": "A constant representing the object's type. For this resource it will always be `ach_decline`."
                      }
                    },
                    "required": [
                      "id",
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_descriptor": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "digital_wallet_token_id": null,
                      "physical_card_id": null,
                      "verification": {
                        "cardholder_address": {
                          "provided_postal_code": "94132",
                          "provided_line1": "33 Liberty Street",
                          "actual_postal_code": "94131",
                          "actual_line1": "33 Liberty Street",
                          "result": "postal_code_no_match_address_match"
                        },
                        "card_verification_code": { "result": "match" }
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "network_details": {
                        "category": "visa",
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "id": "card_decline_bx3o8zd7glq8yvtwg25v",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": -1000,
                      "currency": "USD",
                      "processing_category": "purchase",
                      "reason": "insufficient_funds",
                      "merchant_state": null,
                      "real_time_decision_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      },
                      "physical_card_id": {
                        "type": "string",
                        "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                        "nullable": true
                      },
                      "verification": {
                        "type": "object",
                        "description": "Fields related to verification of cardholder-provided values.",
                        "properties": {
                          "cardholder_address": {
                            "type": "object",
                            "title": "Cardholder Address",
                            "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                            "properties": {
                              "provided_postal_code": {
                                "type": "string",
                                "description": "The postal code provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "provided_line1": {
                                "type": "string",
                                "description": "The cardholder address line 1 provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "actual_postal_code": {
                                "type": "string",
                                "description": "The postal code of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "actual_line1": {
                                "type": "string",
                                "description": "Line 1 of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "result": {
                                "type": "string",
                                "enum": [
                                  "not_checked",
                                  "postal_code_match_address_not_checked",
                                  "postal_code_match_address_no_match",
                                  "postal_code_no_match_address_match",
                                  "match",
                                  "no_match"
                                ],
                                "description": "The address verification result returned to the card network.",
                                "x-enum-descriptions": [
                                  "No adress was provided in the authorization request.",
                                  "Postal code matches, but the street address was not verified.",
                                  "Postal code matches, but the street address does not match.",
                                  "Postal code does not match, but the street address matches.",
                                  "Postal code and street address match.",
                                  "Postal code and street address do not match."
                                ]
                              }
                            },
                            "required": [
                              "provided_postal_code",
                              "provided_line1",
                              "actual_postal_code",
                              "actual_line1",
                              "result"
                            ],
                            "x-title-plural": "Cardholder Addresses"
                          },
                          "card_verification_code": {
                            "type": "object",
                            "title": "Card Verification Code",
                            "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                            "properties": {
                              "result": {
                                "type": "string",
                                "enum": ["not_checked", "match", "no_match"],
                                "description": "The result of verifying the Card Verification Code.",
                                "x-enum-descriptions": [
                                  "No card verification code was provided in the authorization request.",
                                  "The card verification code matched the one on file.",
                                  "The card verification code did not match the one on file."
                                ]
                              }
                            },
                            "required": ["result"],
                            "x-title-plural": "Card Verification Codes"
                          }
                        },
                        "required": ["cardholder_address", "card_verification_code"],
                        "x-title-plural": "s"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "description": "Network-specific identifiers for a specific request or transaction.",
                        "example": {
                          "transaction_id": "627199945183184",
                          "trace_number": "487941",
                          "retrieval_reference_number": "785867080153"
                        },
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "trace_number": {
                            "type": "string",
                            "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                            "nullable": true
                          },
                          "retrieval_reference_number": {
                            "type": "string",
                            "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                            "nullable": true
                          }
                        },
                        "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                        "x-title-plural": "s"
                      },
                      "network_details": {
                        "type": "object",
                        "description": "Fields specific to the `network`.",
                        "properties": {
                          "category": {
                            "type": "string",
                            "enum": ["visa"],
                            "description": "The payment network used to process this card authorization.",
                            "x-enum-descriptions": ["Visa"]
                          },
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network.",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "$ref": "#/components/schemas/point_of_service_entry_mode"
                              }
                            },
                            "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                            "nullable": true,
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": ["category", "visa"],
                        "x-title-plural": "s"
                      },
                      "id": { "type": "string", "description": "The Card Decline identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "processing_category": {
                        "type": "string",
                        "enum": [
                          "account_funding",
                          "automatic_fuel_dispenser",
                          "bill_payment",
                          "purchase",
                          "quasi_cash",
                          "refund"
                        ],
                        "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                        "x-enum-descriptions": [
                          "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                          "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                          "A transaction used to pay a bill.",
                          "A regular purchase.",
                          "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                          "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "physical_card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing",
                          "invalid_physical_card",
                          "missing_original_authorization",
                          "suspected_fraud"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The Physical Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing.",
                          "The card read had an invalid CVV, dCVV, or authorization request cryptogram.",
                          "The original card authorization for this incremental authorization does not exist.",
                          "The transaction was suspected to be fraudulent. Please reach out to support@increase.com for more information."
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "digital_wallet_token_id",
                      "physical_card_id",
                      "verification",
                      "network_identifiers",
                      "network_details",
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "processing_category",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds",
                      "front_image_file_id": null,
                      "back_image_file_id": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "A computer-readable number printed on the MICR line of business checks, usually the check number. This is useful for positive pay checks, but can be unreliably transmitted by the bank of first deposit.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_disabled",
                          "ach_route_canceled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "stop_payment_requested",
                          "duplicate_presentment",
                          "not_authorized",
                          "amount_mismatch",
                          "not_our_item",
                          "no_account_number_found"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is disabled.",
                          "The account number is canceled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Stop payment requested for this check.",
                          "The check was a duplicate deposit.",
                          "The check was not authorized.",
                          "The amount the receiving bank is attempting to deposit does not match the amount on the check.",
                          "The check attempting to be deposited does not belong to Increase.",
                          "The account number on the check does not exist at Increase."
                        ]
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the declined check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the declined check.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason",
                      "front_image_file_id",
                      "back_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Decline",
                    "description": "An Inbound Real-Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "account_restricted",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is restricted.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real-Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "An International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "wire_decline": {
                    "type": "object",
                    "title": "Wire Decline",
                    "description": "A Wire Decline object. This field will be present in the JSON response if and only if `category` is equal to `wire_decline`.",
                    "example": {
                      "amount": 100,
                      "reason": "account_number_disabled",
                      "description": "Inbound wire transfer",
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "entity_not_active",
                          "group_locked",
                          "no_account_number",
                          "transaction_not_allowed"
                        ],
                        "description": "Why the wire transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "The beneficiary account number does not exist.",
                          "The transaction is not allowed per Increase's terms."
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the declined transaction."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "reason",
                      "description",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "wire_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["declined_transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": ["inbound_card_authorization_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_card_authorization_simulation_result`."
          }
        },
        "required": ["pending_transaction", "declined_transaction", "type"],
        "x-title-plural": "Inbound Card Authorization Simulation Results"
      },
      "interest_payment_simulation_result": {
        "type": "object",
        "title": "Interest Payment Simulation Result",
        "description": "The results of an Interest Payment simulation.",
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "This will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: interest_payment`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "An informational message describing this transaction. Use the fields in `source` to get more detailed information. This field appears as the line-item on the statement."
              },
              "id": { "type": "string", "description": "The Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "card_revenue_payment",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_deposit",
                      "check_transfer_intention",
                      "check_transfer_stop_payment_request",
                      "fee_payment",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_source",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                      "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                      "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                      "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                      "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                      "Card Refund: details will be under the `card_refund` object.",
                      "Card Settlement: details will be under the `card_settlement` object.",
                      "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                      "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                      "Check Deposit Return: details will be under the `check_deposit_return` object.",
                      "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                      "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                      "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                      "Fee Payment: details will be under the `fee_payment` object.",
                      "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                      "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                      "Inbound Check: details will be under the `inbound_check` object.",
                      "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                      "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                      "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                      "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                      "Interest Payment: details will be under the `interest_payment` object.",
                      "Internal Source: details will be under the `internal_source` object.",
                      "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "Sample Funds: details will be under the `sample_funds` object.",
                      "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                      "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "An Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "An ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number for the destination account."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": "A description set when the ACH Transfer was created."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "An ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": { "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "An ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "raw_return_reason_code": "R01",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "account_sold_to_another_dfi",
                          "addenda_error",
                          "beneficiary_or_account_holder_deceased",
                          "customer_advised_not_within_authorization_terms",
                          "corrected_return",
                          "duplicate_entry",
                          "duplicate_return",
                          "enr_duplicate_enrollment",
                          "enr_invalid_dfi_account_number",
                          "enr_invalid_individual_id_number",
                          "enr_invalid_representative_payee_indicator",
                          "enr_invalid_transaction_code",
                          "enr_return_of_enr_entry",
                          "enr_routing_number_check_digit_error",
                          "entry_not_processed_by_gateway",
                          "field_error",
                          "foreign_receiving_dfi_unable_to_settle",
                          "iat_entry_coding_error",
                          "improper_effective_entry_date",
                          "improper_source_document_source_document_presented",
                          "invalid_company_id",
                          "invalid_foreign_receiving_dfi_identification",
                          "invalid_individual_id_number",
                          "item_and_rck_entry_presented_for_payment",
                          "item_related_to_rck_entry_is_ineligible",
                          "mandatory_field_error",
                          "misrouted_dishonored_return",
                          "misrouted_return",
                          "no_errors_found",
                          "non_acceptance_of_r62_dishonored_return",
                          "non_participant_in_iat_program",
                          "permissible_return_entry",
                          "permissible_return_entry_not_accepted",
                          "rdfi_non_settlement",
                          "rdfi_participant_in_check_truncation_program",
                          "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                          "return_not_a_duplicate",
                          "return_of_erroneous_or_reversing_debit",
                          "return_of_improper_credit_entry",
                          "return_of_improper_debit_entry",
                          "return_of_xck_entry",
                          "source_document_presented_for_payment",
                          "state_law_affecting_rck_acceptance",
                          "stop_payment_on_item_related_to_rck_entry",
                          "stop_payment_on_source_document",
                          "timely_original_return",
                          "trace_number_error",
                          "untimely_dishonored_return",
                          "untimely_return"
                        ],
                        "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                        "x-enum-descriptions": [
                          "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                          "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                          "Code R02. The account is closed at the receiving bank.",
                          "Code R04. The account number is invalid at the receiving bank.",
                          "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                          "Code R23. The receiving bank account refused a credit transfer.",
                          "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                          "Code R08. The receiving bank stopped payment on this transfer.",
                          "Code R20. The receiving bank account does not perform transfers.",
                          "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                          "Code R28. The routing number is incorrect.",
                          "Code R10. The customer at the receiving bank reversed the transfer.",
                          "Code R19. The amount field is incorrect or too large.",
                          "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                          "Code R13. The routing number is invalid.",
                          "Code R17. The receiving bank is unable to process a field in the transfer.",
                          "Code R45. The individual name field was invalid.",
                          "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                          "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                          "Code R85. The outbound international ACH transfer was incorrect.",
                          "Code R12. A rare return reason. The account was sold to another bank.",
                          "Code R25. The addenda record is incorrect or missing.",
                          "Code R15. A rare return reason. The account holder is deceased.",
                          "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                          "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                          "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                          "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                          "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                          "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                          "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                          "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                          "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                          "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                          "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                          "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                          "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                          "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                          "Code R26. A rare return reason. The ACH is missing a required field.",
                          "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                          "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                          "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                          "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                          "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                          "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                          "Code R70. A rare return reason. The receiving bank had not approved this return.",
                          "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                          "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                          "Code R14. A rare return reason. The payee is deceased.",
                          "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                          "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                          "Code R36. A rare return reason. Return of a malformed credit entry.",
                          "Code R35. A rare return reason. Return of a malformed debit entry.",
                          "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                          "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                          "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                          "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                          "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                          "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                          "Code R72. A rare return reason. The dishonored return was sent too late.",
                          "Code R68. A rare return reason. The return was sent too late."
                        ]
                      },
                      "raw_return_reason_code": {
                        "type": "string",
                        "description": "The three character ACH return code, in the range R01 to R85."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "raw_return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
                      }
                    },
                    "required": ["accepted_at", "card_dispute_id", "transaction_id"],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "id": "card_refund_imgc2xwplh6t4r3gn16e",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": 100,
                      "currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_refund"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Refund identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_refund"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "purchase_details",
                      "transaction_id",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "id": "card_settlement_khv5kfeu0vndj291omg6",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "card_authorization": null,
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "pending_transaction_id": null,
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_settlement"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Settlement identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "card_authorization": {
                        "type": "string",
                        "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_settlement"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "card_authorization",
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "transaction_id",
                      "pending_transaction_id",
                      "purchase_details",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "card_revenue_payment": {
                    "type": "object",
                    "title": "Card Revenue Payment",
                    "description": "A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "transacted_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "transacted_on_account_id": {
                        "type": "string",
                        "description": "The account the card belonged to.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "transacted_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Revenue Payments"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image",
                          "endorsement_irregular",
                          "altered_or_fictitious_item",
                          "frozen_or_blocked_account",
                          "post_dated",
                          "endorsement_missing",
                          "signature_missing",
                          "stop_payment_suspect",
                          "unusable_image",
                          "image_fails_security_check",
                          "cannot_determine_amount",
                          "signature_irregular",
                          "non_cash_item",
                          "unable_to_process",
                          "item_exceeds_dollar_limit",
                          "branch_or_account_sold"
                        ],
                        "description": "Why this check was returned by the bank holding the account it was drawn against.",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read.",
                          "The check endorsement was irregular.",
                          "The check present was either altered or fake.",
                          "The account this check is drawn on is frozen.",
                          "The check is post dated.",
                          "The endorsement was missing.",
                          "The check signature was missing.",
                          "The bank suspects a stop payment will be placed.",
                          "The bank cannot read the image.",
                          "The check image fails the bank's security check.",
                          "The bank cannot determine the amount.",
                          "The signature is inconsistent with prior signatures.",
                          "The check is a non-cash item and cannot be drawn against the account.",
                          "The bank is unable to process this check.",
                          "The check exceeds the bank or customer's limit.",
                          "The bank sold this account and no longer services this customer."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_deposit": {
                    "type": "object",
                    "title": "Check Transfer Deposit",
                    "description": "A Check Transfer Deposit object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_deposit`.",
                    "example": {
                      "deposited_at": "2020-01-31T23:59:59Z",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": null,
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "type": "check_transfer_deposit"
                    },
                    "properties": {
                      "deposited_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the check was deposited."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction object created when the check was deposited.",
                        "nullable": true
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer object that was deposited."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_deposit"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
                      }
                    },
                    "required": [
                      "deposited_at",
                      "transaction_id",
                      "front_image_file_id",
                      "back_image_file_id",
                      "bank_of_first_deposit_routing_number",
                      "transfer_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Deposits"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination.",
                        "nullable": true
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination.",
                        "nullable": true
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination.",
                        "nullable": true
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination.",
                        "nullable": true
                      },
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "reason": "mail_delivery_failed",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "reason": {
                        "type": "string",
                        "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                        "description": "The reason why this transfer was stopped.",
                        "x-enum-descriptions": [
                          "The check could not be delivered.",
                          "The check was canceled by an Increase operator who will provide details out-of-band.",
                          "The check was stopped for another reason."
                        ]
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_stop_payment_request"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": ["transfer_id", "reason", "requested_at", "type"],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "fee_payment": {
                    "type": "object",
                    "title": "Fee Payment",
                    "description": "A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "fee_statement_id": "fee_statement_lz33v0d7pnxwkptrdwq4",
                      "fee_period_start": "2023-05-01"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "fee_period_start": {
                        "type": "string",
                        "format": "date",
                        "description": "The start of this payment's fee period, usually the first day of a month."
                      }
                    },
                    "required": ["amount", "currency", "fee_period_start"],
                    "nullable": true,
                    "x-title-plural": "Fee Payments"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer Intention",
                    "description": "An Inbound ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "transfer_id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "A name set by the originator to identify themselves."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The description of the date of the transfer, usually in the format `YYMMDD`.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "Data set by the originator.",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "An informational description of the transfer."
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally, but not always, a stable identifier across multiple transfers."
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The originator's identifier for the transfer receipient.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the transfer recipient. This value is informational and not verified by Increase.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The inbound ach transfer's identifier."
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfer Intentions"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "An Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": "101050001"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "The number of the check. This field is set by the depositing bank and can be unreliable.",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "The front image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "The rear image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id",
                      "bank_of_first_deposit_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "An Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Confirmation",
                    "description": "An Inbound Real-Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "An Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount that was reversed." },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "An Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the receiving bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "An Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "created_at": "2020-01-31T23:59:59Z",
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null,
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed in USD cents."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire, set by the reversing bank."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The ID for the Transaction associated with the transfer reversal."
                      },
                      "wire_transfer_id": {
                        "type": "string",
                        "description": "The ID for the Wire Transfer that is being reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "created_at",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information",
                      "transaction_id",
                      "wire_transfer_id",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "An Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount in USD cents." },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "An Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": ["amount", "currency", "period_start", "period_end", "accrued_on_account_id"],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "An Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": { "amount": 100, "currency": "USD", "reason": "sample_funds" },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_closure",
                          "bank_migration",
                          "cashback",
                          "check_adjustment",
                          "collection_receivable",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "negative_balance_forgiveness",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "An Internal Source is a transaction between you and Increase. This describes the reason for the transaction.",
                        "x-enum-descriptions": [
                          "Account closure",
                          "Bank migration",
                          "Cashback",
                          "Check adjustment",
                          "Collection receivable",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Negative balance forgiveness",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": ["amount", "currency", "reason"],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "real_time_payments_transfer_acknowledgement": {
                    "type": "object",
                    "title": "Real-Time Payments Transfer Acknowledgement",
                    "description": "A Real-Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.",
                    "example": {
                      "amount": 100,
                      "destination_account_number": "987654321",
                      "destination_routing_number": "101050001",
                      "remittance_information": "Invoice 29582",
                      "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "destination_account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "destination_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Unstructured information that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Payments Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "destination_account_number",
                      "destination_routing_number",
                      "remittance_information",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Real-Time Payments Transfer Acknowledgements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": { "originator": "dashboard" },
                    "properties": {
                      "originator": { "type": "string", "description": "Where the sample funds came from." }
                    },
                    "required": ["originator"],
                    "nullable": true,
                    "x-title-plural": "Sample Funds"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": { "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "x-title-plural": "Transactions"
          },
          "type": {
            "type": "string",
            "enum": ["interest_payment_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `interest_payment_simulation_result`."
          }
        },
        "required": ["transaction", "type"],
        "x-title-plural": "Interest Payment Simulation Results"
      },
      "inbound_digital_wallet_token_request_simulation_result": {
        "type": "object",
        "title": "Inbound Digital Wallet Token Request Simulation Result",
        "description": "The results of a Digital Wallet Token simulation.",
        "properties": {
          "decline_reason": {
            "type": "string",
            "enum": ["card_not_active", "no_verification_method", "webhook_timed_out", "webhook_declined"],
            "description": "If the simulated tokenization attempt was declined, this field contains details as to why.",
            "nullable": true,
            "x-enum-descriptions": [
              "The card is not active.",
              "The card does not have a two-factor authentication method.",
              "Your webhook timed out when evaluating the token provisioning attempt.",
              "Your webhook declined the token provisioning attempt."
            ]
          },
          "digital_wallet_token_id": {
            "type": "string",
            "description": "If the simulated tokenization attempt was accepted, this field contains the id of the Digital Wallet Token that was created.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["inbound_digital_wallet_token_request_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_digital_wallet_token_request_simulation_result`."
          }
        },
        "required": ["decline_reason", "digital_wallet_token_id", "type"],
        "x-title-plural": "Inbound Digital Wallet Token Request Simulation Results"
      },
      "inbound_real_time_payments_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound Real-Time Payments Transfer Simulation Result",
        "description": "The results of an inbound Real-Time Payments Transfer simulation.",
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the Real-Time Payments Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_real_time_payments_transfer_confirmation`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "An informational message describing this transaction. Use the fields in `source` to get more detailed information. This field appears as the line-item on the statement."
              },
              "id": { "type": "string", "description": "The Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "card_revenue_payment",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_deposit",
                      "check_transfer_intention",
                      "check_transfer_stop_payment_request",
                      "fee_payment",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_source",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "Account Transfer Intention: details will be under the `account_transfer_intention` object.",
                      "ACH Transfer Intention: details will be under the `ach_transfer_intention` object.",
                      "ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.",
                      "ACH Transfer Return: details will be under the `ach_transfer_return` object.",
                      "Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.",
                      "Card Refund: details will be under the `card_refund` object.",
                      "Card Settlement: details will be under the `card_settlement` object.",
                      "Card Revenue Payment: details will be under the `card_revenue_payment` object.",
                      "Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.",
                      "Check Deposit Return: details will be under the `check_deposit_return` object.",
                      "Check Transfer Deposit: details will be under the `check_transfer_deposit` object.",
                      "Check Transfer Intention: details will be under the `check_transfer_intention` object.",
                      "Check Transfer Stop Payment Request: details will be under the `check_transfer_stop_payment_request` object.",
                      "Fee Payment: details will be under the `fee_payment` object.",
                      "Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.",
                      "Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.",
                      "Inbound Check: details will be under the `inbound_check` object.",
                      "Inbound International ACH Transfer: details will be under the `inbound_international_ach_transfer` object.",
                      "Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "Inbound Wire Drawdown Payment Reversal: details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "Inbound Wire Drawdown Payment: details will be under the `inbound_wire_drawdown_payment` object.",
                      "Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.",
                      "Inbound Wire Transfer: details will be under the `inbound_wire_transfer` object.",
                      "Interest Payment: details will be under the `interest_payment` object.",
                      "Internal Source: details will be under the `internal_source` object.",
                      "Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "Sample Funds: details will be under the `sample_funds` object.",
                      "Wire Transfer Intention: details will be under the `wire_transfer_intention` object.",
                      "Wire Transfer Rejection: details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "An Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "An ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number for the destination account."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": "A description set when the ACH Transfer was created."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "An ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": { "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "An ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "raw_return_reason_code": "R01",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "account_sold_to_another_dfi",
                          "addenda_error",
                          "beneficiary_or_account_holder_deceased",
                          "customer_advised_not_within_authorization_terms",
                          "corrected_return",
                          "duplicate_entry",
                          "duplicate_return",
                          "enr_duplicate_enrollment",
                          "enr_invalid_dfi_account_number",
                          "enr_invalid_individual_id_number",
                          "enr_invalid_representative_payee_indicator",
                          "enr_invalid_transaction_code",
                          "enr_return_of_enr_entry",
                          "enr_routing_number_check_digit_error",
                          "entry_not_processed_by_gateway",
                          "field_error",
                          "foreign_receiving_dfi_unable_to_settle",
                          "iat_entry_coding_error",
                          "improper_effective_entry_date",
                          "improper_source_document_source_document_presented",
                          "invalid_company_id",
                          "invalid_foreign_receiving_dfi_identification",
                          "invalid_individual_id_number",
                          "item_and_rck_entry_presented_for_payment",
                          "item_related_to_rck_entry_is_ineligible",
                          "mandatory_field_error",
                          "misrouted_dishonored_return",
                          "misrouted_return",
                          "no_errors_found",
                          "non_acceptance_of_r62_dishonored_return",
                          "non_participant_in_iat_program",
                          "permissible_return_entry",
                          "permissible_return_entry_not_accepted",
                          "rdfi_non_settlement",
                          "rdfi_participant_in_check_truncation_program",
                          "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
                          "return_not_a_duplicate",
                          "return_of_erroneous_or_reversing_debit",
                          "return_of_improper_credit_entry",
                          "return_of_improper_debit_entry",
                          "return_of_xck_entry",
                          "source_document_presented_for_payment",
                          "state_law_affecting_rck_acceptance",
                          "stop_payment_on_item_related_to_rck_entry",
                          "stop_payment_on_source_document",
                          "timely_original_return",
                          "trace_number_error",
                          "untimely_dishonored_return",
                          "untimely_return"
                        ],
                        "description": "Why the ACH Transfer was returned. This reason code is sent by the receiving bank back to Increase.",
                        "x-enum-descriptions": [
                          "Code R01. Insufficient funds in the receiving account. Sometimes abbreviated to NSF.",
                          "Code R03. The account does not exist or the receiving bank was unable to locate it.",
                          "Code R02. The account is closed at the receiving bank.",
                          "Code R04. The account number is invalid at the receiving bank.",
                          "Code R16. The account at the receiving bank was frozen per the Office of Foreign Assets Control.",
                          "Code R23. The receiving bank account refused a credit transfer.",
                          "Code R05. The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "Code R29. The corporate customer at the receiving bank reversed the transfer.",
                          "Code R08. The receiving bank stopped payment on this transfer.",
                          "Code R20. The receiving bank account does not perform transfers.",
                          "Code R09. The receiving bank account does not have enough available balance for the transfer.",
                          "Code R28. The routing number is incorrect.",
                          "Code R10. The customer at the receiving bank reversed the transfer.",
                          "Code R19. The amount field is incorrect or too large.",
                          "Code R07. The customer at the receiving institution informed their bank that they have revoked authorization for a previously authorized transfer.",
                          "Code R13. The routing number is invalid.",
                          "Code R17. The receiving bank is unable to process a field in the transfer.",
                          "Code R45. The individual name field was invalid.",
                          "Code R06. The originating financial institution asked for this transfer to be returned. The receiving bank is complying with the request.",
                          "Code R34. The receiving bank's regulatory supervisor has limited their participation in the ACH network.",
                          "Code R85. The outbound international ACH transfer was incorrect.",
                          "Code R12. A rare return reason. The account was sold to another bank.",
                          "Code R25. The addenda record is incorrect or missing.",
                          "Code R15. A rare return reason. The account holder is deceased.",
                          "Code R11. A rare return reason. The customer authorized some payment to the sender, but this payment was not in error.",
                          "Code R74. A rare return reason. Sent in response to a return that was returned with code `field_error`. The latest return should include the corrected field(s).",
                          "Code R24. A rare return reason. The receiving bank received an exact duplicate entry with the same trace number and amount.",
                          "Code R67. A rare return reason. The return this message refers to was a duplicate.",
                          "Code R47. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R43. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R44. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R46. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R41. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R40. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R42. A rare return reason. Only used for US Government agency non-monetary automatic enrollment messages.",
                          "Code R84. A rare return reason. The International ACH Transfer cannot be processed by the gateway.",
                          "Code R69. A rare return reason. One or more of the fields in the ACH were malformed.",
                          "Code R83. A rare return reason. The Foreign receiving bank was unable to settle this ACH transfer.",
                          "Code R80. A rare return reason. The International ACH Transfer is malformed.",
                          "Code R18. A rare return reason. The ACH has an improper effective entry date field.",
                          "Code R39. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R21. A rare return reason. The Company ID field of the ACH was invalid.",
                          "Code R82. A rare return reason. The foreign receiving bank identifier for an International ACH Transfer was invalid.",
                          "Code R22. A rare return reason. The Individual ID number field of the ACH was invalid.",
                          "Code R53. A rare return reason. Both the Represented Check (\"RCK\") entry and the original check were presented to the bank.",
                          "Code R51. A rare return reason. The Represented Check (\"RCK\") entry is ineligible.",
                          "Code R26. A rare return reason. The ACH is missing a required field.",
                          "Code R71. A rare return reason. The receiving bank does not recognize the routing number in a dishonored return entry.",
                          "Code R61. A rare return reason. The receiving bank does not recognize the routing number in a return entry.",
                          "Code R76. A rare return reason. Sent in response to a return, the bank does not find the errors alleged by the returning bank.",
                          "Code R77. A rare return reason. The receiving bank does not accept the return of the erroneous debit. The funds are not available at the receiving bank.",
                          "Code R81. A rare return reason. The receiving bank does not accept International ACH Transfers.",
                          "Code R31. A rare return reason. A return that has been agreed to be accepted by the receiving bank, despite falling outside of the usual return timeframe.",
                          "Code R70. A rare return reason. The receiving bank had not approved this return.",
                          "Code R32. A rare return reason. The receiving bank could not settle this transaction.",
                          "Code R30. A rare return reason. The receiving bank does not accept Check Truncation ACH transfers.",
                          "Code R14. A rare return reason. The payee is deceased.",
                          "Code R75. A rare return reason. The originating bank disputes that an earlier `duplicate_entry` return was actually a duplicate.",
                          "Code R62. A rare return reason. The originating financial institution made a mistake and this return corrects it.",
                          "Code R36. A rare return reason. Return of a malformed credit entry.",
                          "Code R35. A rare return reason. Return of a malformed debit entry.",
                          "Code R33. A rare return reason. Return of a Destroyed Check (\"XKC\") entry.",
                          "Code R37. A rare return reason. The source document related to this ACH, usually an ACH check conversion, was presented to the bank.",
                          "Code R50. A rare return reason. State law prevents the bank from accepting the Represented Check (\"RCK\") entry.",
                          "Code R52. A rare return reason. A stop payment was issued on a Represented Check (\"RCK\") entry.",
                          "Code R38. A rare return reason. The source attached to the ACH, usually an ACH check conversion, includes a stop payment.",
                          "Code R73. A rare return reason. The bank receiving an `untimely_return` believes it was on time.",
                          "Code R27. A rare return reason. An ACH return's trace number does not match an originated ACH.",
                          "Code R72. A rare return reason. The dishonored return was sent too late.",
                          "Code R68. A rare return reason. The return was sent too late."
                        ]
                      },
                      "raw_return_reason_code": {
                        "type": "string",
                        "description": "The three character ACH return code, in the range R01 to R85."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "raw_return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account."
                      }
                    },
                    "required": ["accepted_at", "card_dispute_id", "transaction_id"],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "id": "card_refund_imgc2xwplh6t4r3gn16e",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": 100,
                      "currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_refund"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Refund identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_refund"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "purchase_details",
                      "transaction_id",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "id": "card_settlement_khv5kfeu0vndj291omg6",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "card_authorization": null,
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_city": "New York",
                      "merchant_state": "NY",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "pending_transaction_id": null,
                      "purchase_details": {
                        "purchase_identifier": "10203",
                        "purchase_identifier_format": "order_number",
                        "customer_reference_identifier": "51201",
                        "local_tax_amount": null,
                        "local_tax_currency": "usd",
                        "national_tax_amount": null,
                        "national_tax_currency": "usd",
                        "car_rental": null,
                        "lodging": {
                          "no_show_indicator": "no_show",
                          "extra_charges": "restaurant",
                          "check_in_date": "2023-07-20",
                          "daily_room_rate_amount": 1000,
                          "daily_room_rate_currency": "usd",
                          "total_tax_amount": 100,
                          "total_tax_currency": "usd",
                          "prepaid_expenses_amount": 0,
                          "prepaid_expenses_currency": "usd",
                          "food_beverage_charges_amount": 0,
                          "food_beverage_charges_currency": "usd",
                          "folio_cash_advances_amount": 0,
                          "folio_cash_advances_currency": "usd",
                          "room_nights": 1,
                          "total_room_tax_amount": 100,
                          "total_room_tax_currency": "usd"
                        },
                        "travel": null
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "acquirer_reference_number": "83163715445437604865089",
                        "acquirer_business_id": "69650702"
                      },
                      "type": "card_settlement"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The Card Settlement identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "card_authorization": {
                        "type": "string",
                        "description": "The Card Authorization that was created prior to this Card Settlement, if one exists.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in."
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "The name of the merchant.",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The 4-digit MCC describing the merchant's business."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction associated with this Transaction."
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "purchase_details": {
                        "type": "object",
                        "title": "Card Purchase Details",
                        "description": "Additional details about the card purchase, such as tax and industry-specific fields.",
                        "example": {
                          "purchase_identifier": "10203",
                          "purchase_identifier_format": "order_number",
                          "customer_reference_identifier": "51201",
                          "local_tax_amount": null,
                          "local_tax_currency": "usd",
                          "national_tax_amount": null,
                          "national_tax_currency": "usd",
                          "car_rental": null,
                          "lodging": {
                            "no_show_indicator": "no_show",
                            "extra_charges": "restaurant",
                            "check_in_date": "2023-07-20",
                            "daily_room_rate_amount": 1000,
                            "daily_room_rate_currency": "usd",
                            "total_tax_amount": 100,
                            "total_tax_currency": "usd",
                            "prepaid_expenses_amount": 0,
                            "prepaid_expenses_currency": "usd",
                            "food_beverage_charges_amount": 0,
                            "food_beverage_charges_currency": "usd",
                            "folio_cash_advances_amount": 0,
                            "folio_cash_advances_currency": "usd",
                            "room_nights": 1,
                            "total_room_tax_amount": 100,
                            "total_room_tax_currency": "usd"
                          },
                          "travel": null
                        },
                        "properties": {
                          "purchase_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the purchase to the issuer and cardholder.",
                            "nullable": true
                          },
                          "purchase_identifier_format": {
                            "type": "string",
                            "enum": [
                              "free_text",
                              "order_number",
                              "rental_agreement_number",
                              "hotel_folio_number",
                              "invoice_number"
                            ],
                            "description": "The format of the purchase identifier.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Free text",
                              "Order number",
                              "Rental agreement number",
                              "Hotel folio number",
                              "Invoice number"
                            ]
                          },
                          "customer_reference_identifier": {
                            "type": "string",
                            "description": "An identifier from the merchant for the customer or consumer.",
                            "nullable": true
                          },
                          "local_tax_amount": {
                            "type": "integer",
                            "description": "The state or provincial tax amount in minor units.",
                            "nullable": true
                          },
                          "local_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "national_tax_amount": {
                            "type": "integer",
                            "description": "The national tax amount in minor units.",
                            "nullable": true
                          },
                          "national_tax_currency": {
                            "type": "string",
                            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the local tax assessed.",
                            "nullable": true
                          },
                          "car_rental": {
                            "type": "object",
                            "title": "Car Rental",
                            "description": "Fields specific to car rentals.",
                            "properties": {
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "gas",
                                  "extra_mileage",
                                  "late_return",
                                  "one_way_service_fee",
                                  "parking_violation"
                                ],
                                "description": "Additional charges (gas, late fee, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Gas",
                                  "Extra mileage",
                                  "Late return",
                                  "One way service fee",
                                  "Parking violation"
                                ]
                              },
                              "days_rented": {
                                "type": "integer",
                                "description": "Number of days the vehicle was rented.",
                                "nullable": true
                              },
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show_for_specialized_vehicle"],
                                "description": "An indicator that the cardholder is being billed for a reserved vehicle that was not actually rented (that is, a \"no-show\" charge).",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show for specialized vehicle"]
                              },
                              "checkout_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer picked up the car or, in the case of a no-show or pre-pay transaction, the scheduled pick up date.",
                                "nullable": true
                              },
                              "daily_rental_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "daily_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily rental rate.",
                                "nullable": true
                              },
                              "weekly_rental_rate_amount": {
                                "type": "integer",
                                "description": "Weekly rate being charged for the vehicle.",
                                "nullable": true
                              },
                              "weekly_rental_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the weekly rental rate.",
                                "nullable": true
                              },
                              "insurance_charges_amount": {
                                "type": "integer",
                                "description": "Any insurance being charged for the vehicle.",
                                "nullable": true
                              },
                              "insurance_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the insurance charges assessed.",
                                "nullable": true
                              },
                              "fuel_charges_amount": {
                                "type": "integer",
                                "description": "Fuel charges for the vehicle.",
                                "nullable": true
                              },
                              "fuel_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the fuel charges assessed.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_amount": {
                                "type": "integer",
                                "description": "Charges for returning the vehicle at a different location than where it was picked up.",
                                "nullable": true
                              },
                              "one_way_drop_off_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the one-way drop-off charges assessed.",
                                "nullable": true
                              },
                              "car_class_code": {
                                "type": "string",
                                "description": "Code indicating the vehicle's class.",
                                "nullable": true
                              },
                              "renter_name": {
                                "type": "string",
                                "description": "Name of the person renting the vehicle.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "extra_charges",
                              "days_rented",
                              "no_show_indicator",
                              "checkout_date",
                              "daily_rental_rate_amount",
                              "daily_rental_rate_currency",
                              "weekly_rental_rate_amount",
                              "weekly_rental_rate_currency",
                              "insurance_charges_amount",
                              "insurance_charges_currency",
                              "fuel_charges_amount",
                              "fuel_charges_currency",
                              "one_way_drop_off_charges_amount",
                              "one_way_drop_off_charges_currency",
                              "car_class_code",
                              "renter_name"
                            ],
                            "nullable": true,
                            "x-title-plural": "Car Rentals"
                          },
                          "lodging": {
                            "type": "object",
                            "title": "Lodging",
                            "description": "Fields specific to lodging.",
                            "properties": {
                              "no_show_indicator": {
                                "type": "string",
                                "enum": ["not_applicable", "no_show"],
                                "description": "Indicator that the cardholder is being billed for a reserved room that was not actually used.",
                                "nullable": true,
                                "x-enum-descriptions": ["Not applicable", "No show"]
                              },
                              "extra_charges": {
                                "type": "string",
                                "enum": [
                                  "no_extra_charge",
                                  "restaurant",
                                  "gift_shop",
                                  "mini_bar",
                                  "telephone",
                                  "other",
                                  "laundry"
                                ],
                                "description": "Additional charges (phone, late check-out, etc.) being billed.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No extra charge",
                                  "Restaurant",
                                  "Gift shop",
                                  "Mini bar",
                                  "Telephone",
                                  "Other",
                                  "Laundry"
                                ]
                              },
                              "check_in_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date the customer checked in.",
                                "nullable": true
                              },
                              "daily_room_rate_amount": {
                                "type": "integer",
                                "description": "Daily rate being charged for the room.",
                                "nullable": true
                              },
                              "daily_room_rate_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the daily room rate.",
                                "nullable": true
                              },
                              "total_tax_amount": {
                                "type": "integer",
                                "description": "Total tax being charged for the room.",
                                "nullable": true
                              },
                              "total_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total tax assessed.",
                                "nullable": true
                              },
                              "prepaid_expenses_amount": {
                                "type": "integer",
                                "description": "Prepaid expenses being charged for the room.",
                                "nullable": true
                              },
                              "prepaid_expenses_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the prepaid expenses.",
                                "nullable": true
                              },
                              "food_beverage_charges_amount": {
                                "type": "integer",
                                "description": "Food and beverage charges for the room.",
                                "nullable": true
                              },
                              "food_beverage_charges_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the food and beverage charges.",
                                "nullable": true
                              },
                              "folio_cash_advances_amount": {
                                "type": "integer",
                                "description": "Folio cash advances for the room.",
                                "nullable": true
                              },
                              "folio_cash_advances_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the folio cash advances.",
                                "nullable": true
                              },
                              "room_nights": {
                                "type": "integer",
                                "description": "Number of nights the room was rented.",
                                "nullable": true
                              },
                              "total_room_tax_amount": {
                                "type": "integer",
                                "description": "Total room tax being charged.",
                                "nullable": true
                              },
                              "total_room_tax_currency": {
                                "type": "string",
                                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the total room tax.",
                                "nullable": true
                              }
                            },
                            "required": [
                              "no_show_indicator",
                              "extra_charges",
                              "check_in_date",
                              "daily_room_rate_amount",
                              "daily_room_rate_currency",
                              "total_tax_amount",
                              "total_tax_currency",
                              "prepaid_expenses_amount",
                              "prepaid_expenses_currency",
                              "food_beverage_charges_amount",
                              "food_beverage_charges_currency",
                              "folio_cash_advances_amount",
                              "folio_cash_advances_currency",
                              "room_nights",
                              "total_room_tax_amount",
                              "total_room_tax_currency"
                            ],
                            "nullable": true,
                            "x-title-plural": "Lodgings"
                          },
                          "travel": {
                            "type": "object",
                            "title": "Travel",
                            "description": "Fields specific to travel.",
                            "properties": {
                              "ticket_number": {
                                "type": "string",
                                "description": "Ticket number.",
                                "nullable": true
                              },
                              "passenger_name": {
                                "type": "string",
                                "description": "Name of the passenger.",
                                "nullable": true
                              },
                              "departure_date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date of departure.",
                                "nullable": true
                              },
                              "origination_city_airport_code": {
                                "type": "string",
                                "description": "Code for the originating city or airport.",
                                "nullable": true
                              },
                              "travel_agency_code": {
                                "type": "string",
                                "description": "Code for the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "travel_agency_name": {
                                "type": "string",
                                "description": "Name of the travel agency if the ticket was issued by a travel agency.",
                                "nullable": true
                              },
                              "restricted_ticket_indicator": {
                                "type": "string",
                                "enum": ["no_restrictions", "restricted_non_refundable_ticket"],
                                "description": "Indicates whether this ticket is non-refundable.",
                                "nullable": true,
                                "x-enum-descriptions": ["No restrictions", "Restricted non-refundable ticket"]
                              },
                              "computerized_reservation_system": {
                                "type": "string",
                                "description": "Indicates the computerized reservation system used to book the ticket.",
                                "nullable": true
                              },
                              "credit_reason_indicator": {
                                "type": "string",
                                "enum": [
                                  "no_credit",
                                  "passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                  "airline_ticket_cancellation",
                                  "other",
                                  "partial_refund_of_airline_ticket"
                                ],
                                "description": "Indicates the reason for a credit to the cardholder.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "No credit",
                                  "Passenger transport ancillary purchase cancellation",
                                  "Airline ticket and passenger transport ancillary purchase cancellation",
                                  "Airline ticket cancellation",
                                  "Other",
                                  "Partial refund of airline ticket"
                                ]
                              },
                              "ticket_change_indicator": {
                                "type": "string",
                                "enum": ["none", "change_to_existing_ticket", "new_ticket"],
                                "description": "Indicates why a ticket was changed.",
                                "nullable": true,
                                "x-enum-descriptions": ["None", "Change to existing ticket", "New ticket"]
                              },
                              "trip_legs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Trip Legs Element",
                                  "properties": {
                                    "flight_number": {
                                      "type": "string",
                                      "description": "Flight number.",
                                      "nullable": true
                                    },
                                    "carrier_code": {
                                      "type": "string",
                                      "description": "Carrier code (e.g., United Airlines, Jet Blue, etc.).",
                                      "nullable": true
                                    },
                                    "fare_basis_code": {
                                      "type": "string",
                                      "description": "Fare basis code.",
                                      "nullable": true
                                    },
                                    "service_class": {
                                      "type": "string",
                                      "description": "Service class (e.g., first class, business class, etc.).",
                                      "nullable": true
                                    },
                                    "stop_over_code": {
                                      "type": "string",
                                      "enum": ["none", "stop_over_allowed", "stop_over_not_allowed"],
                                      "description": "Indicates whether a stopover is allowed on this ticket.",
                                      "nullable": true,
                                      "x-enum-descriptions": [
                                        "None",
                                        "Stop over allowed",
                                        "Stop over not allowed"
                                      ]
                                    },
                                    "destination_city_airport_code": {
                                      "type": "string",
                                      "description": "Code for the destination city or airport.",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "flight_number",
                                    "carrier_code",
                                    "fare_basis_code",
                                    "service_class",
                                    "stop_over_code",
                                    "destination_city_airport_code"
                                  ],
                                  "x-title-plural": "Trip Legs Elements"
                                },
                                "description": "Fields specific to each leg of the journey.",
                                "nullable": true
                              },
                              "ancillary": {
                                "type": "object",
                                "title": "Ancillary",
                                "description": "Ancillary purchases in addition to the airfare.",
                                "properties": {
                                  "ticket_document_number": {
                                    "type": "string",
                                    "description": "Ticket document number.",
                                    "nullable": true
                                  },
                                  "passenger_name_or_description": {
                                    "type": "string",
                                    "description": "Name of the passenger or description of the ancillary purchase.",
                                    "nullable": true
                                  },
                                  "connected_ticket_document_number": {
                                    "type": "string",
                                    "description": "If this purchase has a connection or relationship to another purchase, such as a baggage fee for a passenger transport ticket, this field should contain the ticket document number for the other purchase.",
                                    "nullable": true
                                  },
                                  "credit_reason_indicator": {
                                    "type": "string",
                                    "enum": [
                                      "no_credit",
                                      "passenger_transport_ancillary_purchase_cancellation",
                                      "airline_ticket_and_passenger_transport_ancillary_purchase_cancellation",
                                      "other"
                                    ],
                                    "description": "Indicates the reason for a credit to the cardholder.",
                                    "nullable": true,
                                    "x-enum-descriptions": [
                                      "No credit",
                                      "Passenger transport ancillary purchase cancellation",
                                      "Airline ticket and passenger transport ancillary purchase cancellation",
                                      "Other"
                                    ]
                                  },
                                  "services": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Services Element",
                                      "properties": {
                                        "category": {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "bundled_service",
                                            "baggage_fee",
                                            "change_fee",
                                            "cargo",
                                            "carbon_offset",
                                            "frequent_flyer",
                                            "gift_card",
                                            "ground_transport",
                                            "in_flight_entertainment",
                                            "lounge",
                                            "medical",
                                            "meal_beverage",
                                            "other",
                                            "passenger_assist_fee",
                                            "pets",
                                            "seat_fees",
                                            "standby",
                                            "service_fee",
                                            "store",
                                            "travel_service",
                                            "unaccompanied_travel",
                                            "upgrades",
                                            "wifi"
                                          ],
                                          "description": "Category of the ancillary service.",
                                          "nullable": true,
                                          "x-enum-descriptions": [
                                            "None",
                                            "Bundled service",
                                            "Baggage fee",
                                            "Change fee",
                                            "Cargo",
                                            "Carbon offset",
                                            "Frequent flyer",
                                            "Gift card",
                                            "Ground transport",
                                            "In-flight entertainment",
                                            "Lounge",
                                            "Medical",
                                            "Meal beverage",
                                            "Other",
                                            "Passenger assist fee",
                                            "Pets",
                                            "Seat fees",
                                            "Standby",
                                            "Service fee",
                                            "Store",
                                            "Travel service",
                                            "Unaccompanied travel",
                                            "Upgrades",
                                            "Wi-fi"
                                          ]
                                        },
                                        "sub_category": {
                                          "type": "string",
                                          "description": "Sub-category of the ancillary service, free-form.",
                                          "nullable": true
                                        }
                                      },
                                      "required": ["category", "sub_category"],
                                      "x-title-plural": "Services Elements"
                                    },
                                    "description": "Additional travel charges, such as baggage fees."
                                  }
                                },
                                "required": [
                                  "ticket_document_number",
                                  "passenger_name_or_description",
                                  "connected_ticket_document_number",
                                  "credit_reason_indicator",
                                  "services"
                                ],
                                "nullable": true,
                                "x-title-plural": "Ancillaries"
                              }
                            },
                            "required": [
                              "ticket_number",
                              "passenger_name",
                              "departure_date",
                              "origination_city_airport_code",
                              "travel_agency_code",
                              "travel_agency_name",
                              "restricted_ticket_indicator",
                              "computerized_reservation_system",
                              "credit_reason_indicator",
                              "ticket_change_indicator",
                              "trip_legs",
                              "ancillary"
                            ],
                            "nullable": true,
                            "x-title-plural": "Travels"
                          }
                        },
                        "required": [
                          "purchase_identifier",
                          "purchase_identifier_format",
                          "customer_reference_identifier",
                          "local_tax_amount",
                          "local_tax_currency",
                          "national_tax_amount",
                          "national_tax_currency",
                          "car_rental",
                          "lodging",
                          "travel"
                        ],
                        "nullable": true,
                        "x-title-plural": "Card Purchase Details"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "title": "Network Identifiers",
                        "description": "Network-specific identifiers for this refund.",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "acquirer_reference_number": {
                            "type": "string",
                            "description": "A globally unique identifier for this settlement."
                          },
                          "acquirer_business_id": {
                            "type": "string",
                            "description": "A network assigned business ID that identifies the acquirer that processed this transaction."
                          }
                        },
                        "required": ["transaction_id", "acquirer_reference_number", "acquirer_business_id"],
                        "x-title-plural": "Network Identifiers"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["card_settlement"],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "id",
                      "card_payment_id",
                      "card_authorization",
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_state",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "transaction_id",
                      "pending_transaction_id",
                      "purchase_details",
                      "network_identifiers",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "card_revenue_payment": {
                    "type": "object",
                    "title": "Card Revenue Payment",
                    "description": "A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "transacted_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "transacted_on_account_id": {
                        "type": "string",
                        "description": "The account the card belonged to.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "transacted_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Revenue Payments"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image",
                          "endorsement_irregular",
                          "altered_or_fictitious_item",
                          "frozen_or_blocked_account",
                          "post_dated",
                          "endorsement_missing",
                          "signature_missing",
                          "stop_payment_suspect",
                          "unusable_image",
                          "image_fails_security_check",
                          "cannot_determine_amount",
                          "signature_irregular",
                          "non_cash_item",
                          "unable_to_process",
                          "item_exceeds_dollar_limit",
                          "branch_or_account_sold"
                        ],
                        "description": "Why this check was returned by the bank holding the account it was drawn against.",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read.",
                          "The check endorsement was irregular.",
                          "The check present was either altered or fake.",
                          "The account this check is drawn on is frozen.",
                          "The check is post dated.",
                          "The endorsement was missing.",
                          "The check signature was missing.",
                          "The bank suspects a stop payment will be placed.",
                          "The bank cannot read the image.",
                          "The check image fails the bank's security check.",
                          "The bank cannot determine the amount.",
                          "The signature is inconsistent with prior signatures.",
                          "The check is a non-cash item and cannot be drawn against the account.",
                          "The bank is unable to process this check.",
                          "The check exceeds the bank or customer's limit.",
                          "The bank sold this account and no longer services this customer."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_deposit": {
                    "type": "object",
                    "title": "Check Transfer Deposit",
                    "description": "A Check Transfer Deposit object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_deposit`.",
                    "example": {
                      "deposited_at": "2020-01-31T23:59:59Z",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": null,
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "type": "check_transfer_deposit"
                    },
                    "properties": {
                      "deposited_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the check was deposited."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction object created when the check was deposited.",
                        "nullable": true
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the deposited check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the deposited check.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer object that was deposited."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_deposit"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
                      }
                    },
                    "required": [
                      "deposited_at",
                      "transaction_id",
                      "front_image_file_id",
                      "back_image_file_id",
                      "bank_of_first_deposit_routing_number",
                      "transfer_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Deposits"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination.",
                        "nullable": true
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination.",
                        "nullable": true
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination.",
                        "nullable": true
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination.",
                        "nullable": true
                      },
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check.",
                        "nullable": true
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "reason": "mail_delivery_failed",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "reason": {
                        "type": "string",
                        "enum": ["mail_delivery_failed", "rejected_by_increase", "unknown"],
                        "description": "The reason why this transfer was stopped.",
                        "x-enum-descriptions": [
                          "The check could not be delivered.",
                          "The check was canceled by an Increase operator who will provide details out-of-band.",
                          "The check was stopped for another reason."
                        ]
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["check_transfer_stop_payment_request"],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": ["transfer_id", "reason", "requested_at", "type"],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "fee_payment": {
                    "type": "object",
                    "title": "Fee Payment",
                    "description": "A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "fee_statement_id": "fee_statement_lz33v0d7pnxwkptrdwq4",
                      "fee_period_start": "2023-05-01"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "fee_period_start": {
                        "type": "string",
                        "format": "date",
                        "description": "The start of this payment's fee period, usually the first day of a month."
                      }
                    },
                    "required": ["amount", "currency", "fee_period_start"],
                    "nullable": true,
                    "x-title-plural": "Fee Payments"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer Intention",
                    "description": "An Inbound ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "transfer_id": "inbound_ach_transfer_tdrwqr3fq9gnnq49odev"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "A name set by the originator to identify themselves."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The description of the date of the transfer, usually in the format `YYMMDD`.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "Data set by the originator.",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "An informational description of the transfer."
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally, but not always, a stable identifier across multiple transfers."
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The originator's identifier for the transfer receipient.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the transfer recipient. This value is informational and not verified by Increase.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The inbound ach transfer's identifier."
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfer Intentions"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "An Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "bank_of_first_deposit_routing_number": "101050001"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "The number of the check. This field is set by the depositing bank and can be unreliable.",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "The front image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "The rear image of the check. This is a black and white TIFF image file.",
                        "nullable": true
                      },
                      "bank_of_first_deposit_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the bank depositing this check. In some rare cases, this is not transmitted via Check21 and the value will be null.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id",
                      "bank_of_first_deposit_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "An Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Confirmation",
                    "description": "An Inbound Real-Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "An Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount that was reversed." },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "An Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the receiving bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "An Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "created_at": "2020-01-31T23:59:59Z",
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null,
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "wire_transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u",
                      "originator_routing_number": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed in USD cents."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire, set by the reversing bank."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal. The \"Fedwire day\" begins at 9:00 PM Eastern Time on the evening before the `cycle date`."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that is being reversed by this message."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The ID for the Transaction associated with the transfer reversal."
                      },
                      "wire_transfer_id": {
                        "type": "string",
                        "description": "The ID for the Wire Transfer that is being reversed."
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "created_at",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information",
                      "transaction_id",
                      "wire_transfer_id",
                      "originator_routing_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "An Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The amount in USD cents." },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the transfer."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "An Increase-created concatenation of the Originator-to-Beneficiary lines.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "An Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-12-01T00:00:00Z",
                      "period_end": "2023-12-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": ["amount", "currency", "period_start", "period_end", "accrued_on_account_id"],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "An Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": { "amount": 100, "currency": "USD", "reason": "sample_funds" },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_closure",
                          "bank_migration",
                          "cashback",
                          "check_adjustment",
                          "collection_receivable",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "negative_balance_forgiveness",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "An Internal Source is a transaction between you and Increase. This describes the reason for the transaction.",
                        "x-enum-descriptions": [
                          "Account closure",
                          "Bank migration",
                          "Cashback",
                          "Check adjustment",
                          "Collection receivable",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Negative balance forgiveness",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": ["amount", "currency", "reason"],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "real_time_payments_transfer_acknowledgement": {
                    "type": "object",
                    "title": "Real-Time Payments Transfer Acknowledgement",
                    "description": "A Real-Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.",
                    "example": {
                      "amount": 100,
                      "destination_account_number": "987654321",
                      "destination_routing_number": "101050001",
                      "remittance_information": "Invoice 29582",
                      "transfer_id": "real_time_payments_transfer_iyuhl5kdn7ssmup83mvq"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "destination_account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "destination_routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Unstructured information that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Payments Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "destination_account_number",
                      "destination_routing_number",
                      "remittance_information",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Real-Time Payments Transfer Acknowledgements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": { "originator": "dashboard" },
                    "properties": {
                      "originator": { "type": "string", "description": "Where the sample funds came from." }
                    },
                    "required": ["originator"],
                    "nullable": true,
                    "x-title-plural": "Sample Funds"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": { "type": "integer", "description": "The transfer amount in USD cents." },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": { "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u" },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Wire Transfer that led to this Transaction."
                      }
                    },
                    "required": ["transfer_id"],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "card_revenue_payment",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_deposit",
                  "check_transfer_intention",
                  "check_transfer_stop_payment_request",
                  "fee_payment",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the Real-Time Payments Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_real_time_payments_transfer_decline`.",
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transaction's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occurred."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": { "type": "string", "description": "The Declined Transaction identifier." },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "enum": ["account_number", "card"],
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true,
                "x-enum-descriptions": ["An Account Number.", "A Card."]
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "wire_decline",
                      "other"
                    ],
                    "description": "The type of the resource. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "ACH Decline: details will be under the `ach_decline` object.",
                      "Card Decline: details will be under the `card_decline` object.",
                      "Check Decline: details will be under the `check_decline` object.",
                      "Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "International ACH Decline: details will be under the `international_ach_decline` object.",
                      "Wire Decline: details will be under the `wire_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "An ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "id": "ach_decline_72v1mcwxudctq56efipa",
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022",
                      "type": "ach_decline"
                    },
                    "properties": {
                      "id": { "type": "string", "description": "The ACH Decline's identifier." },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": "The name of the company that initiated the transfer."
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "The descriptive date of the transfer.",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "The additional information included with the transfer.",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": "The identifier of the company that initiated the transfer."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "misrouted_return",
                          "return_of_erroneous_or_reversing_debit",
                          "no_ach_route",
                          "originator_request",
                          "transaction_not_allowed",
                          "user_initiated"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause an Increase limit to be exceeded.",
                          "A credit was refused. This is a reasonable default reason for decline of credits.",
                          "A rare return reason. The return this message refers to was a duplicate.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "A rare return reason. The return this message refers to was misrouted.",
                          "The originating financial institution made a mistake and this return corrects it.",
                          "The account number that was debited does not exist.",
                          "The originating financial institution asked for this transfer to be returned.",
                          "The transaction is not allowed per Increase's terms.",
                          "The user initiated the decline."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "The id of the receiver of the transfer.",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer.",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "The trace number of the transfer."
                      },
                      "type": {
                        "type": "string",
                        "enum": ["ach_decline"],
                        "description": "A constant representing the object's type. For this resource it will always be `ach_decline`."
                      }
                    },
                    "required": [
                      "id",
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_descriptor": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "digital_wallet_token_id": null,
                      "physical_card_id": null,
                      "verification": {
                        "cardholder_address": {
                          "provided_postal_code": "94132",
                          "provided_line1": "33 Liberty Street",
                          "actual_postal_code": "94131",
                          "actual_line1": "33 Liberty Street",
                          "result": "postal_code_no_match_address_match"
                        },
                        "card_verification_code": { "result": "match" }
                      },
                      "network_identifiers": {
                        "transaction_id": "627199945183184",
                        "trace_number": "487941",
                        "retrieval_reference_number": "785867080153"
                      },
                      "network_details": {
                        "category": "visa",
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "id": "card_decline_bx3o8zd7glq8yvtwg25v",
                      "card_payment_id": "card_payment_nd3k2kacrqjli8482ave",
                      "amount": -1000,
                      "currency": "USD",
                      "processing_category": "purchase",
                      "reason": "insufficient_funds",
                      "merchant_state": null,
                      "real_time_decision_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      },
                      "physical_card_id": {
                        "type": "string",
                        "description": "If the authorization was made in-person with a physical card, the Physical Card that was used.",
                        "nullable": true
                      },
                      "verification": {
                        "type": "object",
                        "description": "Fields related to verification of cardholder-provided values.",
                        "properties": {
                          "cardholder_address": {
                            "type": "object",
                            "title": "Cardholder Address",
                            "description": "Cardholder address provided in the authorization request and the address on file we verified it against.",
                            "properties": {
                              "provided_postal_code": {
                                "type": "string",
                                "description": "The postal code provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "provided_line1": {
                                "type": "string",
                                "description": "The cardholder address line 1 provided for verification in the authorization request.",
                                "nullable": true
                              },
                              "actual_postal_code": {
                                "type": "string",
                                "description": "The postal code of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "actual_line1": {
                                "type": "string",
                                "description": "Line 1 of the address on file for the cardholder.",
                                "nullable": true
                              },
                              "result": {
                                "type": "string",
                                "enum": [
                                  "not_checked",
                                  "postal_code_match_address_not_checked",
                                  "postal_code_match_address_no_match",
                                  "postal_code_no_match_address_match",
                                  "match",
                                  "no_match"
                                ],
                                "description": "The address verification result returned to the card network.",
                                "x-enum-descriptions": [
                                  "No adress was provided in the authorization request.",
                                  "Postal code matches, but the street address was not verified.",
                                  "Postal code matches, but the street address does not match.",
                                  "Postal code does not match, but the street address matches.",
                                  "Postal code and street address match.",
                                  "Postal code and street address do not match."
                                ]
                              }
                            },
                            "required": [
                              "provided_postal_code",
                              "provided_line1",
                              "actual_postal_code",
                              "actual_line1",
                              "result"
                            ],
                            "x-title-plural": "Cardholder Addresses"
                          },
                          "card_verification_code": {
                            "type": "object",
                            "title": "Card Verification Code",
                            "description": "Fields related to verification of the Card Verification Code, a 3-digit code on the back of the card.",
                            "properties": {
                              "result": {
                                "type": "string",
                                "enum": ["not_checked", "match", "no_match"],
                                "description": "The result of verifying the Card Verification Code.",
                                "x-enum-descriptions": [
                                  "No card verification code was provided in the authorization request.",
                                  "The card verification code matched the one on file.",
                                  "The card verification code did not match the one on file."
                                ]
                              }
                            },
                            "required": ["result"],
                            "x-title-plural": "Card Verification Codes"
                          }
                        },
                        "required": ["cardholder_address", "card_verification_code"],
                        "x-title-plural": "s"
                      },
                      "network_identifiers": {
                        "type": "object",
                        "description": "Network-specific identifiers for a specific request or transaction.",
                        "example": {
                          "transaction_id": "627199945183184",
                          "trace_number": "487941",
                          "retrieval_reference_number": "785867080153"
                        },
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "A globally unique transaction identifier provided by the card network, used across multiple life-cycle requests.",
                            "nullable": true
                          },
                          "trace_number": {
                            "type": "string",
                            "description": "A counter used to verify an individual authorization. Expected to be unique per acquirer within a window of time.",
                            "nullable": true
                          },
                          "retrieval_reference_number": {
                            "type": "string",
                            "description": "A life-cycle identifier used across e.g., an authorization and a reversal. Expected to be unique per acquirer within a window of time. For some card networks the retrieval reference number includes the trace counter.",
                            "nullable": true
                          }
                        },
                        "required": ["transaction_id", "trace_number", "retrieval_reference_number"],
                        "x-title-plural": "s"
                      },
                      "network_details": {
                        "type": "object",
                        "description": "Fields specific to the `network`.",
                        "properties": {
                          "category": {
                            "type": "string",
                            "enum": ["visa"],
                            "description": "The payment network used to process this card authorization.",
                            "x-enum-descriptions": ["Visa"]
                          },
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network.",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "$ref": "#/components/schemas/point_of_service_entry_mode"
                              }
                            },
                            "required": ["electronic_commerce_indicator", "point_of_service_entry_mode"],
                            "nullable": true,
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": ["category", "visa"],
                        "x-title-plural": "s"
                      },
                      "id": { "type": "string", "description": "The Card Decline identifier." },
                      "card_payment_id": {
                        "type": "string",
                        "description": "The ID of the Card Payment this transaction belongs to.",
                        "nullable": true
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "processing_category": {
                        "type": "string",
                        "enum": [
                          "account_funding",
                          "automatic_fuel_dispenser",
                          "bill_payment",
                          "purchase",
                          "quasi_cash",
                          "refund"
                        ],
                        "description": "The processing category describes the intent behind the authorization, such as whether it was used for bill payments or an automatic fuel dispenser.",
                        "x-enum-descriptions": [
                          "Account funding transactions are transactions used to e.g., fund an account or transfer funds between accounts.",
                          "Automatic fuel dispenser authorizations occur when a card is used at a gas pump, prior to the actual transaction amount being known. They are followed by an advice message that updates the amount of the pending transaction.",
                          "A transaction used to pay a bill.",
                          "A regular purchase.",
                          "Quasi-cash transactions represent purchases of items which may be convertible to cash.",
                          "A refund card authorization, sometimes referred to as a credit voucher authorization, where funds are credited to the cardholder."
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "physical_card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing",
                          "invalid_physical_card",
                          "missing_original_authorization",
                          "suspected_fraud"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The Physical Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing.",
                          "The card read had an invalid CVV, dCVV, or authorization request cryptogram.",
                          "The original card authorization for this incremental authorization does not exist.",
                          "The transaction was suspected to be fraudulent. Please reach out to support@increase.com for more information."
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "digital_wallet_token_id",
                      "physical_card_id",
                      "verification",
                      "network_identifiers",
                      "network_details",
                      "id",
                      "card_payment_id",
                      "amount",
                      "currency",
                      "processing_category",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds",
                      "front_image_file_id": null,
                      "back_image_file_id": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "A computer-readable number printed on the MICR line of business checks, usually the check number. This is useful for positive pay checks, but can be unreliably transmitted by the bank of first deposit.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_disabled",
                          "ach_route_canceled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "stop_payment_requested",
                          "duplicate_presentment",
                          "not_authorized",
                          "amount_mismatch",
                          "not_our_item",
                          "no_account_number_found"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is disabled.",
                          "The account number is canceled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Stop payment requested for this check.",
                          "The check was a duplicate deposit.",
                          "The check was not authorized.",
                          "The amount the receiving bank is attempting to deposit does not match the amount on the check.",
                          "The check attempting to be deposited does not belong to Increase.",
                          "The account number on the check does not exist at Increase."
                        ]
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the front of the declined check.",
                        "nullable": true
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the API File object containing an image of the back of the declined check.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason",
                      "front_image_file_id",
                      "back_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real-Time Payments Transfer Decline",
                    "description": "An Inbound Real-Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real-Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "account_restricted",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is restricted.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real-Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real-Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real-Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "An International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_name": "BERGHAIN",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_city": "BERLIN",
                      "originator_state_or_province": null,
                      "originator_postal_code": "50825",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "enum": ["fixed_to_variable", "variable_to_fixed", "fixed_to_fixed"],
                        "description": "A description of how the foreign exchange rate was calculated.",
                        "x-enum-descriptions": [
                          "The originator chose an amount in their own currency. The settled amount in USD was converted using the exchange rate.",
                          "The originator chose an amount to settle in USD. The originator's amount was variable; known only after the foreign exchange conversion.",
                          "The amount was originated and settled as a fixed amount in USD. There is no foreign exchange conversion."
                        ]
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "enum": ["foreign_exchange_rate", "foreign_exchange_reference_number", "blank"],
                        "description": "An instruction of how to interpret the `foreign_exchange_reference` field for this Transaction.",
                        "x-enum-descriptions": [
                          "The ACH file contains a foreign exchange rate.",
                          "The ACH file contains a reference to a well-known foreign exchange rate.",
                          "There is no foreign exchange for this transfer, so the `foreign_exchange_reference` field is blank."
                        ]
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "Depending on the `foreign_exchange_reference_indicator`, an exchange rate or a reference to a well-known rate.",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the destination country."
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the destination bank account."
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the foreign payment currency. For dollars, for example, this is cents."
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "A reference number in the foreign banking infrastructure.",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "enum": [
                          "annuity",
                          "business_or_commercial",
                          "deposit",
                          "loan",
                          "miscellaneous",
                          "mortgage",
                          "pension",
                          "remittance",
                          "rent_or_lease",
                          "salary_or_payroll",
                          "tax",
                          "accounts_receivable",
                          "back_office_conversion",
                          "machine_transfer",
                          "point_of_purchase",
                          "point_of_sale",
                          "represented_check",
                          "shared_network_transaction",
                          "telphone_initiated",
                          "internet_initiated"
                        ],
                        "description": "The type of transfer. Set by the originator.",
                        "x-enum-descriptions": [
                          "Sent as `ANN` in the Nacha file.",
                          "Sent as `BUS` in the Nacha file.",
                          "Sent as `DEP` in the Nacha file.",
                          "Sent as `LOA` in the Nacha file.",
                          "Sent as `MIS` in the Nacha file.",
                          "Sent as `MOR` in the Nacha file.",
                          "Sent as `PEN` in the Nacha file.",
                          "Sent as `REM` in the Nacha file.",
                          "Sent as `RLS` in the Nacha file.",
                          "Sent as `SAL` in the Nacha file.",
                          "Sent as `TAX` in the Nacha file.",
                          "Sent as `ARC` in the Nacha file.",
                          "Sent as `BOC` in the Nacha file.",
                          "Sent as `MTE` in the Nacha file.",
                          "Sent as `POP` in the Nacha file.",
                          "Sent as `POS` in the Nacha file.",
                          "Sent as `RCK` in the Nacha file.",
                          "Sent as `SHR` in the Nacha file.",
                          "Sent as `TEL` in the Nacha file.",
                          "Sent as `WEB` in the Nacha file."
                        ]
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the originating bank account."
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the originating bank. Sometimes this will refer to an American bank and obscure the correspondent foreign bank."
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `originating_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the originating bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originating branch country."
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": "A description field set by the originator."
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "Either the name of the originator or an intermediary money transmitter."
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_city": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete."
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "A portion of the originator address. This may be incomplete.",
                        "nullable": true
                      },
                      "originator_country": {
                        "type": "string",
                        "description": "A portion of the originator address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the originator country."
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": "An identifier for the originating company. This is generally stable across multiple ACH transfers."
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "A description field set by the originator.",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "An identification number the originator uses for the receiver.",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete."
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": "A portion of the receiver address. The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiver country."
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "A portion of the receiver address. This may be incomplete.",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": "The name of the receiver of the transfer. This is not verified by Increase."
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": "The name of the receiving bank, as set by the sending financial institution."
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "enum": ["national_clearing_system_number", "bic_code", "iban"],
                        "description": "An instruction of how to interpret the `receiving_depository_financial_institution_id` field for this Transaction.",
                        "x-enum-descriptions": [
                          "A domestic clearing system number. In the US, for example, this is the American Banking Association (ABA) routing number.",
                          "The SWIFT Bank Identifier Code (BIC) of the bank.",
                          "An International Bank Account Number."
                        ]
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": "An identifier for the receiving bank. One of an International Bank Account Number (IBAN) bank identifier, SWIFT Bank Identification Code (BIC), or a domestic identifier like a US Routing Number."
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": "The [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), Alpha-2 country code of the receiving bank country."
                      },
                      "trace_number": {
                        "type": "string",
                        "description": "A 15 digit number recorded in the Nacha file and available to both the originating and receiving bank. Along with the amount, date, and originating routing number, this can be used to identify the ACH transfer at either bank. ACH trace numbers are not unique, but are [used to correlate returns](https://increase.com/documentation/ach#returns)."
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_company_entry_description",
                      "originator_name",
                      "originator_street_address",
                      "originator_city",
                      "originator_state_or_province",
                      "originator_postal_code",
                      "originator_country",
                      "originator_identification",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "wire_decline": {
                    "type": "object",
                    "title": "Wire Decline",
                    "description": "A Wire Decline object. This field will be present in the JSON response if and only if `category` is equal to `wire_decline`.",
                    "example": {
                      "amount": 100,
                      "reason": "account_number_disabled",
                      "description": "Inbound wire transfer",
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_routing_number": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "entity_not_active",
                          "group_locked",
                          "no_account_number",
                          "transaction_not_allowed"
                        ],
                        "description": "Why the wire transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "The beneficiary account number does not exist.",
                          "The transaction is not allowed per Increase's terms."
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "An Increase-constructed description of the declined transaction."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "A free-form address field set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "A name set by the sender.",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "A free-form reference string set by the sender, to help identify the transfer.",
                        "nullable": true
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "A unique identifier available to the originating and receiving banks, commonly abbreviated as IMAD. It is created when the wire is submitted to the Fedwire service and is helpful when debugging wires with the originating bank.",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "The address of the wire originator, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "The originator of the wire, set by the sending bank.",
                        "nullable": true
                      },
                      "originator_routing_number": {
                        "type": "string",
                        "description": "The American Banking Association (ABA) routing number of the bank originating the transfer.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "A free-form message set by the wire originator.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "reason",
                      "description",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_routing_number",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "wire_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": ["declined_transaction"],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": ["inbound_real_time_payments_transfer_simulation_result"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`."
          }
        },
        "required": ["transaction", "declined_transaction", "type"],
        "x-title-plural": "Inbound Real-Time Payments Transfer Simulation Results"
      },
      "inbound_funds_hold": {
        "type": "object",
        "title": "Inbound Funds Hold",
        "description": "We hold funds for certain transaction types to account for return windows where funds might still be clawed back by the sending institution.",
        "example": {
          "id": "inbound_funds_hold_9vuasmywdo7xb3zt4071",
          "amount": 100,
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "automatically_releases_at": "2020-01-31T23:59:59Z",
          "released_at": null,
          "status": "held",
          "held_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4",
          "type": "inbound_funds_hold"
        },
        "properties": {
          "id": { "type": "string", "description": "The Inbound Funds Hold identifier." },
          "amount": {
            "type": "integer",
            "description": "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the hold was created."
          },
          "currency": {
            "type": "string",
            "enum": ["CAD", "CHF", "EUR", "GBP", "JPY", "USD"],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "automatically_releases_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the hold will be released automatically. Certain conditions may cause it to be released before this time."
          },
          "released_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the hold was released (if it has been released).",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["held", "complete"],
            "description": "The status of the hold.",
            "x-enum-descriptions": ["Funds are still being held.", "Funds have been released."]
          },
          "held_transaction_id": {
            "type": "string",
            "description": "The ID of the Transaction for which funds were held.",
            "nullable": true
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The ID of the Pending Transaction representing the held funds.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": ["inbound_funds_hold"],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_funds_hold`."
          }
        },
        "required": [
          "id",
          "amount",
          "created_at",
          "currency",
          "automatically_releases_at",
          "released_at",
          "status",
          "held_transaction_id",
          "pending_transaction_id",
          "type"
        ],
        "x-title-plural": "Inbound Funds Holds"
      },
      "routing_number": {
        "type": "object",
        "title": "Routing Number",
        "description": "Routing numbers are used to identify your bank in a financial transaction.",
        "example": {
          "name": "Chase",
          "routing_number": "021000021",
          "type": "routing_number",
          "ach_transfers": "supported",
          "real_time_payments_transfers": "supported",
          "wire_transfers": "supported"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the financial institution belonging to a routing number."
          },
          "routing_number": { "type": "string", "description": "The nine digit routing number identifier." },
          "type": {
            "type": "string",
            "enum": ["routing_number"],
            "description": "A constant representing the object's type. For this resource it will always be `routing_number`."
          },
          "ach_transfers": {
            "type": "string",
            "enum": ["supported", "not_supported"],
            "description": "This routing number's support for ACH Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          },
          "real_time_payments_transfers": {
            "type": "string",
            "enum": ["supported", "not_supported"],
            "description": "This routing number's support for Real-Time Payments Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          },
          "wire_transfers": {
            "type": "string",
            "enum": ["supported", "not_supported"],
            "description": "This routing number's support for Wire Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          }
        },
        "required": [
          "name",
          "routing_number",
          "type",
          "ach_transfers",
          "real_time_payments_transfers",
          "wire_transfers"
        ],
        "x-title-plural": "Routing Numbers",
        "x-tag": "Routing Numbers"
      },
      "supplemental_document": {
        "type": "object",
        "title": "Supplemental Document",
        "description": "Supplemental Documents are uploaded files connected to an Entity during onboarding.",
        "example": {
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "created_at": "2020-01-31T23:59:59Z",
          "type": "entity_supplemental_document"
        },
        "properties": {
          "file_id": { "type": "string", "description": "The File containing the document." },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Supplemental Document was created."
          },
          "type": {
            "type": "string",
            "enum": ["entity_supplemental_document"],
            "description": "A constant representing the object's type. For this resource it will always be `entity_supplemental_document`."
          }
        },
        "required": ["file_id", "created_at", "type"],
        "x-title-plural": "Supplemental Documents",
        "x-tag": "Supplemental Documents"
      },
      "error": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["api_method_not_found_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [404] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["environment_mismatch_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [403] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["idempotency_conflict_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [409] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["idempotency_unprocessable_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [422] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["insufficient_permissions_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [403] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["internal_server_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [500] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["invalid_api_key_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [401] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["invalid_operation_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [409] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["invalid_parameters_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [400] },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Errors Element",
                  "properties": {},
                  "x-title-plural": "Errors Elements"
                },
                "description": "All errors related to parsing the request parameters."
              }
            },
            "required": ["type", "title", "detail", "status", "errors"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["malformed_request_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [400] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["object_not_found_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [404] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["private_feature_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [403] }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["rate_limited_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [429] },
              "retry_after": { "type": "integer", "description": "", "nullable": true }
            },
            "required": ["type", "title", "detail", "status"]
          },
          {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["unique_identifier_already_exists_error"] },
              "title": { "type": "string" },
              "detail": { "type": "string", "nullable": true },
              "status": { "type": "integer", "enum": [409] },
              "resource_id": { "type": "string", "description": "" }
            },
            "required": ["type", "title", "detail", "status", "resource_id"]
          }
        ]
      },
      "point_of_service_entry_mode": {
        "type": "string",
        "enum": [
          "unknown",
          "manual",
          "magnetic_stripe_no_cvv",
          "optical_code",
          "integrated_circuit_card",
          "contactless",
          "credential_on_file",
          "magnetic_stripe",
          "contactless_magnetic_stripe",
          "integrated_circuit_card_no_cvv"
        ],
        "description": "The method used to enter the cardholder's primary account number and card expiration date.",
        "nullable": true,
        "x-enum-descriptions": [
          "Unknown",
          "Manual key entry",
          "Magnetic stripe read, without card verification value",
          "Optical code",
          "Contact chip card",
          "Contactless read of chip card",
          "Transaction initiated using a credential that has previously been stored on file",
          "Magnetic stripe read",
          "Contactless read of magnetic stripe data",
          "Contact chip card, without card verification value"
        ]
      }
    },
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } }
  }
}